project_name,github_link,readme_documentation_score,commit_activity_score,dfx_json_score,total_score,readme_documentation_comments,commit_activity_comments,dfx_json_comments
SudhanshuYadav174/AgriCart,https://github.com/SudhanshuYadav174/AgriCart.git,1,2,1,4,"The provided README fragment is extremely limited. It contains only a brief greeting, a single command (`npm run lint`), a note about conventional commits, and a short security note. It lacks a clear project description, any setup instructions for local development (beyond linting), integration or usage guides, and contribution guidelines. The overall structure is minimal, and there is insufficient information for a user or contributor to understand, build, or contribute to the project. Consequently, it falls into the “Very Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The week introduced the full AgriQCert application, adding a React front‑end with dozens of UI components and pages (dashboards, auth, certificate verification, etc.), Supabase backend functions, migrations, and a Motoko canister for the passport registry. It also added comprehensive deployment tooling for the Internet Computer, including .dfx local network configuration, PowerShell/batch/install scripts, and new npm scripts for local and ICP deployment. Together these changes establish the core product and enable building and deploying it to both a local DFX environment and the ICP mainnet.; Week of 2025-09-15: Implemented dual authentication by adding Internet Identity (ICP) support: introduced the `useICAuth` hook, updated environment variables and dependencies, and integrated IC auth checks into guards, header, role handling, and the exporter dashboard. Enhanced the login page with an IC login button and adjusted redirects to accommodate both Supabase and IC users. Minor internal file renames and timestamp updates were also applied.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/easydapp,https://github.com/easydapp,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
NeteamIndustry/Modl-Phownership,https://github.com/NeteamIndustry/Modl-Phownership,2,2,1,5,"The README provides a detailed overview of the Motoko canister API, CLI usage examples, and external watermark/verify endpoints, as well as a brief mainnet deployment snippet. However, it lacks several essential elements for comprehensive documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we rolled out a redesigned UI and added a “GetAll Verified Photos” feature, while completing the Motoko backend setup for verification and workflow management and removing an unused agent component. Minor updates and bug fixes were also applied. Together, these changes enhance the user experience, expand photo‑verification capabilities, and streamline the backend infrastructure.; Week of 2025-09-22: Updated the README.md with a comprehensive project overview, including detailed architecture diagrams, backend/frontend descriptions, deployment IDs, and prerequisite information. This documentation overhaul clarifies how the Motoko registry canister, Vite frontend, and external Python watermark/verify service interact. No code changes were introduced, so the functional impact is limited to improved developer guidance.",dfx.json file found - indicates ICP/Dfinity project structure
Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,https://github.com/Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,3,0,1,4,"The README provides a solid high‑level overview of the project—clearly stating the problem, the proposed solution, and a step‑by‑step explanation of how the system works. The visual badges and introductory sections are well‑formatted and the language is generally clear.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
552020/futura_alpha_icp,https://github.com/552020/futura_alpha_icp,3,3,1,7,"The README provides a clear project description and fairly detailed local‑development setup instructions, including cloning with submodules, environment configuration, DFX startup, canister deployment, and how to run the Next.js front‑end. It also lists the deployed canister IDs and URLs, which is helpful for testing the live service.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we completed the migration of capsule, gallery, and memory storage to a unified capsule‑store API, introduced comprehensive CRUD endpoints (capsules, galleries, memories) with standardized `Result<T, Error>` error handling, and added new capabilities such as idempotent memory creation, `capsules_bind_neon` resource binding, and advanced gallery synchronization. We refactored modules, consolidated test utilities, expanded documentation, and removed obsolete code, resulting in a cleaner, more maintainable codebase with improved performance, reliability, and production readiness. Overall, the changes deliver full feature completeness, consistent APIs across backend and frontend, and a solid foundation for the next deployment phases.; Week of 2025-09-08: Implemented a new llama‑3.1‑8b‑dreams model with an OpenAI‑compatible completions endpoint (including a “completion kind” and thetaCompletions functions), updated demo routing, and cleaned up TypeScript/ESLint errors to deliver a production‑ready build. Added a fully type‑safe ICP inline memory creation flow with real backend calls, auth pre‑check, proper Result handling, SSR‑safe initialization, and IndexedDB build fixes, plus a database‑constraint audit script for Postgres schema‑drift detection integrated into CI. Minor updates and fixes rounded out the work, improving overall feature reliability, build stability, and operational readiness.; Week of 2025-09-15: Implemented a production‑ready Vercel Blob grant flow with ngrok integration, client‑side upload handling, a secure grant endpoint, automatic chunking, Sharp image processing, extensive documentation, and backend fixes (UUID type mismatches, JWT callback syntax, folder‑relation bugs, FormData double‑parsing). Added a unified `POST /api/memories` endpoint with a richer schema (tags, people, likes, comments) that overhauled the memory feature, and resolved a React hydration mismatch in Radix UI components while expanding error‑handling documentation. Together these changes provide a robust, scalable file‑upload solution, broaden social functionality, and markedly improve stability and developer experience.; Week of 2025-09-22: Documentation was reorganized: the root docs folder was removed and its files moved into src/nextjs/docs, and the README was restored to its detailed version after a brief simplification. IDE‑specific settings were cleaned up by deleting .vscode/settings.json and adding .vscode/ to .gitignore. No functional code changes were introduced this week.",dfx.json file found - indicates ICP/Dfinity project structure
nitinc264/WCHL-National-Round,https://github.com/nitinc264/WCHL-National-Round,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
onicai/funnAI,https://github.com/onicai/funnAI,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Ananya-Mittal/Elira_WCHL,https://github.com/Ananya-Mittal/Elira_WCHL.git,3,2,0,5,"The README provides a clear and well‑structured overview of the project’s vision, target audience, platform concept, key features, tech stack, and social impact. The formatting is clean and the language is generally grammatical. However, it lacks essential developer‑focused information: there are no setup or installation instructions for running the project locally, no integration or API usage guide, and no contribution guidelines (e.g., how to submit pull requests, coding standards, or issue reporting). Because the documentation covers the high‑level description but is missing these critical elements for contributors and developers, it falls into the “Fair” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Added the new ""Elira"" feature, implementing both front‑end and back‑end components, and updated language support throughout the application.; Week of 2025-09-22: This week introduced a major UI overhaul for the seller experience: the dashboard component was refactored with new Recharts visualizations, dark‑mode support, collapsible sidebar, notifications and expanded state handling, while its old CSS was removed and replaced with a fresh style. The seller signup flow was redesigned with additional fields, password‑strength feedback, terms acceptance and a modern card layout, and the login redirect was updated to the new dashboard route. Supporting updates added new dependencies (es‑toolkit, recharts, TypeScript) and expanded the DigitalLearning component with a curated list of women‑entrepreneur videos.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Mercatura01/TURNX,https://github.com/Mercatura01/TURNX,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Y0sefTamer/care_link,https://github.com/Y0sefTamer/care_link,3,2,1,6,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week a new Rust canister, **dashboard_backend**, was added—including its Cargo.toml, source code, candid interface, and canister ID file—and integrated into the workspace and dfx configuration. Supporting dependencies (e.g., ic‑stable‑structures) were added to Cargo.lock, and the project’s member list was updated to include the new backend. The changes introduce a dedicated backend service for the dashboard feature.; Week of 2025-09-15: This week we added full patient management to the dashboard—including create, update, and rename‑consistent delete capabilities—and enabled cross‑canister fetching of patients, nurses, and bookings to improve data synchronization. We also introduced a new booking system by annotating `confirm_booking` with `#[ic_cdk::update]`, fixing its candid interface, updating the `care_link_backend.did` definition, and refreshing the README for deployment readiness. Together, these enhancements expand core functionality, streamline inter‑service data flow, and prepare the platform for production use.; Week of 2025-09-22: This week the frontend was dramatically expanded with many new user pages—including Dashboard, NursesList, Booking, Messaging, Pharmacy, Shopping, Radiology, Medication Management, and related components—and corresponding admin messaging pages, with routes, navigation links, and UI updates to the Navbar, Footer, and DashboardSidebar to support them. New visual assets were added, the landing layout now includes a footer, and the AuthContext logout logic was tightened to clear local storage. The README was also rewritten to present a detailed problem statement, solution overview, and key feature list, reflecting the broader functionality now available.",dfx.json file found - indicates ICP/Dfinity project structure
EmekaAgara/rwa-app,https://github.com/EmekaAgara/rwa-app,3,1,1,5,"The README provides a solid project overview, lists key features, outlines the tech stack, and includes a clear project‑structure diagram. It also offers practical setup instructions for local development (dependency installation, dfx start, deployment, running the frontend server, and testing). However, it lacks several important elements: there are no contribution guidelines (e.g., code style, pull‑request process), no explicit integration guide for consuming the canisters or the AI agent, and limited details on required environment variables or configuration steps. While the overall clarity and formatting are decent, the missing sections prevent it from reaching a “good” rating. Hence it falls into the “fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the Internet Identity integration was upgraded to use the new “https://id.ai” provider, reflected in the WalletConnect components and the InternetIdentity UI. The backend RWA actor was converted to a persistent actor and its state maps were made flexible, fixing a persistence bug. Additionally, a full copy of the main Motoko file was added to the repository to support these changes.",dfx.json file found - indicates ICP/Dfinity project structure
jaibhedia/stakecommerce,https://github.com/jaibhedia/stakecommerce,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
https://github.com/Appic-Solutions,https://github.com/Appic-Solutions,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
rxshil09/DAO_launcher_kit,https://github.com/rxshil09/DAO_launcher_kit,2,2,1,5,"The README provides a fairly detailed overview of the project's features and its backend/frontend folder structure, which is helpful for understanding what the system does and how it is organized. However, it lacks several critical components required for high‑quality documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we added an analytics and registry canister with platform‑metrics to the DAO launcher kit, delivering a full DAO analytics system that collects, reports, and documents usage data for better performance insight. We also introduced a DAO discovery and exploration feature on the explore route, enabling users to find and browse DAOs more easily. Minor bug fixes and refinements were applied throughout, improving overall stability and usability.; Week of 2025-09-22: Added support for an ICRC‑1/2 token ledger, introducing new token functionality to the project. Also performed repository cleanup by removing unused files. This enhances the system’s capabilities while streamlining the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
evoker-labs/vex,https://github.com/evoker-labs/vex,2,1,1,4,"The README provides a solid high‑level description of the VEX platform, its problem space, solution, market opportunity, business model, and competitive advantages. The sections are well‑structured, clearly written, and formatted with headings, tables, and bullet points, which aids readability.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week we added several UI enhancements—including an embedded responsive YouTube pitch video, Tailwind CSS and Framer Motion styling, a smooth‑scroll navigation system, a new asset‑handling feature with a conditional‑class helper, and expanded the data schema with review‑platform models. The CI/CD pipeline was overhauled: broken PDF links were fixed, caching and SHA‑256 hashing were introduced to skip unnecessary builds, and a reliable GitHub Pages deployment workflow with proper permissions, artifact handling, and build‑output caching was implemented. Documentation, configuration, and dependency management were also cleaned up, improving build stability and the overall developer experience.",dfx.json file found - indicates ICP/Dfinity project structure
Ghostkeys-App/ghostkeys-app,https://github.com/Ghostkeys-App/ghostkeys-app,3,2,1,6,"The README provides a solid project overview, clear architecture diagrams, and a “Quick Start (Local Dev)” section that hints at setup instructions (Prerequisites, Run). It explains what GhostKeys is, its security model, and the core components, giving readers a good sense of the system. However, the setup instructions are incomplete in the excerpt (no concrete commands or step‑by‑step guidance), there is no dedicated integration guide for using the vault from other applications, and there are no contribution guidelines or instructions for developers who want to submit patches. The overall structure and formatting are clear, but the missing detailed onboarding and contribution information keep the documentation from reaching a higher rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week a Chrome‑extension MVP was added, providing background and content scripts, a popup UI, manifest and icons. The partner‑iframe embed was built out, including a new SDK, environment‑aware Vite configuration, updated bridge messaging, tighter CSP headers and an example demo. The main frontend gained a new IdpPopup component and route, expanded theme styles for the popup, and refined identity handling and build scripts.; Week of 2025-09-15: This week we rolled out extensive UI and profile enhancements—including a new settings overlay, redesigned pop‑ups, multi‑identity profile selection with logout/add‑profile modals and prompts for switching users—while also integrating a partner‑iframe feature and fixing login handling for special characters. We added robust data handling capabilities such as serializers, vault‑name syncing, encrypted serialization for both individual and global synchronization (including spreadsheet columns) and a new spreadsheet structure to support decryption. Finally, the build pipeline was rebuilt with scripted workflows, Junobuild‑DIDC integration, tag‑override support and cleanup scripts, delivering more reliable builds and a smoother development workflow.; Week of 2025-09-22: We promoted the pre‑prod build to production and released a Ghostkeys Chrome‑extension MVP featuring an updated popup UI, while fully integrating the external SDK and cleaning up unused code. The team also fixed the multi‑profile switching bug, refined spreadsheet data update/delete logic, and merged the SDK‑integration branch with a new Language Server Protocol summary. Documentation was refreshed with an updated table of contents, a vault sequence diagram, and LSP guidance, improving developer onboarding and overall system reliability.",dfx.json file found - indicates ICP/Dfinity project structure
mateussda/learn-on-chain,https://github.com/mateussda/learn-on-chain,3,0,1,4,"The README provides a clear project overview in Portuguese, lists the main canisters, and includes basic local‑development setup steps (starting DFX, deploying, installing frontend dependencies, and running the dev server). However, it lacks several key elements required for a higher rating: there is no integration guide or API usage instructions, no contribution guidelines (how to submit issues, pull requests, code style, testing, etc.), and the setup instructions are minimal (no mention of required Node version, DFX version, or environment variables). While the existing sections are reasonably clear and formatted, the omissions prevent the documentation from being considered “good” or “excellent.” Hence, it falls into the “fair” category.",0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
saheramr15/CargoTrace,https://github.com/saheramr15/CargoTrace,2,2,1,5,"The README provides a clear high‑level overview of the project—its purpose, key features, workflow, impact, and technology stack—so the general project description and overall clarity are good. However, it lacks essential practical information. There are no setup or installation instructions for running the code locally (e.g., cloning the repo, installing dependencies, configuring environment variables, building the smart contracts, or starting the frontend/backend). There is no integration guide explaining how external systems or users can interact with the platform (API endpoints, wallet connections, or how to submit customs codes). Contribution guidelines (how to submit issues, pull requests, code style, testing procedures) are also absent. Without these sections, developers cannot easily get the project up and running or contribute to it, which is a significant gap. Therefore, the documentation falls into the “Limited documentation with significant gaps” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered several minor updates and bug fixes across the codebase, improving stability and performance of existing features. While no major new features were added, these refinements enhance the user experience and reduce error rates.; Week of 2025-09-15: This week we introduced role‑specific dashboards (user and admin) with login support, added loan visibility to user wallets, enabled admins to fund canisters and approve loans using test tokens, and integrated Tailwind CSS for a modern UI foundation. We also refreshed the site’s content and visual design by adding “Why Choose Us”, updated “How It Works”, new problem/solution sections, hero‑section tweaks, animations, and extensive color and layout refinements while removing outdated navigation, footer elements, and unused CSS files. Collectively, these changes deliver functional enhancements for loan handling and authentication, streamline the interface, and markedly improve the overall user experience and code cleanliness.; Week of 2025-09-22: The week’s work comprised a series of minor updates and bug fixes that refined existing functionality and addressed stability issues. These changes improve overall reliability and performance across the product. No new features were introduced.",dfx.json file found - indicates ICP/Dfinity project structure
parimal-art/DeSocial,https://github.com/parimal-art/DeSocial,3,0,1,4,"The README provides a solid general project description, clear vision, problem/solution framing, feature list, tech‑stack overview, and a nice flow diagram, all well‑structured and grammatically sound. However, it lacks essential practical sections: there are no step‑by‑step setup instructions for local development (e.g., installing `dfx`, building the Rust canisters, running the React frontend, or configuring Internet Identity), no integration guide for consuming the Candid API, and no contribution guidelines (how to submit PRs, code style, testing, etc.). Because these key elements are missing, the documentation is only fair—presenting the high‑level concept but not enough to get developers up and running or to encourage community contributions.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
ColettoG/icp-ant-colony-optimization,https://github.com/ColettoG/icp-ant-colony-optimization,3,1,1,5,"The README provides clear local development setup instructions, including how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also mentions environment‑variable considerations for the frontend. However, it lacks a substantive project description—there is no explanation of what the “ant‑colony‑icp” project actually does or its purpose. There are no integration or usage guides beyond the basic commands, and there are no contribution guidelines, code‑of‑conduct, or instructions for external developers to extend or contribute to the project. The overall structure and formatting are decent, and the grammar is fine, but the missing high‑level context and contribution information keep it at a basic (fair) level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented runtime configurability for the Ant Colony Optimization backend by adding `setParameters` and `setDistances` methods and making algorithm parameters and problem space mutable, while also extending the `antColonyOptimization` service to return both the best tour and its cost. Updated the Motoko actor to expose these new functions and adjust internal state accordingly. These changes enhance flexibility and usability of the ACO service without adding or removing any files.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/icp-pulse,https://github.com/icp-pulse,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
SafeGiantJacket/CarbonX,https://github.com/SafeGiantJacket/CarbonX,2,1,1,4,"The README provides a decent high‑level overview of the project (goals, architecture, IoT and AI components) and includes some useful links to demos. However, it lacks essential practical information. There are no setup or installation instructions for getting the code running locally, no step‑by‑step guide for developers to build, test, or deploy the Motoko canisters, and no contribution guidelines (e.g., how to submit PRs, coding standards, issue reporting). Integration instructions are only implicit in the IoT section and are not presented as a clear “how‑to” for external developers. Overall the document is missing several critical sections required for a usable README, resulting in a limited documentation quality.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented a suite of professional‑grade features, adding fractional credit handling, royalty logic, audit/history tracking, and metadata‑update endpoints across all canisters (Issuance, Marketplace, Registry, Retirement). Added extensive frontend UI components—including activity feed, notifications, batch actions, export/reporting, dark‑mode toggle, and a fractional marketplace panel—plus a canister‑actors library to integrate the new backend capabilities. Updated the README with a new pitch‑deck link and a “Final Add‑ons & Professional Features” section to document these enhancements.",dfx.json file found - indicates ICP/Dfinity project structure
