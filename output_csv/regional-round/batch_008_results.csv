project_name,github_link,readme_documentation_score,commit_activity_score,dfx_json_score,total_score,readme_documentation_comments,commit_activity_comments,dfx_json_comments
PostedApp/wchl,https://github.com/PostedApp/wchl,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
baolongt/dtrack-hackathon,https://github.com/baolongt/dtrack-hackathon,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented product tagging on both the frontend and backend, added a searchable account dashboard, and renamed the “wallet” entity to “account” throughout the UI, accompanied by UI tweaks and miscellaneous bug fixes (including the add‑button). Minor updates and additional fixes were also applied across the codebase. These changes improve data categorization, navigation, terminology consistency, and overall stability.; Week of 2025-09-15: The transaction‑history hook was refined to show up to five decimal places for USD values (instead of the previous two), enhancing currency precision in the frontend’s financial displays.",dfx.json file found - indicates ICP/Dfinity project structure
multi-system/multi-ic,https://github.com/multi-system/multi-ic,4,2,1,7,"The README provides a solid project overview, clear setup and installation steps, and detailed instructions for running the project locally and executing both unit and end‑to‑end tests. The command reference is helpful and well‑formatted. However, it lacks explicit contribution guidelines (e.g., how to submit PRs, code style, branching model) and does not include an integration guide for consuming the library or canister from other projects. Adding those sections would elevate the documentation to an “Excellent” level. Grammar and formatting are generally good.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week added new reusable UI components (Dropdown, Select, Tooltip, Aurora) and refactored the wallet sidebar to pull live token prices from the history canister via a SystemInfo context, introducing related state, imports, and UI enhancements. Minor styling and code‑quality adjustments were also made to existing components such as BasketDisplay, MultiLogo, and the App wallet button layout. Overall, the updates improve frontend interactivity, price visibility, and maintainability.; Week of 2025-09-22: Implemented a fix for the wallet deposit calculation by refactoring `WalletSidebar.tsx` to use the existing `systemInfo.multiPrice` hook instead of custom price‑fetching logic, removing redundant state and simplifying token handling. This streamlines the component, improves accuracy of deposited amounts, and reduces unnecessary API calls. No new files were added or removed.",dfx.json file found - indicates ICP/Dfinity project structure
Alkamal01/cogni-icp,https://github.com/Alkamal01/cogni-icp,3,1,1,5,"The README provides a solid project overview, a clear list of features, and a fairly detailed “Quick Start” section that covers prerequisites, cloning, installing both frontend and backend dependencies, starting the local Internet Computer replica, deploying canisters, and running the development server. This satisfies the setup‑for‑local‑development requirement.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Added a new `cloudinaryService.ts` (86 lines) to handle Cloudinary uploads using environment‑based configuration, and updated the backend `lib.rs` to eliminate hard‑coded secrets, disable canister AI calls, and adopt the same env‑driven Cloudinary settings. These changes improve security, configurability, and reduce external AI dependencies across the project.",dfx.json file found - indicates ICP/Dfinity project structure
mangekyou-labs/oreka,https://github.com/mangekyou-labs/oreka,3,1,1,5,"The README provides solid **setup instructions for local development**, including prerequisites, step‑by‑step commands for starting the replica, deploying canisters, installing frontend dependencies, and running the dev server. It also documents a specific usage flow (creating a market) and important operational notes (cycle requirements).","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the market‑listing UI was overhauled to show the newest markets first and include a manual refresh trigger, with pagination logic updated in ListMarketsMui, ListAddressOwner, and the markets page. The Internet Identity candid interface was expanded with new types and configuration fields, and environment files were updated to reference new factory and ledger canister IDs, while several ICP image assets and Next.js dependencies were added. Documentation wording was also refined.",dfx.json file found - indicates ICP/Dfinity project structure
TharunBabu-05/smart_ticket_MTC,https://github.com/TharunBabu-05/smart_ticket_MTC.git,3,2,1,6,"The README provides a clear and well‑structured project description, outlining the purpose, key features, and technical architecture of the FareGuard application. The formatting is clean, headings are logical, and the language is generally free of grammatical errors. However, it lacks essential practical information needed for developers to get the project up and running: there are no setup or installation instructions for local development, no guide on how to configure the Firebase backend, Razorpay integration, or sensor communication, and no contribution guidelines (e.g., code style, pull‑request process, issue reporting). Because the documentation covers the high‑level overview but omits these critical operational details, it falls into the “basic documentation present but missing some important elements” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered full voice ticket‑booking support, integrating speech‑to‑text and text‑to‑speech capabilities, and expanded the app to run on iOS devices. We also refined and documented the iOS build workflows, fixing configuration issues to stabilize the CI/CD pipeline. These changes improve user interaction through voice, broaden platform coverage, and increase build reliability.; Week of 2025-09-15: This week we launched a suite of new features—including a comprehensive All Reviews system with analytics widgets, a live bus‑tracking screen with real‑time Google‑Maps markers and bottom‑sheet details, a Safety Features screen offering SOS alerts and live‑location sharing, an expanded weather module with OpenWeatherMap forecasts, recommendation logic, and a compact widget, ICP blockchain wallet integration for ticket purchases, and a Usage Analytics & Personalization dashboard for travel statistics and preferences. Core UI components were refined: HomeScreen received adaptive gradients and a new weather widget, ProfileScreen added avatar selection and Firebase‑backed editing, and unified theming was applied throughout, while extensive accessibility upgrades (font‑size adjustment, gesture navigation, high‑contrast preview) and code‑base refactoring improved usability and maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
MazenMarei/Tal3a,https://github.com/MazenMarei/Tal3a,2,0,1,3,"The README provides a decent high‑level project description, branding, and a list of key features, which gives readers a sense of what Tal3a is and why it exists. However, it lacks essential practical information:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
NMsby/rotatechain,https://github.com/NMsby/rotatechain.git,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Shardul0x/WCHL,https://github.com/Shardul0x/WCHL/tree/main,1,1,1,3,"The README provides only a brief, vague list of “creators” and a contributors section followed by a license notice. It lacks a clear project description, any overview of purpose or functionality, setup or installation instructions for local development, integration or usage guides, and contribution guidelines. The formatting is minimal and there are grammatical issues (e.g., “r creators”). Overall, the documentation is insufficient for users or contributors to understand, build, or work with the project.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week’s ten commits delivered a series of incremental updates and bug fixes that refined existing functionality and improved overall system stability. The changes addressed minor issues, optimized performance, and tightened edge‑case handling across several components. As a result, the product is more reliable and responsive for users.",dfx.json file found - indicates ICP/Dfinity project structure
InteliThreeGroup/Beneficios,https://github.com/InteliThreeGroup/Beneficios,2,1,1,4,"The README provides a good high‑level overview of the project’s purpose, core features, and value proposition, and it includes useful links to the business plan, pitch deck, and demo video. However, it lacks essential practical information:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the team added a full Python test suite for the backend canisters (benefits_manager, challenge_ai, establishment, wallet) and updated .gitignore to exclude test and virtual‑environment files. Canister configuration was expanded with new IDs for challenge_ai, llmo_home and reporting, the Bitcoin canister code was refactored with clearer utility functions and comments, and the challenge_ai context was made a stable variable. Documentation was also substantially improved, adding a detailed README summary, architecture diagrams, and a table of deployed canisters.",dfx.json file found - indicates ICP/Dfinity project structure
mrarejimmyz/AVAI-CannisterAgent,https://github.com/mrarejimmyz/AVAI-CannisterAgent,2,2,1,5,"The README provides a number of useful sections (configuration snippets, use‑case commands, troubleshooting, roadmap, and a brief contribution checklist), but it falls short of a complete documentation set.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we delivered a comprehensive UI revamp—including a modern, mobile‑friendly chat interface with optimized scrolling, sticky input, typing indicators, PDF viewer, new branding assets, and refined navigation icons—while adding streaming analysis‑report and security‑analysis features. On the backend we introduced Redis‑based queue monitoring with metrics and alerts, a Redis‑Canister bridge with async WebSocket support, and a full suite of AVAI host automation scripts for Docker setup, service installation, and trigger management, alongside extensive refactoring, stronger error handling, and CI/CD stability fixes for Vercel/Vite. Together these changes boost user experience, system observability, and deployment reliability, positioning the platform for production‑grade demos and future development.; Week of 2025-09-08: This week we introduced comprehensive automation agents for browsers, canisters, and GitHub, alongside a full AVAI Audit Engine with session handling, security‑finding extraction, PDF report generation, and new audit system types and utilities for repository analysis. We also added a complete Docker setup (Dockerfile, compose file, .dockerignore), production deployment scripts, a WebSocket server, the compiled frontend bundle, updated dependencies, fixed key Motoko backend interfaces, and cleaned out test files and redundant scripts. Together these changes broaden the platform’s automation and auditing capabilities, make the codebase production‑ready, and streamline deployment and developer onboarding.; Week of 2025-09-15: This week we introduced a hybrid AI engine architecture with dedicated canisters for advanced reasoning, tool‑calling, and a new VisionEngine (Llava support), complemented by a feature‑rich HTTP client, a Cloudflare‑tunnel bridge, and an AI Orchestrator that provides health checks, statistics, error handling, and integrated logging. We also added a WebSocket test interface for AVAI, Cloudflare tunnel support for the BrowserAgent, and new TaskRouter and UnifiedManager components that streamline prompt analysis, task routing, and multi‑agent coordination, alongside code refactors for readability. Together these changes greatly expand AI capabilities, improve observability and reliability, and simplify integration and testing across the platform.",dfx.json file found - indicates ICP/Dfinity project structure
KezzyNgotho/Nisto,https://github.com/KezzyNgotho/Nisto,4,1,0,5,"The README provides a solid project overview, clear highlights, and a well‑structured quick‑start section that covers prerequisites, frontend and backend local development steps, and environment variable setup. It also outlines core features, architecture, security considerations, production deployment status, and basic development scripts. Contribution guidance is present, albeit brief (fork‑branch‑PR and a reminder about secrets). The only notable gaps are a more detailed integration guide (e.g., how to consume the backend Candid interface from other services) and deeper contribution instructions such as coding standards, testing procedures, or a CODE_OF_CONDUCT. Grammar and formatting are generally good, making the document easy to read. Overall, the documentation is comprehensive and useful, but could benefit from a few additional details to reach an “excellent” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week introduced the entire Nisto codebase, adding backend Motoko canisters (MPCService, NistoToken, SwapService, VaultChat) with deployment scripts, HTTP‑outcall support, and related configuration files, alongside a comprehensive React frontend that includes wallet, swap, vault, notification, PWA, and social‑media integration components. Extensive documentation, utility modules, and service layers were also added to support development, testing, and deployment. These additions transform the repository from an empty state into a functional foundation for the Nisto platform.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
hirwaroger/MedSeal,https://github.com/hirwaroger/MedSeal,2,2,1,5,"The README provides a solid high‑level description of the MedSeal project, its goals, and its core features (patient crisis support, NGO funding workflow, community insurance pools, etc.). The writing is clear and the badge section and headings are well‑formatted, which helps readability.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added an Admin Module to enable system administrators to manage doctors and oversee the platform. Refactored the backend into a modular architecture to improve maintainability, and packaged Medseal as an installable Progressive Web App. Updated the documentation with a clear upgrade plan for Medseal.; Week of 2025-09-08: New admin, doctor, and NGO dashboards were introduced, featuring analytics, verification tools, and case‑management capabilities. An NGO module (user_type) was added, enabling patient case management and fund‑request workflows. Minor UI issues were also resolved.; Week of 2025-09-15: The verification workflow was upgraded, enhancing its reliability. Patient medication and prescription accessibility were improved, and a bug in the Patient Case Tracker was fixed, resulting in smoother case management. Overall, these updates strengthen core patient‑care functionalities.",dfx.json file found - indicates ICP/Dfinity project structure
ClyprLab/clypr,https://github.com/ClyprLab/clypr,4,0,1,5,"The README provides solid documentation for developers. It includes clear **setup instructions** for local development (prerequisites, deployment script, frontend build steps, and how to regenerate Candid declarations). A **project description** is partially conveyed through the Architecture Snapshot and the overview of components, though a concise high‑level summary at the very top is missing. The **integration guide** is well‑covered with example TypeScript code showing how to call the canister’s methods, resolve aliases, and handle Candid option types. However, the README lacks **contribution guidelines** (no section on how to submit issues, pull requests, coding standards, or testing). Overall the structure is logical, sections are clearly titled, and the formatting is readable with code blocks and bullet points. Minor improvements—adding a brief introductory paragraph and a contribution section—would elevate it to an “Excellent” rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
nikhlu07/H.E.L.I.X,https://github.com/nikhlu07/H.E.L.I.X,2,2,1,5,"The README provides an extensive, stylistic narrative about the project's vision, back‑story, and high‑level components, which gives a sense of purpose but offers little concrete technical information. Critical documentation elements are missing:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes.; Week of 2025-09-15: The week was dedicated to repository cleanup, deleting duplicate documentation (e.g., DEPLOYMENT_SUMMARY.md, INTEGRATION_GUIDE.md), corrupted install scripts, redundant deployment scripts, and duplicate environment/requirements files. This streamlines the project structure and makes navigation easier, without adding new features.; Week of 2025-09-22: This week the frontend was overhauled to add internationalization and cultural adaptation (i18next, translation hooks, CulturalWrapper, multilingual hero section, multi‑country demo and competition modes, and updated UI cards), while the demo‑mode service was rewritten to use universal, region‑aware role definitions and permissions. At the same time, a large cleanup removed obsolete docs, auth components, and old dashboards, introduced testing tooling (Vitest) and new dependencies (heroicons, etc.), and added a small utility module. The changes expand the platform’s multi‑region demo capability, improve user experience, and streamline the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
dhaniverse/dhaniverse,https://github.com/dhaniverse/dhaniverse,0,3,1,4,No documentation assessment provided.,"3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a comprehensive ban management system—including UI components, AuthContext checks, MongoDB‑backed sessions, IP‑log storage, and redirects for banned users—alongside an AdminPage dashboard with real‑time player tracking, chat monitoring, and system status, plus enhanced connection handling and AFK detection. Added API‑driven balance loading, a mandatory asset loader with server‑side transaction hydration and analytics, upgraded chat and UI with character‑skin support, avatar customization, and persisted skin selections, and integrated real‑stock data via batch‑fetch services with validation, error fallback, and configurable symbol mappings. Polished the experience with new loading and header animations, intro disabling on specific routes, a RevealOnScroll component, a modern glowing video player, a globe icon addition, and assorted SVG and UI refinements.; Week of 2025-09-08: This week we added robust deployment tooling for frontend assets on the IC network and delivered a full Server‑Sent Events system with typed events, room management, subscription endpoints and integration tests, enabling real‑time stock data streaming and other live updates. We polished the UI with a smoother, real‑time minimap, enhanced GameHUD (online‑player tooltips, chat layout, animations, auto‑scroll) and optimized LocationTracker visibility updates, while refining NPC interaction text, onboarding flow, and repositioning the DesktopWarning component for better non‑desktop experience. Additionally, Vercel Speed Insights integration and dependency upgrades, along with cost‑estimation and cycle‑check safety measures, improve deployment reliability, performance monitoring, and overall user experience.; Week of 2025-09-15: New cross‑domain authentication was introduced, delivering JWT‑based login via Google, Magic Link and Internet Identity with HTTP‑only cookie sessions, expanded CORS origins, updated DID definitions, strict TypeScript typings, token‑refresh handling, production‑ready API URL management, and a version 1.2.0 release that also adds wallet/transaction management and achievement tracking. Front‑end work upgraded the MongoDB integration with official npm support, strict TS config and schemas, refactored imports and lazy‑loaded UI components, added navigation utilities and dedicated redirect pages, moved the landing page into a separate Next.js app, implemented analytics, SEO tweaks, dynamic API base‑URL handling, build‑script optimizations, and introduced a foundational HTTP client module. The price‑feed subsystem was refactored to use CoinGecko with robust error handling, new endpoints for historical price data, asynchronous snapshot fetching, CBOR‑encoded price‑history queries and a monitoring wrapper, greatly improving data acquisition reliability and insight.; Week of 2025-09-22: This week the team introduced a full‑featured API documentation system (docsRouter with HTML, JSON, and OpenAPI endpoints) alongside updated health‑check methods, README, contract description, and architecture diagram, greatly improving developer onboarding and visibility of backend services. They also added real‑time canister metrics and a new canister service for fetching stock and crypto data, refactored the fetching logic to use caching, and bolstered error handling, logging, and type safety across banking, transaction, and onboarding modules. Together, these changes enhance observability, reliability, and performance of the Dhaniverse Game backend.",dfx.json file found - indicates ICP/Dfinity project structure
tonybanks90/OmaxPro.Bitcoin,https://github.com/tonybanks90/OmaxPro.Bitcoin,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Legatia/DeFlow,https://github.com/Legatia/DeFlow,3,2,1,6,"The README provides solid setup instructions for local development, including prerequisites, cloning, deployment steps, and scripts for building and testing. It also outlines the project structure, lists supported DeFi protocols, and gives some business and security context, which helps a new user understand the scope of the project.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The admin monitor panel was simplified for easier use, the team management module received updates, and communication within the admin‑pool was fixed, with a forthcoming update to the team structure.; Week of 2025-09-08: This week we refreshed the UI, updating the side‑menu bar and redesigning the Deflow canvas for a cleaner layout and smoother interactions. We also enhanced tokenomics by initializing the $Flow model, revising the tokenomic plan, and adding a usage‑limit setting, while hardening wallet connectivity to require seed‑phrase‑only access for better security. These changes improve the overall user experience, strengthen security, and provide more robust token‑management capabilities.; Week of 2025-09-15: This week the Deflow node structure was reorganized and the UI received visual improvements, including the removal of the glass‑reflection effect. An attempt to introduce defi templates was made but not completed, with next steps to verify the defi notes. Overall, the changes enhance usability and set the stage for further feature refinements.",dfx.json file found - indicates ICP/Dfinity project structure
AnnsuChoudhary/StarLab-Adventure,https://github.com/AnnsuChoudhary/StarLab-Adventure,2,1,1,4,"The README provides a decent high‑level overview of the project—its purpose, key features, tech stack, and the team behind it. However, it lacks most of the critical elements needed for useful documentation. There are no setup or installation instructions for getting the project running locally (e.g., required Node version, how to install dependencies, Firebase configuration steps, or how to start a development server). An integration guide is missing; there’s no information on how to connect the app to a Firebase project, configure authentication, or use the Firestore database. The “Folder Structure” section is empty, and there are no contribution guidelines, code style conventions, or instructions for submitting pull requests. While the formatting is clean and the grammar is fine, the omission of these essential sections makes the documentation insufficient for developers or contributors. Hence, it falls into the “Poor” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week introduced a new AR‑dispersion module (ardispersion.html, .css, .js) along with its 3‑D model (triangular_prism.glb) and supporting dfx.json, and added a complete achievement UI (newachiv.html, .css, .js). The Firebase initialization file was updated to restore the project’s configuration after a prior removal, and the newachiv.js file was cleaned of its hard‑coded credentials. Together these changes expand the app with AR functionality and achievement tracking while fixing the Firebase setup.",dfx.json file found - indicates ICP/Dfinity project structure
3bdoredaa2244/HarvestX_ICP_Hackathon,https://github.com/3bdoredaa2244/HarvestX_ICP_Hackathon,3,1,1,5,"The README provides a solid project overview, clear feature list, and detailed local‑development setup steps (prerequisites, installation, deployment, and environment variables). The general description and structure are well‑organized and the formatting is clean. However, it lacks several key elements needed for a higher rating: there are no contribution guidelines, no explicit integration guide for consuming the platform’s APIs or SDKs, and the API reference is incomplete (the table for farmer endpoints is cut off). While the existing sections are clear and grammatically sound, the missing contribution and integration information prevent it from achieving a “Good” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The week introduced the complete HarvestX application, adding a Rust backend canister (Cargo files, interface definitions, and core library code) and a full React/TypeScript frontend with Tailwind styling, routing, and a suite of reusable UI components. New pages such as farmer and investor dashboards, marketplace, listing creation, profile, and registration were added, alongside services for ICP integration and mock data. This initial push establishes the core infrastructure and user‑facing features for the African stage rollout.",dfx.json file found - indicates ICP/Dfinity project structure
torpadeka/mitra-chain,https://github.com/torpadeka/mitra-chain,3,3,1,7,"The README provides a clear and well‑structured project overview, including a strong description of the problem, solution, architecture, and user flow, and it uses good formatting and visuals. However, it lacks essential practical sections: there are no setup or installation instructions for running the project locally, no guide on how to integrate the platform or its APIs, and no contribution guidelines for developers who want to help. Because of these significant gaps, the documentation is only fair—it conveys the concept well but does not support developers in getting started or contributing.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented extensive UI refinements across the Home, Profile, and Register pages—including a new theme toggle, navbar fixes, and a placeholder for missing images—while streamlining the registration flow and correcting profile redirection when the user is null. Minor UI bugs were also resolved, improving visual consistency and overall user experience throughout the app.; Week of 2025-09-08: This week we delivered minor updates and fixes, refining existing functionality and addressing bugs to improve overall stability and performance.; Week of 2025-09-15: Implemented AI functionality while fixing a “user not registered” error, completed the NFT feature, and resolved issues in the authentication context. These changes enhance user onboarding, add new AI capabilities, and improve overall authentication stability.; Week of 2025-09-22: Added Plug wallet integration as a new feature and resolved bugs in Cloudinary handling and the franchise tab display, enhancing app functionality and stability. Minor updates and additional fixes were also applied across the codebase. Overall, these changes improve user experience and reinforce the reliability of existing features.",dfx.json file found - indicates ICP/Dfinity project structure
CharClub/marketplace,https://github.com/CharClub/marketplace,3,2,1,6,"The README provides solid local‑development setup instructions: it lists the necessary `dfx` commands, how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also includes a helpful note about frontend environment variables. However, the document lacks a meaningful project description—aside from a generic welcome message it does not explain what the CharclubMarketplace does, its architecture, or its core features. There is no integration guide (e.g., how to consume the canister APIs from other services) and no contribution guidelines (no code‑style conventions, issue‑reporting process, or pull‑request instructions). The overall structure and formatting are clear, and the grammar is acceptable, but the missing substantive sections keep the documentation at a “fair” level rather than “good” or “excellent.”","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Added GitHub issue templates for bug reports and feature requests, and introduced a CONTRIBUTING.md file to guide contributors. These documentation additions enhance project onboarding and issue reporting processes without altering existing code.; Week of 2025-09-15: Removed the unused `call.md` file and refined the NFT detail page’s input handling: added empty‑value checks, stricter numeric validation, and ensured the listing price is stored as a string, plus minor cleanup of transfer‑related handlers and spacing. These updates improve data integrity and user experience without adding new features. Overall, the week focused on cleanup and polishing existing UI logic.",dfx.json file found - indicates ICP/Dfinity project structure
