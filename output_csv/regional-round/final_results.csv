project_name,github_link,readme_documentation_score,commit_activity_score,dfx_json_score,total_score,readme_documentation_comments,commit_activity_comments,dfx_json_comments
Darthpool9900/gap_project,https://github.com/Darthpool9900/gap_project,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AnnsuChoudhary/StarLab-Adventure,https://github.com/AnnsuChoudhary/StarLab-Adventure,3,0,1,4,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
sambhavverma2004/Sentinel-ICP,https://github.com/sambhavverma2004/Sentinel-ICP/tree/main,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AbdulrahmanFiala/chain_notary,https://github.com/AbdulrahmanFiala/chain_notary,3,3,1,7,"The README provides a clear project overview, outlines target users, describes core functionality, and includes contribution guidelines and a link to a separate BUILD.md for installation details. However, it lacks concrete setup instructions within the file itself (e.g., how to install dependencies, run the project locally, or build the backend), and there is no integration guide or API usage examples for developers who might want to consume the service. The structure and grammar are generally good, but the missing on‑boarding steps prevent it from reaching a higher rating. Overall, it offers basic documentation but falls short on essential developer‑facing details.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added deterministic response handling for node consensus, integrated Internet Identity with enhanced user and admin management (including unlinking users from institutions), and built a robust stable storage system that preserves data across upgrades and provides graceful error handling. We also introduced numeric‑formatting for form inputs, renamed utility functions for clearer naming, and fixed several stability issues such as stable‑memory initialization, an identifier‑generation bug, and the removal of an obsolete collection model. Together, these updates improve canister reliability, deployment stability, data presentation, and overall code readability.; Week of 2025-09-08: This week we added experimental non‑replicated outcall handling, a memory‑wipe tracking system with persistent logging and Discord webhook alerts, a super‑admin function to link users to institutions, a full Redux‑based Dfinity authentication flow, and a UserAccount UI with Profile, Settings, and DocumentHistory tabs backed by nested protected routes. We also introduced backend enhancements such as principal‑ID retrieval, structured document‑summary responses from `get_documents_by_owner`, refactored static API‑key handling, timestamp utilities, canister lifecycle management, and centralized anonymous‑user auth checks for improved security and configurability. Finally, Cypress testing support and updated deployment scripts were added, boosting test coverage, deployment reliability, and overall code maintainability while strengthening admin management and system robustness.; Week of 2025-09-15: This week we delivered major new functionality, including a full XBRL parser and viewer with auto‑fill upload, a complete user registration/authentication system with protected routes, an Institutions dashboard with table view, services and routing, and a `whoami` query plus extended user‑profile fields. We also added operational improvements such as automated local deployment with identity setup, CI/CD pipelines for mainnet, backend Candid interfaces, cycle‑balance monitoring via Discord webhooks, memory monitoring, disabled an expensive heartbeat, switched storage to bincode, and extensive linting, testing and code‑cleanup work. Together these changes expand core features, enhance security and observability, reduce resource usage and cycle costs, and streamline the build and deployment process.",dfx.json file found - indicates ICP/Dfinity project structure
Alkamal01/cogni-icp,https://github.com/Alkamal01/cogni-icp,3,0,1,4,The README excerpt provides a solid project description through its “Core Features” section and includes useful setup instructions for running the development server as well as a clear project‑structure diagram. The formatting is clean and the sections are well‑organized.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
YANSHdiv/Automated-AC,https://github.com/YANSHdiv/Automated-AC,3,0,0,3,"The README provides a solid project overview, a clear list of features, and a decent “How it Works” section that explains the inputs, simulation, decision logic, and output. Basic setup instructions for a local development environment are included (virtual‑environment creation and dependency installation), which is helpful for getting the code running.",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Ujjwal-sinha/InsureBTC,https://github.com/Ujjwal-sinha/InsureBTC,2,0,1,3,"The README provides a very limited amount of information. It includes a canister URL and a brief list of frontend integration functions with their parameters and return values, which gives a minimal sense of how to call the backend. However, it lacks virtually all of the essential documentation elements:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
parimal-art/DeSocial,https://github.com/parimal-art/DeSocial,3,0,1,4,"The README provides a solid general description of the project—its vision, the problems it addresses, the solution on ICP, key features, tech stack, and a helpful flow diagram. The structure is clear and the language is mostly well‑written. However, it lacks essential practical sections: there are no step‑by‑step setup instructions for getting the canisters and React frontend running locally (e.g., installing `dfx`, building Rust canisters, running `npm install`/`npm start`), no integration guide for using the Candid interface, and no contribution guidelines (how to submit PRs, code style, testing, etc.). Because these important elements are missing, the documentation is only fair.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
fradiumofficial/fradium,https://github.com/fradiumofficial/fradium,3,3,1,7,"The README provides a decent overview of what the project does (risk‑checking wallet/extension, cross‑chain support, AI analytics) and includes a clear quick‑start guide for building and loading the browser extension. The screenshots and feature list help users understand the product.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added several user‑facing features—including balance fetching, a receive modal, new landing‑page card rows with a purple button component, and animated wallet and page‑transition effects—while refactoring navigation and button components to use Tailwind CSS and migrating the footer and landing page to Tailwind for a consistent modern UI. We also introduced a new canister to index the Fradium token and consolidated the Ethereum, Solana, and Bitcoin integrations into a single canister, removing the obsolete Mythril component. Together these updates enhance visual experience, streamline multi‑chain support, and improve code maintainability.; Week of 2025-09-08: This week the app gained comprehensive multi‑chain support (ICP, ICRC‑1, Fradium, Solana, ETH) with full ledger integration, balance fetching, and send/receive flows—including amount entry, network selection, and detailed transaction/history screens—while introducing a dedicated receive‑and‑send page, new settings UI, glass‑morphism styling, animated dashboard cards, and refined responsive modals. Advanced address‑analysis features were added, backed by an on‑chain AI canister that extracts balances, computes 40+ portfolio/DeFi metrics, and runs an ONNX classification model, and the ETH analyzer AI was also begun. Core stability was boosted through authentication and logout flows, wallet creation, deployment fixes (Vite base path, Vercel rewrites, case‑sensitivity), and a refactor that moves services into a shared library for better modularity.; Week of 2025-09-15: This week we expanded multi‑coin capabilities by adding full transaction and history support for ckETH, ckBTC, ICP, Fradium and FUM, introduced multi‑asset sending, QR‑code generation, and a new reporting workflow with address‑analysis enhancements. User experience was boosted through home‑screen upgrades (searchable assets, hide‑zero toggle, real‑time USD pricing, animations, AI‑agent UI), UI/UX fixes across the extension and wallet, and updated documentation and architecture diagrams. Backend reliability was strengthened with comprehensive unit tests, Pocket‑IC local canister simulation, automated .zip packaging, and numerous bug fixes and refactors, improving overall stability and maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
JohnBenJB/Cafe,https://github.com/JohnBenJB/Cafe/tree/mvp,3,0,1,4,"The README provides a clear high‑level description of Café, its purpose, and a nice overview of features, motivations, and upcoming work. The structure is clean, headings are well‑used, and the language is generally free of grammatical errors.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
DiegoFloresWenHao/ICP_Coder,https://github.com/DiegoFloresWenHao/ICP_Coder,3,2,1,6,"The README provides detailed step‑by‑step setup instructions for the authentication service, MCP server, and client integration (Cursor/VS Code), as well as examples for testing the REST API and CLI inference. The formatting with headings and code blocks is clear and generally well‑structured.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the project added full Motoko documentation ingestion and indexing, introducing `clone_motoko_docs.py`, `motoko_docs_ingester.py`, shared RAG utilities (`rag/base.py`), and fixing ChromaDB paths to always use the project‑root directory. A chat‑history system was also built, adding a `Conversation` model, SQLite repository, context‑injection chain, and updating the FastAPI server to accept a `conversation_id` and persist conversations. These changes expand the RAG pipeline to cover official docs and enable stateful interactions.; Week of 2025-09-15: This week the team added a secure API‑key creation endpoint with validation for the MCP server and introduced an automated cronjob to ingest Motoko repositories. They also refactored both the API and MCP servers to improve architecture and prepare them for integration with the IC‑Vibe‑Coding‑Template‑Motoko, while adding Cursor tool support to the MCP server. These changes enhance security, automate repository handling, and lay a solid foundation for upcoming feature integrations.",dfx.json file found - indicates ICP/Dfinity project structure
research-ag/hosty-live-fe,https://github.com/research-ag/hosty-live-fe,2,0,1,3,"The README provides a brief project description (“a minimal setup to get React working in Vite…”) and a fairly detailed example of how to extend the ESLint configuration, which is useful for developers who need advanced linting. However, it lacks essential elements for comprehensive documentation:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
onicai/funnAI,https://github.com/onicai/funnAI,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
BeGods/ICP-HACKATHON,https://github.com/BeGods/ICP-HACKATHON.git,3,2,1,6,"The README provides a solid high‑level description of the BeGods project, its two main components (Game Launcher and NFT Booster System), and a clear directory layout with brief explanations of each folder. The Table of Contents and the architecture diagram help readers navigate the repo.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes: added a LICENSE.txt and NOTICE.txt, and updated the README to reference the new FrogDogGames Public License. No functional code changes were introduced.; Week of 2025-09-15: Implemented a token‑index mapping/debug API and persisted NFT collection canister mappings in the backend, along with new data structures (BoosterInfo) and utility functions for retrieving NFTs across all collections. Added a booster‑NFT claim flow (frontend UI updates, claimBoosterNFT call, and related backend services) and enhanced marketplace listing handling with detailed logging. Updated scripts to create a burner identity and made various code‑cleanup and UI formatting improvements.",dfx.json file found - indicates ICP/Dfinity project structure
rahulrr-coder/karbyn,https://github.com/rahulrr-coder/karbyn,4,2,1,7,"The README provides a solid project description, clear motivation, and a concise overview of features and architecture. It includes practical setup instructions for local development (prerequisites, cloning, installing dependencies, starting the ICP replica, deploying, and running the dev server), which is a strong point. The sections on use cases, revenue model, and roadmap add useful context. However, the contribution guidelines are incomplete—they stop abruptly after “Report bugs or suggest feat,” lacking details on how to submit pull requests, coding standards, testing, or the review process. There is no explicit integration guide (e.g., how external services or other apps might consume the platform’s APIs/NFTs), which would be expected for a “5 – Excellent” score. Overall the documentation is well‑structured, clear, and mostly free of grammatical issues, but the missing detailed contribution steps and integration information keep it from the top rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the project was refactored to drop Web3Auth, biometric services, and AI‑based verification, replacing them with a simplified NFID‑based authentication flow (new NFID_AUTH_GUIDE.md, updated AuthButton, UserStatus, Header, Footer, and removal of related Web3Auth/biometric files). New lightweight UI components (LazyAI, LazyCharts) were added and the Vite build was tuned with finer chunking and dependency grouping, while unnecessary packages (Next.js, face‑api.js, Web3Auth libs) were removed from package.json. Overall the changes streamline authentication, reduce bundle size, and clean up the codebase for a leaner frontend.; Week of 2025-09-15: Implemented a functional authentication system and added MetaMask-based login support, enhancing user access security and enabling crypto‑wallet authentication.",dfx.json file found - indicates ICP/Dfinity project structure
TriplePanicLabs/grindurus-frontend-icp,https://github.com/TriplePanicLabs/grindurus-frontend-icp/tree/main,3,0,1,4,"The README provides a solid project overview, a clear directory structure, and fairly detailed local development and deployment instructions (including required tools, `npm install`, starting the replica, and deploying the canister). The sections describing the UI pages are helpful for understanding functionality.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AlBasyaar/Web3-Skillsnap-dapp,https://github.com/AlBasyaar/Web3-Skillsnap-dapp,3,2,1,6,"The README provides a solid general project description, showcases key features with screenshots, and includes links to external resources (documentation, pitch deck, demo video). However, it lacks essential elements for developers: there are no clear setup or installation instructions for local development, no integration guide, and no contribution guidelines. The “Requirements (for local development)” section is incomplete, and there’s no step‑by‑step guidance on how to get the project running or how others can contribute. Grammar and formatting are generally acceptable, but the missing core documentation reduces its overall usefulness, placing it at a “Fair” level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added Dockerfile and docker‑compose.yaml to enable containerized development and deployment. Enhanced the AuthForm component to create a DFINITY HttpAgent and backend actor using the logged‑in Internet Identity, storing the actor globally for subsequent canister interactions. These updates introduce container support and integrate front‑end authentication with the backend canister.; Week of 2025-09-08: Implemented protected routing and added two new pages—Recommendation and Profile—while updating the navigation (App, Navbar, Sidebar) to replace old links with Dashboard, Recommendation, and Profile entries. Enhanced the authentication flow (AuthForm) and streamlined backend calls in the personality assessment component, including new html2canvas and file‑saver imports. These changes expand core functionality with user‑specific features and improve route security and UI consistency.; Week of 2025-09-15: This week we introduced AI chat, course functionality, and a new authentication system, added backend enhancements, and refreshed the UI for menu profile and the AI, dashboard, job, and profile sections. Minor updates and fixes were applied throughout the codebase, and documentation was clarified with clearer local‑development instructions and a console‑log cleanup. Together, these changes expand core capabilities, improve usability, and streamline developer onboarding.",dfx.json file found - indicates ICP/Dfinity project structure
Bonded2/Bonded-App,https://github.com/Bonded2/Bonded-App,4,1,1,6,"The README provides a solid project overview, clear architecture diagram, and a comprehensive “Getting Started” section that walks a developer through local setup (prerequisites, cloning, dependency installation, starting a local ICP network, deploying the canister, generating frontend bindings, configuring the environment, and running the dev server). It also includes deployment instructions, a project‑structure diagram, separate sections for frontend/backend development, testing commands, and a concise contribution guide.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: This week the frontend received a comprehensive UI overhaul, standardizing back‑button components across many screens with larger, responsive, and interactive styles. New backend integration was added by extending the API service with a `get_timeline` method and a corresponding `fetchTimeline` helper, and the registration flow was updated to use a freshly‑initialized ICP user service. Additionally, utility scripts (`fix-dev-issues.sh`, `aiCdnLoader.js`, `nodePolyfills.js`) were introduced to streamline development.",dfx.json file found - indicates ICP/Dfinity project structure
saheramr15/CargoTrace,https://github.com/saheramr15/CargoTrace,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week’s work focused on minor updates and bug fixes across the codebase, refining existing functionality and addressing reported issues. The changes improve overall stability and performance without introducing new features. As a result, the product is more reliable and offers a smoother user experience.; Week of 2025-09-15: This week we introduced major new functionality, adding user and admin dashboards with loan transactions visible in wallets, admin canister‑funding and loan‑approval using test tokens, and a streamlined login flow with updated navigation and footer. We also integrated Tailwind CSS, refreshed the landing page with new “Why Choose Us,” “How It Works,” and problem‑solution sections plus additional animations and visual polish, and performed extensive CSS cleanup and minor UI tweaks. Together, these updates enhance financial features, improve the overall user experience, and modernize both the codebase and design.",dfx.json file found - indicates ICP/Dfinity project structure
Kyrylog/proof-of-recycling,https://github.com/Kyrylog/proof-of-recycling/,3,0,1,4,"The README provides a clear general description of the project, its purpose, and the high‑level workflow. It includes useful local‑development setup instructions, both via the provided `Makefile` and the raw `dfx` commands, as well as steps to run the frontend in watch mode. The project structure and unique features are listed, and there are links to a presentation, demo video, and deployed instance.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
demigohu/Fintrack_new,https://github.com/demigohu/Fintrack_new.git,2,2,1,5,"The README provides a solid high‑level overview of the FinTrack Protocol, its value proposition, and a detailed list of features, which satisfies the “general project description” criterion. However, it lacks essential practical information: there are no setup or local development instructions, no guide on how to integrate the protocol into other projects, and no contribution guidelines for developers. The architecture diagram is incomplete, and the document ends abruptly, indicating missing sections. While the formatting and grammar are generally good, the significant gaps in actionable documentation keep the overall quality at a limited level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Added a new Bridge page and introduced Budget and Goals functionality. Updated the Deposit page, removed the Withdraw page, and refined transaction handling. These changes expand financial features while streamlining the user interface.; Week of 2025-09-15: Added a KongSwap implementation with IC​RC‑1 token support and enhanced the front‑end by introducing a CoinGecko API, ERC‑20 balance display, and migration readiness. Completed an initial Uniswap integration, though it still requires redesign. Overall, the week focused on expanding swap functionality, supporting additional token standards, and improving UI/API features.",dfx.json file found - indicates ICP/Dfinity project structure
Nimakra/Climatio,https://github.com/Nimakra/Climatio,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
cultureic/ckPayment,https://github.com/cultureic/ckPayment,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
mangekyou-labs/oreka,https://github.com/mangekyou-labs/oreka,3,0,1,4,"The README provides a solid high‑level overview, key features, architecture diagram, and a brief tech stack, which gives readers a good sense of what the project does. It includes some prerequisites for local development, but the “Getting Started” section is incomplete (the steps stop after “1. Start the local replica:” with no further commands, build instructions, or deployment steps). There is no integration guide for using the market canisters in other projects, nor any contribution guidelines, code of conduct, or instructions for running tests. Grammar and formatting are generally clear, but the missing practical setup details and contribution information keep the documentation at a “fair” level rather than “good” or “excellent.”",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Sid31/datalab-ai,https://github.com/Sid31/datalab-ai,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
EmekaAgara/rwa-app,https://github.com/EmekaAgara/rwa-app,3,1,1,5,"The README provides a solid project overview, clear key‑feature list, tech‑stack table, and a helpful project‑structure diagram. It includes basic local‑development setup steps (dependency installation, starting the ICP replica, deploying canisters, running the frontend server, and running tests). However, it lacks several important elements for higher‑quality documentation:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the front‑end Internet Identity components (WalletConnect and InternetIdentity) were updated to use the new “https://id.ai” provider, completing an II v2 upgrade. The backend RWA canister was changed to a persistent actor with flexible state variables, fixing a persistence bug and improving upgrade safety. Additionally, a copy of the main Motoko file was added, likely for testing or reference.",dfx.json file found - indicates ICP/Dfinity project structure
WCHL25/transkripin,https://github.com/WCHL25/transkripin,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented new backend query endpoints (`get_final_result` and `list_user_final_results`) and introduced a dedicated upload service layer, moving the transcription and Ollama helper functions into `src/backend/src/modules/upload/service` (including a new `fetch_transcription` module). The upload module was refactored to use this service and simplify its imports, while the frontend added a debug log and a minor typo fix. Overall, the changes enhance the API for retrieving final results and cleanly separate transcription logic from the core upload code.; Week of 2025-09-15: This week we introduced chunked file uploading with bookmark‑status metadata, added a lazy‑loaded page featuring empty‑state messaging and bookmark toggling, and rolled out functional Explore, My Work, and Saved Work lists alongside segmented transcription output with duration‑seeking playback. Artifact handling was enhanced with search filtering, auto‑generated titles, stronger filtering options, new detail‑page functions, a scaffolded handler module, and a refactored save‑final‑result flow for better performance. Additionally, we removed the use‑debounce dependency, fixed a backend error, and delivered various minor updates, improving overall usability, performance, and robustness.",dfx.json file found - indicates ICP/Dfinity project structure
ClyprLab/clypr,https://github.com/ClyprLab/clypr,3,0,1,4,"The README provides a solid high‑level overview, live deployment links, status update, feature list, and an architectural snapshot, which together give a clear picture of what the project does and its current maturity. However, the sections that would deliver practical guidance—such as “Quick Start (Local Dev)”, “dApp Integration Examples”, and any contribution guidelines—are only mentioned in the table of contents and not actually shown in the excerpt. Without concrete setup instructions, integration steps, or guidelines for contributors, developers new to the project would lack the necessary details to get the system running locally or to start contributing. The existing content is well‑structured and grammatically sound, but the missing actionable documentation keeps the overall quality at a “fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Jayesh45-master/jarvis,https://github.com/Jayesh45-master/jarvis,3,0,1,4,"The README provides a decent overview of the J.A.R.V.I.S project, listing features, tech stack, project structure, installation steps, environment setup, and basic usage. However, the documentation has several shortcomings:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Kazeth/DigiPurse,https://github.com/Kazeth/DigiPurse,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The landing page UI received a comprehensive redesign with a fresh visual layout. Font styles across the application were updated to improve readability and consistency. Together, these changes enhance the overall user experience.; Week of 2025-09-15: This week the frontend UI was enhanced: the About Us page’s team data was streamlined and a GitHub icon added; the Landing page received a new hero carousel with gradient‑styled feature cards (including a new “Coins” feature) and a marquee component; and the Support page’s chat UI was refactored with initial message handling, saved‑chat state, additional icons, and improved scrolling. A new dependency, **react‑fast‑marquee**, was added to the project (updated in package.json and lockfile). Overall, these changes improve visual polish, interactivity, and user experience without altering backend functionality.",dfx.json file found - indicates ICP/Dfinity project structure
sorbadek/micha,https://github.com/sorbadek/micha,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
emf99/zkSMT,https://github.com/emf99/zkSMT.git,2,0,1,3,"The README provides a high‑level overview of the project's goals, the cryptographic flow, and some conceptual background on zero‑knowledge proofs and Sparse Merkle Trees. It includes illustrative examples and JSON proof data, which helps convey the nature of the output.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
jaibhedia/stakecommerce,https://github.com/jaibhedia/stakecommerce,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
RaghavNotFound/OOPS5_WCHL,https://github.com/RaghavNotFound/OOPS5_WCHL,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
hunters-code/plantify,https://github.com/hunters-code/plantify,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
FLUX-APP-LAB/flux,https://github.com/FLUX-APP-LAB/flux,3,2,1,6,"The README provides a solid project overview, clear installation steps, and instructions for running the application locally, which covers the essential setup for developers. It also outlines the development workflow, lists key features, and gives some guidance on wallet integration and configuration. However, the documentation is incomplete in several areas: the **Contributing** and **License** sections referenced in the table of contents are absent, there is no detailed contribution guide, and the license information is missing entirely. Additionally, there are minor formatting and grammatical issues (e.g., an extra back‑tick in the install command block, a truncated Documentation link, and a typo in “Flux will supports”). While the core setup instructions are present, the lack of contribution guidelines and licensing details prevents it from being a fully comprehensive reference, resulting in a fair rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes.; Week of 2025-09-15: This week we delivered a comprehensive live‑streaming suite, revamping the UI with modern styling, animated status badges, and a full‑screen management dashboard (MainLayout, StreamManagementDashboard, LiveStreamList, StreamViewer with chat) backed by new WebRTCStreamPlayer, streaming service, CommentService, and UserService modules that handle real‑time connections, viewer counts, avatar conversion, optimistic likes, and robust error handling. The authentication and navigation flows were refactored to include a loading screen, state‑based routing, ProtectedRoute/AppRouter security, improved wallet‑connection handling, environment‑variable integration, and a refined signup flow that disconnects wallets on back navigation. Together, these changes provide a more polished, reliable, and performant experience for users and developers alike, with added TypeScript typings and performance optimizations across the platform.",dfx.json file found - indicates ICP/Dfinity project structure
DannyVRSE/CLM,https://github.com/DannyVRSE/CLM,2,0,1,3,"The README provides a few essential setup steps (cloning the repo, installing npm packages, and running a deployment script), which is helpful for getting the code to run locally. However, it lacks a clear project description that explains the purpose, architecture, or core functionality of the repository. There are no integration or usage guides beyond high‑level example scenarios, and there are no contribution guidelines, code of conduct, testing instructions, or information about licensing. The structure is minimal, with some formatting inconsistencies (e.g., a stray “deployed branch.” line at the top) and limited explanatory text. Overall, while the basic install steps are present, the documentation is missing many critical sections needed for a developer or contributor to understand, use, or contribute to the project effectively.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Infinity-Task-Protocol/Infinity-task-protocol,https://github.com/Infinity-Task-Protocol/Infinity-task-protocol,3,1,1,5,"The README provides a solid high‑level overview of the project, clearly stating the problem it solves, the proposed solution, and a step‑by‑step “How It Works” flow. It also includes links to a whitepaper, license, deploy instructions, and a progress report, as well as screenshots of the live backend and frontend, which aid understanding.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a delivery acceptance modal to indicate when a delivery is in progress, and implemented functionality to pull notifications. This enhances user feedback during delivery operations and ensures timely notification updates.",dfx.json file found - indicates ICP/Dfinity project structure
mateussda/learn-on-chain,https://github.com/mateussda/learn-on-chain,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Reputation-DAO/Reputaion-DAO,https://github.com/Reputation-DAO/Reputaion-DAO,3,2,1,6,"The README provides a clear high‑level description of the project, its use‑cases, key rules, technical design, and next steps, and it is well‑structured and reasonably free of grammatical errors. However, it lacks essential practical information. There are no explicit setup instructions for local development (e.g., installing the ICP SDK, building and deploying the Motoko canister, or running tests). Integration guidance is limited to a vague statement that other dApps can “fetch rep,” without any API usage examples, authentication details, or sample code. A contribution guide (how to submit PRs, code style, issue reporting, etc.) is also missing. Because the documentation covers the core concepts but omits these important elements, it falls into the “basic documentation present but missing some important elements” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: A new “factoria” Motoko canister was added as a scalable factory for creating and reusing Reputation DAO child canisters, with updated creation logic, argument encoding, and size‑optimization flags in dfx.json. The Reputation DAO code was refactored into a streamlined child canister (src/reputation_dao/main.mo) and accompanying test scripts and wasm argument files were introduced. A minor front‑end tweak updates the Hero component’s YouTube link.; Week of 2025-09-15: This week we merged the newUI branch to integrate a modern Tailwind UI, updating dependencies and canister IDs while preserving existing backend services. We also cleaned the codebase by removing duplicate files, fixing import paths, and updating tsconfig, resulting in a successful build with no errors. Minor updates and fixes were applied, further enhancing overall project stability.",dfx.json file found - indicates ICP/Dfinity project structure
MazenMarei/Tal3a,https://github.com/MazenMarei/Tal3a,2,0,1,3,"The README provides a nice visual header, a brief project overview, and a list of key features, which gives readers a high‑level sense of what Tal3a is and why it matters. However, it lacks essential documentation components:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
TharunBabu-05/smart_ticket_MTC,https://github.com/TharunBabu-05/smart_ticket_MTC.git,2,2,1,5,"The README provides a visual overview of the database layout, external services, project directory tree, key data models, and a high‑level description of core functionalities (authentication, profile management, ticket booking). However, it lacks essential documentation elements:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a full voice‑driven ticket‑booking flow with speech‑to‑text and text‑to‑speech capabilities, and added a new iOS‑specific feature that extends platform support. Additionally, the iOS build workflows and documentation were refined to resolve configuration issues, boosting CI/CD reliability and overall stability.; Week of 2025-09-15: This week we added a comprehensive review and rating system, a Live Bus Tracking screen with Google‑Maps integration and ICP blockchain wallet/ticket purchasing, and a Safety Features module for SOS alerts and live‑location sharing, while expanding the weather experience with real‑time forecasts, recommendations, and a Usage Analytics dashboard. We also introduced a Personalization service and upgraded the Profile, Home, and All Reviews screens with adaptive theming, avatar editing, gradient backgrounds, a compact weather widget, and a shared ThemedScaffold, accompanied by extensive refactoring for better readability and maintainability. Accessibility was markedly improved through font‑size scaling, gesture‑based navigation, high‑contrast preview, and numerous UI refinements, delivering a more cohesive and user‑friendly experience.",dfx.json file found - indicates ICP/Dfinity project structure
Blessan-Alex/ICP-CDN,https://github.com/Blessan-Alex/ICP-CDN,2,0,1,3,"The README provides a solid high‑level project description, architecture diagram, and links to demo videos, which are helpful for understanding what the project does. However, the bulk of the documentation promised in the table of contents (e.g., Quick Start, Prerequisites, Installation, Configuration, Environment Variables, Core Features, Testing & Development, Deployment, Contributing, License, etc.) is absent from the excerpt. There are no concrete setup instructions for local development, no integration guide for consuming the dCDN, and no contribution guidelines. The existing sections are clear and well‑formatted, but the critical practical information needed to get the project up and running or to contribute is missing, resulting in a documentation set that is incomplete and of limited utility. Hence, the documentation quality rates as **Poor (2)**.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
diwanmuhamad/neuronet-dao,https://github.com/diwanmuhamad/neuronet-dao,1,2,1,4,"The provided README consists solely of an ASCII‑style architecture diagram and a brief placeholder for a future diagram. It lacks any narrative description of the project’s purpose, goals, or overall functionality. There are no setup instructions for local development (e.g., prerequisites, installation steps, environment configuration), no integration guide for connecting the Next.js server, S3 storage, or Internet Computer canisters, and no contribution guidelines (code of conduct, pull‑request process, testing instructions, etc.). Additionally, the text contains no headings, markdown formatting, or explanatory prose to aid readability, and there are minor formatting inconsistencies (truncated diagram at the end). Because essential documentation elements are missing, the README falls into the “Very Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the star‑rating component was enhanced to accept and display a total‑ratings count, and the duplicated rating UI in the marketplace’s FeaturedSection and TrendingSection was replaced with the shared StarRating component. Both sections were also refactored to use a new SecureImage wrapper with fallback handling for broken image URLs, adding state‑based error recovery. The updates improve code reuse, UI consistency, and robustness across the marketplace features.; Week of 2025-09-08: This week we added category fetching and filtering, detailed item and profile pages with updated routing and titles, and a search bar to the marketplace, while also beginning a migration of the marketplace page to a new, more maintainable structure. Minor bugs were fixed to smooth navigation and data presentation. Together, these enhancements improve user browsing, discovery, and overall scalability of the marketplace.; Week of 2025-09-15: This week we introduced several major features—including an AI agents chat, a shop cart, on‑chain verification, and a new home section with refined font creation and item‑update capabilities—while also refactoring the profile page for better readability and maintainability. We enhanced the mobile experience by fixing text display, updating image visibility, refreshing images throughout the app, and removed the libsql dependency to streamline the codebase and update the README. Minor bug fixes and generic updates rounded out the effort, improving overall stability and presentation.",dfx.json file found - indicates ICP/Dfinity project structure
Eshajha19/Edu-Navia,https://github.com/Eshajha19/Edu-Navia,3,0,1,4,"The README provides a solid general project description, a comprehensive feature list, problem statement, solution overview, and tech stack, which gives readers a clear idea of what the project does. However, it lacks critical practical information such as setup or installation instructions for local development, usage guidelines, integration steps, and contribution guidelines. Without these, newcomers cannot easily get the project running or understand how to contribute. The overall structure and formatting are decent, but the missing core sections keep the documentation at a “fair” level rather than “good” or “excellent.”",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Afarisphi/white-binder,https://github.com/Afarisphi/white-binder,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
icdevs/evm-dao-governance,https://github.com/icdevs/evm-dao-governance,2,2,1,5,"The README provides a strong high‑level description of the project, its problem statement, solution, novel use case, business model, and key features. It also includes a visual architecture diagram. However, it lacks essential practical documentation: there are no setup or installation instructions for local development, no guide on how to integrate the bridge into an existing DAO or application, and no contribution guidelines or information on how developers can get involved. The overall structure and grammar are good, but the missing core sections constitute significant gaps, resulting in a “Poor” rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The token‑setup script was upgraded to accept and validate multiple MetaMask addresses, convert them to a JSON array, and add robust error handling for Forge availability. A full Sign‑In‑with‑Ethereum (SIWE) integration was introduced, adding a custom canister provider to dfx.json, a new deploy‑siwe.sh script, and fresh frontend components (SiweLogin.svelte, siwe.js, wallet.js, and a SIWE route) with updated Dfinity and crypto dependencies. Legacy frontend files were removed and the .gitignore cleaned, streamlining the codebase.; Week of 2025-09-08: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
Y0sefTamer/care_link,https://github.com/Y0sefTamer/care_link,4,2,1,7,"The README provides a solid foundation: it starts with a clear project description, lists prerequisites, and walks through cloning, starting a local ICP replica, deploying canisters, and running the frontend. An integration section supplies a concise example of using the canister from the frontend, and the contribution guide outlines the typical fork‑branch‑PR workflow. The overall structure is logical and the language is generally clear. Minor drawbacks prevent a perfect score: formatting quirks (e.g., stray backslashes and inconsistent code‑block delimiters) and the absence of deeper details such as testing instructions, environment variable configuration, or more extensive API documentation. Nonetheless, all core elements are present, making the documentation good but not flawless.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: A new Rust canister called **dashboard_backend** was added, complete with its own `Cargo.toml`, Candid interface (`dashboard_backend.did`), and implementation (`src/lib.rs`), and it was integrated into the workspace and `dfx.json`. The lockfile was updated to include the canister’s dependencies (candid, ic‑cdk, ic‑cdk‑timers, ic‑stable‑structures, serde) and the stable‑structures crate. This introduces backend support for the dashboard features that were previously only present on the frontend.; Week of 2025-09-15: Implemented comprehensive patient management on the dashboard, adding full CRUD operations (create, update, delete) for patients and integrating backend canister calls to fetch patients, nurses, and bookings between the dashboard and care‑link services. Introduced a new booking system by marking `confirm_booking` with `#[ic_cdk::update]`, fixing its Candid interface, updating the `care_link_backend.did` file, and preparing the `care_link_backend` canister for deployment, with accompanying README updates. These changes improve data synchronization, streamline booking workflows, and ready the backend for production use.",dfx.json file found - indicates ICP/Dfinity project structure
Yohanpau/DueMinder,https://github.com/Yohanpau/DueMinder.git,2,2,1,5,"The excerpt provides a series of step‑by‑step instructions for fixing a specific `ENOENT` error and for starting the backend and database services, which is useful for getting the code to run locally. However, the documentation is missing several key elements required for a higher rating:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a new payment system: added a `Payment` model and relations to `User` and `Bill` in the Prisma schema, introduced a `status` field on bills, and extended bill services to include payment history. Created a full NestJS payment module with controller, service, DTOs, and tests, and wired it into the main application module. These changes enable tracking and managing bill payments alongside existing bill and user functionality.; Week of 2025-09-15: This week we added a History page with smooth page‑transition animations and a new payment‑method interface that includes confirmation modals, improving navigation flow and checkout usability. We also refined modal dialogs (edit and delete), streamlined protected‑route logic by removing unnecessary data fetching, and applied UI tweaks such as spacing adjustments and homepage configuration. Together, these changes enhance the overall user experience, reduce errors, and boost application performance.",dfx.json file found - indicates ICP/Dfinity project structure
pixeliy/pixeliy,https://github.com/pixeliy/pixeliy,2,2,1,5,"The README provides only a very small set of command‑line snippets (checking canister status, viewing logs, resetting local state) and mentions the MIT license. It lacks a general project description, any detailed setup instructions for local development, integration or usage guides, and contribution guidelines. While the included commands are useful for a developer familiar with the tool, the overall documentation is minimal and leaves most essential information absent, resulting in significant gaps. Consequently, it falls into the “Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Updated the authentication flow to use the new Internet Identity provider at https://id.ai instead of the previous https://identity.ic0.app, adjusting the URLs in both `AuthContext.tsx` and `useAuth.ts`. This change ensures the app authenticates through the new provider across local and production environments. Minor updates and fixes.; Week of 2025-09-15: Implemented support for a new ICRC‑1 token by adding a ledger and an index canister: the canister IDs were added to canister_ids.json, and dfx.json was updated to register the custom ledger and index canisters with their Candid interfaces and WASM binaries. Corresponding token assets (icon) and compiled artifacts (ledger.did, index‑ng.did, and compressed WASM files) were added under src/token and src/frontend/public/assets/token. This introduces token handling capabilities to the project, extending its functionality beyond the original state.",dfx.json file found - indicates ICP/Dfinity project structure
Surya-531/SynapseMind-AgriAI,https://github.com/Surya-531/SynapseMind-AgriAI,3,1,1,5,"The README provides clear setup instructions for local development, including prerequisites, cloning the repo, installing backend (Python) and frontend (React) dependencies, and running both services. It also includes a detailed ICP integration guide, describing authentication, on‑chain logging, and deployment commands. However, it lacks a concise project description that explains the overall purpose, goals, and target users of the system. There are no contribution guidelines, code of conduct, or instructions for testing and linting, which are important for external collaborators. The formatting is generally readable but contains minor inconsistencies (e.g., incomplete code fences, stray punctuation). Overall, the documentation covers the core installation and integration steps but misses several key elements, placing it at a “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the project was reorganized and expanded with two new backend services: a Flask‑based crop‑recommendation API (croprec/cropflask.py and related model/encoder files) and a Flask‑based yield‑prediction API (yieldprediction/flask_predict_app.py and its model files). Core data and model assets were moved into dedicated “cropproduction” and “yieldprediction” directories, and the README was overhauled to reflect the new decentralized AI advisory scope and the correct GitHub URL. Unused front‑end files (index.html, prodpredictor.ipynb, pubspec.yaml) were removed, streamlining the repository for the new features.",dfx.json file found - indicates ICP/Dfinity project structure
aliscie2/oDoc,https://github.com/aliscie2/oDoc,2,3,1,6,"The README provides a handful of useful commands (testing, WASM troubleshooting, a “Manual Setup (Advanced)” sequence) and a brief contribution checklist, which gives a minimal level of local‑development guidance. However, it lacks a clear, high‑level project description that tells a reader what the software does or its primary goals. There is no integration or usage guide for consumers of the library/application, and the contribution section is sparse (no PR workflow, code‑style rules, or links to contribution resources). The document also contains numerous typographical errors, inconsistent formatting, and unexplained prerequisites (e.g., required versions of Node, Yarn, DFX, Rust). Because of these significant gaps in essential documentation elements, the overall quality is poor.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added richer email notifications with loading skeletons and detailed previews, moved the auth check into the useProgress hook, upgraded UI components (e.g., CryptoAgreementStep, AIConversationStep) with smoother animations, and redesigned notifications as badge elements while refining the jellyfish‑eye animation. We also fixed file‑content page loading, 404 handling, and permission checks, simplified theme configuration, polished the landing‑page UI, typography, and responsive layout, updated SEO meta tags, and removed unused components. These changes boost user experience, maintainability, and overall debugging clarity.; Week of 2025-09-08: We added a new SEO component with job‑posting and FAQ schema, introduced a CTA section and customizable login button on the landing page, and built dynamic credit handling via a centralized ask_ai utility that migrates AI calls from Anthropic to Groq (including retrieval‑augmented generation and updated model limits). Job‑matching logic was made environment‑aware and fully documented, authentication was hardened by re‑enabling derivationOrigin and simplifying identity‑provider configuration, while branding assets, PWA splash icons, and theme‑based UI clean‑ups unified the visual experience. Together, these updates improve discoverability, AI capabilities, security, and UI consistency across the platform.; Week of 2025-09-15: New UI and functionality were added, including context‑aware chatbot enhancements (typing animations, user‑type‑specific welcome messages), a redesigned job‑search interface with quality indicators and empty‑state handling, consolidated Google Calendar integration, USDC conversion support in the wallet, and SEO/FAQ components on the landing page. Existing components were refined with stronger type safety, improved error handling and validation for match connections, theme‑variant styling (chip variants, light/dark mode optimizations, pulse animation), responsive layout tweaks for registration and calendar toolbar, and added debug logging for match processing. Together these updates significantly boost user experience, visual consistency, and overall reliability while improving code maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
AAK581/ic-carnage,https://github.com/AAK581/ic-carnage,3,1,1,5,"The README provides a clear **setup section** with step‑by‑step `dfx` commands for running the project locally, which is useful for developers. However, it lacks a **general project description** that explains what “IC Carnage” actually is, its purpose, architecture, or key features. There is no **integration guide** for how to use the deployed canisters in other projects, nor any **contribution guidelines** (e.g., how to submit issues, pull requests, coding standards, testing procedures). The formatting is generally clean, but the absence of these essential sections limits its usefulness, placing it at a “fair” level. Adding a concise overview, usage examples, and contribution instructions would raise the score.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented a basic token canister with minting and balance functions and introduced a foundational ICRC‑7 NFT system, alongside a local ICP ledger setup for testing token swaps. Updated the README to document these additions and applied minor updates and fixes throughout the codebase. These changes deliver core token and NFT capabilities and provide a local testing environment for further development.",dfx.json file found - indicates ICP/Dfinity project structure
RiverrFinance/clearing_house,https://github.com/RiverrFinance/clearing_house,1,1,1,3,"The provided README contains only a single line (`use.did`) and a brief, misspelled heading pointing to “Scripts/functions”. It lacks any substantive project description, setup instructions for local development, integration guidance, or contribution guidelines. There is no structure, formatting, or grammatical content beyond the heading. Because the documentation is essentially absent, it falls into the “Very Poor” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: This week the market creation API was streamlined by dropping the asset‑pricing parameter and now returns the market index, while core trading capabilities—including opening/closing positions, deposits/withdrawals, and liquidity removal—were finalized alongside admin role‑management. A new “Add Liquidity” feature was added, enabling users to contribute assets to liquidity pools. All of these enhancements have been approved and are ready for deployment, simplifying workflows, expanding financial operations, and preparing key market components for production release.",dfx.json file found - indicates ICP/Dfinity project structure
Smitbafna/IPX,https://github.com/Smitbafna/IPX,2,2,1,5,"The README provides a solid high‑level overview of the IPX Protocol, its purpose, the problems it solves, and detailed technical descriptions of the new verification and insurance features. However, it is missing several critical sections required for comprehensive documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added two new API routes (`frontend/app/api/youtube/exchange-code/route.ts` and `frontend/app/api/youtube/oauth-init/route.ts`) to implement the YouTube OAuth flow and zk‑proof verification. This introduces backend support for authenticating users via YouTube and handling token exchange, expanding the platform’s integration capabilities. No existing files were altered; the changes solely add new functionality.; Week of 2025-09-08: This week the NFT‑registry canister was expanded with full YouTube‑based identity verification: new structs for YouTube identity/metrics, a `mint_nft_with_youtube_verification` entry point, and a `verify_video_engagement` function that checks channel ownership, subscriber/view thresholds and video‑level engagement via zk‑SNARK proofs. The zk‑proof verification logic was refactored to support multiple `ProofType`s and a legacy key‑setter was added, while the canister’s Cargo.toml was updated with the required Arkworks, SHA‑2 and hex crates. These changes introduce YouTube‑driven KYC and engagement checks for NFT minting, enhancing security and utility without altering the existing frontend.; Week of 2025-09-15: This week we added core data structures and basic functions for slashing and insurance pools, introduced slashing‑condition logic, and implemented the ability to file and process insurance claims, with documentation updates and final polishing to solidify the penalty and insurance mechanisms. We also strengthened the upgrade workflow by fixing pre‑upgrade and post‑upgrade functions, improving system reliability during upgrades. Together, these changes lay the groundwork for robust penalty/insurance features and a more dependable upgrade process.",dfx.json file found - indicates ICP/Dfinity project structure
NeteamIndustry/Modl-Phownership,https://github.com/NeteamIndustry/Modl-Phownership,3,1,1,5,"The README provides a solid project overview, clear architecture diagram, and thorough local development setup instructions (prerequisites, project layout, quick‑start steps, and configuration details). It also includes some integration guidance for connecting the frontend to the external Python API and a brief look at the Motoko canister’s data model. However, it lacks several important elements: there are no contribution guidelines, testing instructions, deployment steps for mainnet beyond a brief note, detailed API documentation, licensing information, or troubleshooting tips. The documentation is clear and well‑structured but incomplete, preventing it from reaching a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: This week introduced a new UI layout and a Motoko‑based backend service for verification and workflow management, plus an API endpoint to retrieve all verified photos. An unused agent component was removed and minor updates and fixes were applied across the codebase. Together, these changes improve the user experience, expand backend functionality, and streamline the project’s code.",dfx.json file found - indicates ICP/Dfinity project structure
gov-mind/ic_govmind,https://github.com/gov-mind/ic_govmind/,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we introduced a new committee feature and expanded token management with a token transfer API, token creation capability, and support for Ethereum‑based tokens. We also fixed the increment_nonce bug and addressed stability issues, enhancing overall reliability. These additions broaden core functionality, enable cross‑chain token operations, and improve system robustness.; Week of 2025-09-15: This week we delivered a full debate‑simulation flow, a standalone Proposal Copilot with three‑step creation, comprehensive committee support integrated into the DAO model and UI, and a multi‑tab DAO management dashboard with live data, interactive charts and multi‑chain wallet balances. We expanded chain handling (Chain Fusion, EthLocal, EthSepolia), added ICRC token transfers, upgraded the wallet to select chains dynamically, refactored DAO hooks, introduced exponential‑backoff retry, standardized debug logging and canister logs, and improved factory canister environment configuration and deployment scripts. Together these changes greatly enhance proposal creation, governance, cross‑chain operations and observability while streamlining developer workflows.",dfx.json file found - indicates ICP/Dfinity project structure
samar-ux/I-dev,https://github.com/samar-ux/I-dev,3,1,0,4,"The README provides a solid project overview, clear description of the platform’s purpose, and detailed feature lists—including specialized dashboards, authentication methods, tracking, and Web3 payment gateway configurations. The structure is well‑organized with a table of contents and visual badges, and the language is mostly clear.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we launched the IDEV Web3 Shipping Platform, adding a multi‑channel shipment‑confirmation system (SMS, Email, WhatsApp), blockchain‑based tracking, smart‑contract logistics workflows, and full multilingual support (Arabic, English, French) with a language‑switch component. We also expanded the registration flow with World ID, MFA, KYC/AML and ICP verification icons, upgraded the KYC/AML process, and introduced a Web3‑native payment suite covering Ethereum, Polygon, BSC, ICP, DeFi, NFTs and cross‑chain bridges, all backed by detailed documentation. An AdminDashboard for user management, monitoring, settings and analytics, plus UI/UX refinements such as home‑page redirects, copy cleanup and enhanced translation controls, round out the release, delivering stronger identity verification, richer payment options, and a more polished, globally ready user experience.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
ReCheck-io/iob-log-service,https://github.com/ReCheck-io/iob-log-service,2,1,1,4,"The README fragment provides a brief overview of the technology stack, licensing, and a support link, but it lacks several essential elements required for a high‑quality documentation set.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: A full Next.js front‑end for the tokenization service was added, replacing the placeholder `ui/.gitkeep` with a complete UI directory that includes configuration files, a package manifest, Tailwind/PostCSS setup, and a rich set of React components and pages (dashboard, token detail, modals, etc.). This introduces a new static UI layer that enables users to view and manage tokens, while the existing backend code remains unchanged. The addition vastly expands the project’s functionality by providing a ready‑to‑use user interface.",dfx.json file found - indicates ICP/Dfinity project structure
utkarsh1507/ICP_AI_Agent,https://github.com/utkarsh1507/ICP_AI_Agent,0,3,1,4,No documentation assessment provided.,"3 - Commits every week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes.; Week of 2025-09-08: Implemented a new authenticated “User” page with routing, redirect logic from the landing page, and a login button in the Features section, while simplifying the Header and Footer UI. Enhanced the auth hook with proper context checks, added DFINITY SDK dependencies and workspace support for the Langchain_Tools package, and updated related package files. Minor backend formatting tweaks and dependency adjustments were also applied.; Week of 2025-09-15: This week we delivered minor updates and fixes, primarily refining AI tools and addressing backend issues to improve stability and performance. The changes enhance the reliability of existing features without introducing new functionality.",dfx.json file found - indicates ICP/Dfinity project structure
akup/multicanister,https://github.com/akup/multicanister,3,0,1,4,"The README provides a fair amount of practical information for getting the project up and running, such as installing required binaries (`ic-wasm`, `didc`, `wasm-opt`), setting up the PATH, and starting the Pocket IC Core service and ICR CLI. It also outlines the repository’s directory layout and notes important build considerations for submodules.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
GeheshbabuD/cryptexid-website1,https://github.com/GeheshbabuD/cryptexid-website1,3,1,0,4,"The README provides clear, well‑formatted setup instructions for local development (npm start, test, build, eject) and useful links to the official Create React App documentation. However, it lacks a meaningful project description beyond “bootstrapped with Create React App,” offers no integration or usage guide specific to this project, and does not include any contribution guidelines or information about how to submit issues/pull requests. While the structure and grammar are solid, the missing contextual and collaborative details keep the documentation at a basic “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added four GitHub Actions workflow files (webpack.yml, npm-publish.yml, npm-publish-github-packages.yml, static.yml) to automate building with webpack, publishing the package to npm and GitHub Packages, and deploying static assets. These CI/CD pipelines extend the initial project setup by introducing automated build, test, and release processes. No source‑code files were modified.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
RhinoSpider/rhinospider_extension,https://github.com/RhinoSpider/rhinospider_extension,2,1,1,4,"The README provides a solid high‑level overview of the project (description, version, structure, key features, production canister IDs, and links to external documentation). However, it lacks essential on‑page elements such as local development setup instructions, integration or usage guides, and contribution guidelines. While the external docs may contain those details, the README itself does not expose them, leaving new contributors or developers without a clear path to get the code running or to understand how to contribute. Grammar and formatting are generally fine, but the missing core sections constitute a significant gap, resulting in a “Poor” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week introduced the RhinoSpider Enterprise Marketplace, adding a new Motoko canister and a full React frontend (catalog, dashboard, profile) under apps/marketplace along with deployment assets, scripts, and type definitions. The storage canister was extended to authorize the marketplace canister and shared types were expanded (e.g., ProvenanceRecord), while dfx.json and related config files were updated to include the new canister and its assets. Documentation and the README were also revised to list the marketplace components, canister IDs, and live URLs.",dfx.json file found - indicates ICP/Dfinity project structure
tarrpurra/Memantic,https://github.com/tarrpurra/Memantic,3,2,1,6,"The README provides some essential setup steps—starting the replica, deploying canisters, creating a `.env` file, and running the frontend server—which cover the basics of local development. It also points to a contribution guide and includes a note on handling environment variables for production builds. However, it lacks a clear project overview or description, offers only minimal integration guidance, and the instructions are fragmented and contain formatting/grammar issues (e.g., missing code fences, inconsistent markdown, typos). While the core commands are present, the documentation would benefit from a more structured introduction, detailed step‑by‑step setup, and clearer integration instructions to reach a higher rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the frontend routing was corrected by switching all imports to react‑router‑dom and cleaning up several pages, while the backend service was refactored to create a dedicated development agent, fetch the root key, and simplify canister configuration by importing the idlFactory directly. CSP headers were added to dfx.json, environment handling was streamlined (hard‑coded dev mode and centralized identity provider), and the BackendTest component now includes a connection test and richer health checks. Supporting build files (Vite, Tailwind, package‑lock) and the index.html favicon were also updated, and the troubleshooting guide was removed.; Week of 2025-09-08: UI enhancements and an authentication bug fix were implemented, alongside updates to the README documentation. Additionally, work progressed toward a maintenance deployment. These changes improve usability, security, and preparation for the next release.; Week of 2025-09-15: This week the voting backend was optimized by lowering the outcall cycle cost and the frontend was refined with safer BigInt handling, a periodic refresh of vote counts on the Portfolio page, and a refactored MemeCard component that more reliably checks and updates vote status. Authentication handling was hardened: the environment now supports a local Internet Identity canister, AuthContext uses the backend service’s authentication flag, and backendService improves storage‑aware agent setup while avoiding anonymous identities. Overall, these changes boost performance, reliability, and developer experience without adding new files.",dfx.json file found - indicates ICP/Dfinity project structure
RafaelCostaSolutions/icp-onboarding-hub-br,https://github.com/RafaelCostaSolutions/icp-onboarding-hub-br,4,1,1,6,"The README provides a solid project overview, clearly stating the problem, objectives, deliverables, roadmap, and impact. It includes comprehensive local development setup instructions with exact commands for installing DFX, cloning the repo, starting the replica, deploying, and accessing the site. The structure is well‑organized with headings, bullet points, and code blocks, and the language is generally clear and grammatically correct.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we delivered a comprehensive update to the regional version of the application, revising the core script (ScriptEtapaRegionalAtualizado.js), its stylesheet, and refreshing key HTML pages (tutorials, playground, resources, and the regional home page) to improve functionality, visual consistency, and user experience. We also added file‑upload capability to streamline regional workflow handling. Minor bug fixes and refinements were applied throughout the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
Unchainers/Overworked,https://github.com/Unchainers/Overworked,2,1,1,4,"The README provides only a handful of sections—some screenshots, a list of owners, a set of external links, and contact information. It lacks a clear project description that explains what the software does, its purpose, or its key features. There are no setup or installation instructions for local development, no guide on how to integrate or use the project, and no contribution guidelines for external contributors. While the acknowledgement links are useful, they do not replace the core documentation needed to get a new developer up and running. Overall, the document is very sparse, with significant gaps in essential information, resulting in a low rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: Implemented UI refinements—including a new static logo in the navbar, integration of a (currently commented) mouse‑follower component, and updated Uppy file‑upload dependencies and styles—while also expanding the Internet Identity candid interface with additional OpenID configuration fields and feature flags. Backend canister metadata was updated (hashes and init JSON) to reflect the stable regional round version. Overall, the changes polish the frontend experience and extend authentication capabilities without adding new modules.",dfx.json file found - indicates ICP/Dfinity project structure
Unknowners/notonlybitcointips,https://github.com/Unknowners/notonlybitcointips,3,1,1,5,"The README provides a basic overview of the project structure, deployment commands, and brief descriptions of the backend and frontend components. It includes a minimal contribution workflow and useful links for support. However, it lacks detailed setup instructions for local development—there are no steps for installing prerequisites (e.g., DFX, Node.js), installing frontend dependencies, or running the React dev server. There is also no explicit integration guide showing how the frontend connects to the Motoko canisters, nor any environment configuration details. While the sections are clearly organized and free of major grammatical issues, the missing practical onboarding information keeps the documentation at a fair level rather than good or excellent.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the team added a local ICP Ledger canister for development testing and introduced secure session storage with automatic loading and timeout handling. The ICP withdrawal flow was overhauled: balance checks were delegated to the ledger, sub‑account handling was fixed, extensive logging and error handling were added, and the local ledger was removed from production deployments to simplify canister configuration. These changes improve the reliability of fund transfers, streamline production deployment, and enhance user session management.",dfx.json file found - indicates ICP/Dfinity project structure
Wow11One/happy-wheels,https://github.com/Wow11One/happy-wheels,2,0,1,3,"The README fragment provides a brief overview of the platform’s benefits and a link to the deployed project, but it lacks essential documentation elements. There are no setup instructions for local development, no clear, comprehensive project description, no integration or usage guide, and no contribution guidelines. The structure is minimal, and while the language is readable, the content is insufficient for developers to get started, contribute, or understand how to integrate with the project. Consequently, the documentation falls into the “Poor” category due to these significant gaps.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Ananya-Mittal/Elira_WCHL,https://github.com/Ananya-Mittal/Elira_WCHL.git,2,1,0,3,"The README provides a clear high‑level overview of the project’s vision, target audience, key features, tech stack, and social impact, which is useful for understanding what the product aims to achieve. However, it lacks essential technical documentation:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added language updates and introduced a new “Elira” component, delivering both front‑end and back‑end functionality. This expands the system’s multilingual support and provides a new feature set for users.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Mercatura01/TURNX,https://github.com/Mercatura01/TURNX,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Satsurance/canisters,https://github.com/Satsurance/canisters/tree/feature/staking-layout,0,3,1,4,No documentation assessment provided.,"3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week the reward‑distribution test suite was refactored and expanded with edge‑case coverage and a new test for reward handling, and the MINIMUM_DEPOSIT_AMOUNT constant was updated as part of the overhaul. Minor updates and fixes were also applied, collectively boosting the reliability and maintainability of the reward logic.; Week of 2025-09-08: Integrated the Sat‑UI component into the main repository and consolidated deposit, time, and episode helper functions inside the Client class, adding a new TestClient helper and moving shared utilities to a common module. Critical bugs in the reward‑rate‑per‑share calculation and deposit/withdraw logic were fixed, and deposit and reward transfers were combined into a single transaction to reduce fees and eliminate redundant checks. These updates improve UI integration, lower transaction costs, and markedly boost the stability, test coverage, and maintainability of the codebase.; Week of 2025-09-15: This week we integrated an ICP plugin into the core (updating index.js and web3store.js) and added the new Sat‑UI component, introducing fresh UI functionality. We also streamlined the navigation bar by removing the “Learn More” and “Insurance” tabs, rolled back staking and faucet features, renamed the frontend and backend canisters for clearer organization, and removed an obsolete deployment file. Together, these updates enhance functionality, simplify the user experience, and improve project maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
Sipaling-SKS/resumid,https://github.com/Sipaling-SKS/resumid,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
f0i/identify,https://github.com/f0i/identify,4,0,1,5,"The README provides a solid overall description of the Identify project and clearly outlines its purpose. Integration instructions are present for both managed usage and self‑deployment, and the authentication flow is explained step‑by‑step, which is helpful for developers. Contribution guidance is included, and testing commands are listed.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AYU2027/Icp-health-Exchange,https://github.com/AYU2027/Icp-health-Exchange,2,0,1,3,"The README provides a handful of useful local‑development instructions (commands to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server) and a brief note about frontend environment variables. However, it lacks a clear project description that explains what “Health Vault” or “Icp-health-Exchange” actually does, its purpose, or its main components. There are no integration or usage guides, no API documentation, and no contribution guidelines (e.g., how to submit issues, pull requests, coding standards, or testing procedures). While the formatting is decent and the commands are readable, the overall documentation is missing several key elements required for a complete README, resulting in a poor rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
codemicah/megfi,https://github.com/codemicah/megfi,4,0,1,5,"The README provides a solid project overview, lists key features, and includes comprehensive local‑development setup instructions (installing Rust and a C compiler, installing npm dependencies, starting the replica, deploying canisters, and running the frontend). It also points to external documentation for deeper learning and gives notes on environment variables for production deployments. The structure is clear, sections are well‑headed, and the formatting is readable.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
peridotvault/peridot-onchain,https://github.com/peridotvault/peridot-onchain,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Implemented a revamped chatbot core with a new UI makeover, form‑submission handling, a chat overlay and floating action button, plus backend HTTP outcall support that enables communication with external services. Added an AI‑powered smart‑contract feature, navigation links in the documentation, and updated DFX tooling and the main HTML index to ensure reliable builds and loading. Together these changes deliver a more polished, functional, and integrated AI experience for users while improving developer workflow and documentation.; Week of 2025-09-15: This week the team integrated on‑chain AI chat by adding a new `peridot_ai` canister ID, creating a full‑featured `AiChat` component, and wiring it into the AI welcome page with state handling, scrolling, and backend calls. UI polish was applied across the app: the AI page and landing sections were made responsive, the version label was updated, a new coin image asset was added, and Tailwind was extended with a large font size. The previous floating chat button was removed and the landing page imports were cleaned up, resulting in a more cohesive and interactive front‑end experience.",dfx.json file found - indicates ICP/Dfinity project structure
codinersmillenium/kolabriq,https://github.com/codinersmillenium/kolabriq,2,1,1,4,"The README provides a decent high‑level overview of the project’s purpose, architecture, tech stack, and future roadmap, but it lacks the core elements needed for effective documentation. There are no clear setup or installation instructions for getting the frontend, canisters, and AI agent running locally, nor any step‑by‑step guide for configuring the ICP canisters or the Python uAgents. Integration details are mentioned only in brief bullet points without actionable guidance. A contribution section is completely missing, so external developers have no direction on how to submit issues, pull requests, or follow coding standards. While the sections that do exist are reasonably organized and mostly free of major grammatical errors, the absence of practical onboarding and contribution information makes the documentation insufficient for most users. Consequently, it falls into the “Poor” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we added a retry mechanism for canister calls and introduced blockchain‑based listings for users, projects, and tasks, while refactoring the creation, payout, and interface handling of tasks and projects. We also corrected and refined the blockchain concept implementation to improve its correctness and maintainability. Together, these changes enhance the reliability, stability, and overall maintainability of the core workflow and blockchain features.",dfx.json file found - indicates ICP/Dfinity project structure
SKant03/ICPad,https://github.com/SKant03/ICPad,4,2,1,7,"The README provides solid setup instructions for local development, including prerequisite installation, cloning, dependency installation, starting the local IC network, deploying the backend canister, and running the frontend. It outlines the main application pages and gives clear development commands for both frontend and backend, as well as a brief integration example showing how to use the generated canister bindings. A contribution section is started, indicating a typical fork‑and‑branch workflow, though it is truncated and lacks detailed guidelines (e.g., code style, PR process, testing). The document could benefit from a more thorough project overview, licensing information, and a complete contribution guide, but overall it is well‑structured, clear, and largely meets the key criteria.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the marketplace was expanded with automatic creator‑ID retrieval, template‑management capabilities, and UI enhancements such as better text wrapping, improved search (including creator names), and refined loading/error handling. Integration bugs were fixed (canister IDs, Internet Identity for production) and the context/provider architecture was reorganized for more reliable state management. Overall, the changes add new functionality, tighten security/authentication, and polish the user experience.; Week of 2025-09-08: This week we merged the new Shivam feature and delivered a full Motoko compilation pipeline, adding real‑code analysis, WASM generation, CompilationResults handling, and a Terminal UI component integrated into the canister service. We also refined the IDE experience—updating IDEpage.jsx, Navbar, IDE/Principal contexts, fixing UI bugs on the IDE and settings pages, expanding backend libraries and interface definitions, and improving project creation, routing, asset serving, and canister utilities with extensive logging and error handling. Together these changes provide a smoother user interface, more robust backend functionality, and a reliable end‑to‑end Motoko development workflow.; Week of 2025-09-15: The README was overhauled with richer markdown, emojis, and clearer descriptions of ICPad’s features, architecture, and UI, improving its presentation and onboarding information. No code files were added, removed, or altered, so the changes are limited to documentation enhancements. This update makes the project’s purpose and capabilities more accessible without affecting functionality.",dfx.json file found - indicates ICP/Dfinity project structure
zephyrzth/whcl-2025-momus,https://github.com/zephyrzth/whcl-2025-momus,3,1,1,5,"The README provides a solid project overview, clear key‑feature list, and a helpful architecture diagram. The Quick Start Guide includes prerequisites and step‑by‑step local development instructions, which are well‑structured and easy to follow. However, it lacks several important elements: there are no contribution guidelines (e.g., how to submit pull requests, coding standards, testing procedures), no detailed integration guide for using the marketplace or agents in other applications, and no instructions for production deployment, environment configuration, or testing. Grammar and formatting are generally good, but the documentation would benefit from expanding these missing sections to reach a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: This week a new Usage page was added to the frontend, displaying a monthly metered‑usage chart and daily transaction history using Chart.js and react‑chartjs‑2. Backend Motoko code was extended with helper types and calls to the ICP index canister to retrieve debit transfer data, and the dfx configuration and deployment scripts were updated to include the icp_ledger_canister and icp_index_canister. Additional refactors include updated service typings, menu navigation, and minor client‑agent constant adjustments.",dfx.json file found - indicates ICP/Dfinity project structure
Ghostkeys-App/ghostkeys-app,https://github.com/Ghostkeys-App/ghostkeys-app,3,1,1,5,"The README provides a solid high‑level overview of the project—there’s a clear title, tagline, and a “What is GhostKeys?” section that explains the purpose and key selling points. The architecture is well‑structured with separate subsections for the Factory, Vault, and Frontend canisters, and the Table of Contents makes navigation easy. However, the excerpt does not include the actual “Quick Start (Local Dev)” instructions, nor does it show any contribution guidelines, integration or API usage details, or testing instructions. While those sections are listed in the TOC, their content is missing, so a developer looking to set up the project locally or contribute would not find the necessary step‑by‑step guidance here. Grammar and formatting are generally good, with proper headings and markdown usage. Overall, the documentation is informative but incomplete, resulting in a fair (3‑point) rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The build pipeline was overhauled to replace dfx generation with custom scripts (fetch_*_release.sh, generate_declarations.sh, clean.sh) that download canister WASM/DID files locally, add generated declaration files, and update dfx.json and .gitignore to use these local artifacts; environment variables now allow overriding target release tags. This new script‑driven approach streamlines building, cleaning, and CI/CD, improving reproducibility and flexibility without altering the existing UI code.",dfx.json file found - indicates ICP/Dfinity project structure
HEFIN01/HEFIN-01,https://github.com/HEFIN01/HEFIN-01,3,1,1,5,"The README provides a clear project overview, architecture diagram, and fairly detailed local‑development setup steps (prerequisites, starting a replica, installing frontend dependencies, building/deploying, and basic usage). However, it lacks several key elements needed for a higher rating: there are no contribution guidelines, no dedicated integration guide for connecting the backend to external services (e.g., the hinted MongoDB or AI canister), and the latter part of the document is fragmented and poorly formatted (unfinished sections, stray markdown headers, and inconsistent bulleting). Grammar and structure are generally understandable but could be tightened. Because it covers the basics but misses important documentation pieces, it falls into the “Fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we established the project’s foundation by adding core scaffolding—including package.json, Dockerfile, docker‑compose.yml, and updated README—for containerized development, and we introduced a new server entry point (server.js) while transitioning from a traditional Node.js backend to a DFINITY canister architecture with dfx.json and an initial Motoko source file (main.mo). We then created a dedicated canister project, providing its interface definition (hefin.did), configuration (dfx.json), source code (cannister.mo), and supporting documentation, laying the groundwork for future canister development and deployment. Minor updates and fixes were applied throughout to polish the new setup.",dfx.json file found - indicates ICP/Dfinity project structure
AncientSclupture/Ownership-Chain,https://github.com/AncientSclupture/Ownership-Chain,2,3,1,6,"The README provides a decent amount of setup instructions for local development (installing Motoko, Node.js, dependencies, and deployment steps) and gives a brief overview of the project’s purpose and technology stack. However, it lacks several key elements required for a higher rating:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added several new modal workflows—including a plagiarism‑report modal and a report‑asset feature—and introduced public/private key generation for identity handling. We also enhanced document security with hashing and signing, refined the asset‑creation and digital verification flows, and fixed issues in the text uploader, backend data types, and modal state management. Together, these updates improve the reliability, security, and overall functionality of document handling, verification, and reporting across the platform.; Week of 2025-09-08: This week we added core onboarding and access features—including new user registration, a guest‑accessible default page, protected frontend pages with logout, and a complete “courting” asset workflow backed by new asset and proposal services and a report API. We also enriched the UI/UX with reusable map and chart components, a finished marketplace interface, duration‑enhanced notifications, refined navigation‑bar logic, error/redirect handling, and a debug‑simulation script while refactoring the frontend for more efficient data‑overhead handling. Together, these additions broaden functionality, tighten security, and boost reliability and user experience across the platform.; Week of 2025-09-15: This week we introduced voting and approval proposal UI components and expanded reporting with create‑report endpoints, configurable asset reports, and safeguards that block asset‑status changes while assets are pending or inactive. We also completed the asset‑creation feature, added multi‑user actor support to the backend service, refined RWA handling to prevent frontend errors when backend files are missing, and reverted the system to development mode. Together, these updates enhance decision‑making, improve reporting reliability, broaden core asset management, and increase overall application stability and concurrency.",dfx.json file found - indicates ICP/Dfinity project structure
ArksRWA/ArksRWA,https://github.com/ArksRWA/ArksRWA,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
ReyJrFerrer/SRV-WCHL,https://github.com/ReyJrFerrer/SRV-WCHL,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
https://github.com/Soulboard,https://github.com/Soulboard,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
digitull/Socialwave2-2025-08-20-21653077507511,https://github.com/digitull/Socialwave2-2025-08-20-21653077507511/,3,1,1,5,"The README provides a solid high‑level overview of the project—its purpose, target audience, core features, differentiators, pricing, and some technical details about the ICP proof layer. The sections are well‑structured, clearly titled, and formatted with markdown and shields, making it easy to skim.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we delivered a series of minor updates and bug fixes that refined existing functionality and improved overall stability. While no major new features were introduced, the incremental improvements enhance performance and reliability across the product.",dfx.json file found - indicates ICP/Dfinity project structure
CharClub/marketplace,https://github.com/CharClub/marketplace,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes.; Week of 2025-09-15: Minor updates and fixes: an unused `call.md` file was removed, and the price input handling in the character detail page was refined (empty input reset, numeric validation conversion to string, and minor code clean‑ups). These changes improve form robustness without adding new features.",dfx.json file found - indicates ICP/Dfinity project structure
Edge1Options/DawnPickCFD,https://github.com/Edge1Options/DawnPickCFD,3,0,1,4,"The README provides a solid project overview and clear, step‑by‑step instructions for setting up a local development environment (cloning, installing dependencies, configuring environment variables, starting the DFX local network, deploying, and running the dev server). The technology stack and basic project structure are also well‑described, and the formatting with headings, emojis, and code blocks makes it easy to read.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
LotusWallet/LOTS,https://github.com/LotusWallet/LOTS,3,0,1,4,"The README provides a clear overview of the project's features, API surface, security model, and a concise contribution workflow. It also outlines the repository structure and future roadmap, which helps readers understand the scope and organization of the codebase. However, it lacks essential setup instructions for getting the project running locally (e.g., prerequisites, installation steps, build commands, and how to launch the backend and frontend). There is no high‑level project description or purpose statement at the beginning, and no integration guide for developers who might want to consume the API or embed the storage canister in another project. While the contribution guidelines are present, the missing setup and integration details prevent the documentation from being fully usable for new developers, keeping it at a “fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
abya-university/abya-passport,https://github.com/abya-university/abya-passport,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
IC-DAPPS/BitcoinUSTbills,https://github.com/IC-DAPPS/BitcoinUSTbills,3,2,1,6,"The README provides a solid high‑level overview of the project’s purpose, architecture, and the hybrid TradFi‑DeFi model, including detailed diagrams and component descriptions. It clearly explains the decentralized components, the role of custodial holdings, and the KYC/VC framework, which helps readers understand the system’s goals and design.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we added the file‑store‑bucket package to the monorepo (fixing its repository URL) and introduced a full CI/CD pipeline via new GitHub Actions workflows that automate builds, tests, and deployments. We also automated CI support for generating and publishing API documentation for the package, enhancing the Docs build pipeline with robust file checks, validation steps, multiple download‑fallback methods, and debug logging. Together these changes improve dependency management, increase the visibility and reliability of our documentation, and streamline the release process.; Week of 2025-09-08: This week we added Playwright as the new end‑to‑end testing framework and extended the GitHub Actions CI pipeline to automatically build, deploy, and verify the frontend canister, include automatic Clippy lint fixes, reliable Mops installation, Rust target setup, caching, and a manual `workflow_dispatch` trigger for on‑demand runs. We also cleaned up the codebase by removing unused backend types, functions, and dependencies and simplifying error handling in `guard.rs`, `utils.rs`, and `lib.rs`. These changes boost build speed and reliability, provide automated UI validation, and improve overall maintainability and developer workflow.",dfx.json file found - indicates ICP/Dfinity project structure
ICPWorkOfficial/backend-canisters,https://github.com/ICPWorkOfficial/backend-canisters,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
ColettoG/icp-ant-colony-optimization,https://github.com/ColettoG/icp-ant-colony-optimization,3,1,1,5,"The README provides solid local‑development setup instructions: it points to online documentation, shows how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. The note on frontend environment variables is also helpful. However, the file lacks a substantive project description—readers are not told what the “ant‑colony‑icp” project actually does or its purpose. There is no integration or usage guide beyond the basic start‑up commands, and there are no contribution guidelines, code‑of‑conduct, or instructions for external developers to extend or test the project. The overall structure is clear and the formatting is decent, but the missing contextual and contribution information keeps the documentation at a basic “fair” level.",1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the backend API was expanded to allow runtime configuration of the ant‑colony algorithm: the canister now exposes `setParameters` and `setDistances` methods and the `antColonyOptimization` query now returns both the best tour and its cost. Corresponding Motoko code was updated to make the algorithm’s parameters and problem space mutable and to implement the new public functions. These changes make the ACO service more flexible and usable without redeploying.,dfx.json file found - indicates ICP/Dfinity project structure
lucas-surdo/mydrops,https://github.com/lucas-surdo/mydrops,3,1,1,5,"The README provides a clear project overview, a helpful directory tree, and solid local development instructions—including prerequisites, mock‑mode frontend setup, and steps to run against the real ICP backend. The formatting is clean and the language is understandable. However, it lacks several important elements: there are no contribution guidelines (e.g., how to submit pull requests, code style, testing procedures), no integration guide for consuming the platform as a library or API, and limited details on environment configuration, deployment to production, or testing. Consequently, while the core setup is well covered, the documentation is missing key sections that would elevate it to a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new HTML entry point (index.html) with accompanying styles (styles.css) and introduced a Vite configuration (vite.config.js) to enable modern frontend tooling and bundling. These additions provide a web UI layer and a build pipeline that were not present in the initial project files. Overall, the changes establish the foundation for a client‑side interface and improve development workflow.",dfx.json file found - indicates ICP/Dfinity project structure
badrinarayan-samantaray/supply_chain,https://github.com/badrinarayan-samantaray/supply_chain,3,0,1,4,"The README provides clear local‑development setup instructions (DFX commands, how to start the replica, deploy, generate Candid, run the frontend) and includes useful links to external documentation. The formatting is clean and the commands are well‑presented.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
gucorinthians/ICPInsurance,https://github.com/gucorinthians/ICPInsurance,2,1,1,4,"The README offers a brief project description (“a minimal setup to get React working in Vite…”) and provides detailed code snippets for extending the ESLint configuration. However, it lacks essential elements for comprehensive documentation:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new CLI (`cli.js`) and core implementation (`loose‑envify.js`) for the loose‑envify package, and overhauled `package.json` to rename the project, update its metadata, scripts, and dependencies accordingly. These changes introduce a fast, selective `process.env` replacer and make it executable via the `loose‑envify` binary. Overall, the week’s work shifted the repository from the previous @emotion/hash setup to a functional loose‑envify tool.",dfx.json file found - indicates ICP/Dfinity project structure
arincantikam26/i-GuardX,https://github.com/arincantikam26/i-GuardX,2,0,1,3,"The README provides a solid high‑level description of the project, its motivation, and a list of user‑facing features, as well as a live demo link and some references. However, it lacks essential technical documentation: there are no setup or installation instructions for local development, no guide on how to build, deploy, or run the canisters, no integration or API usage details, and no contribution guidelines or code‑of‑conduct information. The structure is clear but the content is incomplete, making it difficult for developers to get the project up and running or to contribute. Consequently, the documentation is limited and has significant gaps.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Chymezy/deCentra,https://github.com/Chymezy/deCentra.git,2,0,1,3,"The README provides a nice tech‑stack table, a clear project‑structure diagram, and a feature list, which help readers understand the components of the project. However, it lacks essential documentation elements. There is no introductory paragraph that explains what the project does or its purpose, no setup or local‑development instructions (e.g., how to install dependencies, run DFX, start the frontend, or configure the canister), no integration guide for consuming the canister’s API, and no contribution guidelines (e.g., code style, PR process, issue reporting). While the formatting and grammar are generally fine, the missing core sections make the documentation insufficient for developers to get started or contribute, resulting in a “Poor” rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
verichain-protocol/verichain,https://github.com/verichain-protocol/verichain,4,1,1,6,"The README provides a solid overview of the project, including a clear description, links to model/dataset resources, and a well‑structured list of features. It offers practical quick‑start instructions with `make` commands for cloning, setting up, and running the system, and outlines the architecture (canisters, build system, scripts). It also points to additional documentation (API reference, development guide, model details) for deeper integration and contribution information.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week a full registration flow was added, introducing a new Register page, route, and smart‑login logic that authenticates via Internet Identity, checks user registration, and redirects accordingly. UI enhancements include quota display in the sidebar with new SVG assets, plus several new components (LocalStorageTestComponent, PrincipalStatus, UserStatusBanner) and a useQuota hook, while local‑storage utilities were added for debugging. The auth provider and related services were refactored to store the principal, create a properly configured Logic canister actor, and improve handling of persisted authentication state.",dfx.json file found - indicates ICP/Dfinity project structure
Legatia/DeFlow,https://github.com/Legatia/DeFlow,3,3,1,7,"The README provides solid setup instructions for local development, a clear project structure, and useful scripts, which makes getting the code running straightforward. It also lists supported DeFi protocols, the business model, and some security features. However, it lacks a concise general project description at the beginning, offers no integration guide for developers who want to connect the platform to other services, and does not include contribution guidelines or a code‑of‑conduct. There are also a few formatting/typo issues (e.g., an incomplete “Secure Key Management: H” line). Because key elements such as a high‑level overview and contribution instructions are missing, the documentation falls into the “fair” category.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: The admin monitor panel was simplified for easier use, while the team management module received updates to enhance functionality. Additionally, communication issues between the admin pool and other components were fixed, stabilizing interactions. These changes collectively improve the admin experience and overall system reliability.; Week of 2025-09-08: This week we added a token‑usage‑limit setting and switched wallet connections to seed‑phrase‑only authentication, while refreshing the tokenomics plan for clearer economics. The side‑menu and canvas UI received visual and interaction refinements, improving layout and overall user experience. Together, these updates tighten security, enhance usability, and better communicate the platform’s value proposition.; Week of 2025-09-15: The week centered on reorganizing the Deflow defi nodes and refining the UI, including the removal of the glass‑reflection effect. An attempt was made to add defi templates (pending further verification), and overall visual and structural updates were applied. These changes improve code organization and UI consistency.",dfx.json file found - indicates ICP/Dfinity project structure
kd-s-t/splitsafe,https://github.com/kd-s-t/splitsafe,3,3,1,7,"The README provides solid local‑development setup instructions (environment copy, npm install, dev server, scripts for balances, testing, and data seeding) and a concise feature list, which helps a new developer get the app running quickly. However, it lacks a clear project overview that explains the problem being solved, the architecture, or the intended audience. There is no integration guide for consuming the upcoming API or connecting to other services, and there are no contribution guidelines (e.g., how to submit PRs, coding standards, issue reporting). While the formatting and grammar are generally good, the missing high‑level description and contribution information keep the documentation from reaching a higher rating.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a full real‑time messaging and notification system built on a hybrid ICP‑Pusher architecture, delivering chat, escrow‑lifecycle events, unread‑count tracking, Sonner toast alerts with sound, a QR‑code modal for Bitcoin addresses, and AI‑assistant nickname parsing. The UI was overhauled with messenger‑style bubbles, auto‑scroll, input focus, loading states, profile‑picture/name generation, refined form validation, tooltips, and layout fixes. Extensive TypeScript/ESLint cleanup, security hardening, Husky pre‑push checks, consolidated authentication context, and added logging/debugging dramatically improved reliability, developer experience, and overall user responsiveness.; Week of 2025-09-08: This week we introduced new escrow UI pages (basic‑escrow and milestone‑escrow) with a modern, reusable component layout, added a nudge button for milestone recipients, and launched a new Associates/Contacts module complete with a contract, ICP‑principal validation, and frontend integration. At the same time we performed extensive cleanup—fixing TypeScript, ESLint and Motoko warnings, refactoring email services and shared utilities, renaming the repository, and updating documentation—while hardening security by removing Pusher secrets from the client bundle and moving all credentials into GitHub‑Actions‑driven SSM SecureString parameters. Together these changes deliver fresh functionality, tighter type safety and code quality, and a significantly more secure and maintainable codebase.; Week of 2025-09-15: Implemented full contract‑signing support for milestone recipients and overhauled the milestone escrow workflow—adding backend fields, upload/download UI, status icons, a simplified MilestoneManager, and refined lifecycle logic (active when all recipients have signed and the client approved, with new “Ongoing” badge and standardized recipient IDs). Stabilized the codebase and CI/CD pipeline by fixing extensive TypeScript, import/export, and ESLint errors, refactoring the component hierarchy, removing unused dependencies, and adding robust Docker, Terraform, SSM, and Pusher configuration and security handling. Delivered additional UI polish (loading indicators, email template updates, Bitcoin balance script), expanded documentation, and numerous bug fixes that improve reliability, maintainability, and overall user experience.",dfx.json file found - indicates ICP/Dfinity project structure
FathanAkram-app/BitSub,https://github.com/FathanAkram-app/BitSub,3,1,1,5,"The README provides a solid project overview, feature list, and a clear architecture diagram, which helps readers understand what the platform does. It includes some setup instructions (prerequisites and a one‑command script) and points to example integrations, giving a basic entry point for developers. However, the documentation is incomplete in several important areas: the “Access Application” URL is truncated, there are no detailed steps for local development (e.g., building the frontend, deploying individual canisters, configuring environment variables), no explicit integration guide beyond mentioning example files, and no contribution guidelines or information on how to run tests, lint, or submit pull requests. Grammar and formatting are generally good, but the missing sections prevent it from being a comprehensive guide. Hence it falls into the “Fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented integration with the real Bitcoin network, updating the wallet flow to use Bitcoin mainnet balances. This change replaces test‑net or simulated balances, allowing users to interact with actual Bitcoin funds. The overall impact is a functional shift from mock data to live Bitcoin transactions.",dfx.json file found - indicates ICP/Dfinity project structure
torpadeka/mitra-chain,https://github.com/torpadeka/mitra-chain,2,3,1,6,"The README provides a solid high‑level overview of the project—its purpose, the problem it solves, the solution features, and a visual architecture/user‑flow description. The writing is clear, well‑structured, and free of major grammatical issues.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented extensive UI refinements across the Home, Profile, Register pages and navigation bar, plus a new theme‑toggle feature for consistent visual styling. The Profile page was stabilized by fixing a refresh‑redirect bug caused by a null user state, and a series of minor updates and fixes were applied throughout the app. These changes improve visual consistency, user experience, and overall reliability of core interfaces.; Week of 2025-09-08: Implemented the initial backend infrastructure for AI integration and laid the groundwork for ICRC support, updating core backend logic accordingly. Minor updates and bug fixes were applied across the codebase, and a merge from the main branch brought in the latest changes. These improvements establish the foundation for upcoming AI and ICRC features while stabilizing existing functionality.; Week of 2025-09-15: Implemented AI functionality while fixing a user registration bug and addressing issues in the authentication context. Completed the NFT feature, delivering a functional NFT component. Overall, the updates enhance user onboarding, security, and add new AI and NFT capabilities.",dfx.json file found - indicates ICP/Dfinity project structure
calimero-network/MeroDocs,https://github.com/calimero-network/MeroDocs,2,1,1,4,"The README provides a solid high‑level description of MeroDocs, its architecture, and core features (privacy‑first workflow, signature library, PDF handling, ICP integration, and AI chatbot). However, it lacks essential practical information: there are no setup or installation instructions for local development, no guide on how to run or build the project, no integration or API usage details, and no contribution guidelines or code of conduct. While the overall structure and formatting are clear, the missing sections are critical for developers who want to clone, test, or contribute to the project, resulting in a documentation quality that is limited and has significant gaps.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added AI‑driven legal chatbot and PDF‑embedding functionality, including a new ai_document_analysis canister with chunked contract analysis and semantic similarity search. Refactored the canister directory structure and backend to support multiple canisters, and upgraded deployment workflows with verification steps, improved logging, and error handling. Enhanced LLM integration, identity resolution, and client APIs for document embeddings and search.",dfx.json file found - indicates ICP/Dfinity project structure
WeGoWinPrikitiw/pico,https://github.com/WeGoWinPrikitiw/pico,3,0,1,4,"The README provides a decent overview of the project’s purpose, features, and high‑level architecture, listing the various canisters and AI‑driven capabilities. However, it lacks essential practical information: there are no step‑by‑step setup or local‑development instructions, no guide on how to integrate the platform with other services or how to deploy the canisters, and no contribution guidelines (e.g., code style, pull‑request process). The structure is fragmented, with incomplete sentences and formatting issues that affect readability. Overall, the documentation offers a basic project description but is missing several critical elements needed for developers to get started or contribute effectively.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
P4-Games/ChatterPay-ICP-Backend,https://github.com/P4-Games/ChatterPay-ICP-Backend,3,1,1,5,"The README provides a solid general description of the project and includes clear local‑development setup steps (installing requirements, cloning, installing DFX, starting a local network, and deploying canisters). The architecture diagram and component list help understand the system’s scope. However, it lacks several key elements: there are no integration instructions for how other services or front‑ends should interact with the backend APIs, no contribution guidelines (e.g., how to submit PRs, coding standards, testing procedures), and no information on testing, linting, or CI/CD. Grammar and formatting are generally good, but the missing sections prevent it from being a comprehensive developer guide. Hence it falls into the “fair” range.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The EVM Service was upgraded with scroll support and owner‑controlled contract management, while type‑related errors were resolved. Documentation was significantly expanded, adding a detailed EVM service guide, a repository cover, and other clarifications. Minor updates and fixes further improve code reliability and overall project usability.",dfx.json file found - indicates ICP/Dfinity project structure
3wHub/voted-apps,https://github.com/3wHub/voted-apps,3,0,1,4,"The README provides a solid general description of the project, outlining the problem it addresses, its solution, and a detailed list of core features. The branding, badges, and visual elements make it inviting and clear. However, the documentation is missing several key elements required for a higher rating:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Zeegaths/Lipainvoice,https://github.com/Zeegaths/Lipainvoice,2,3,1,6,"The README provides a fairly detailed project description, outlining the overall purpose, authentication model, admin capabilities, and a high‑level view of the frontend structure and core features. However, it lacks essential documentation elements required for a developer to get started or contribute effectively. There are no setup instructions for local development (e.g., prerequisites, installation steps, build/run commands), no integration guide for using the application as a library or API, and no contribution guidelines (coding standards, pull‑request process, issue reporting, etc.). The document also appears truncated (it ends abruptly after “### Landing Page”), which further reduces its usefulness. Overall, while the high‑level description is clear, the missing practical guidance and incomplete content keep the score at a low 2.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added ICRC‑21 consent message types with a new `icrc21_canister_call_consent_message` service method and integrated NFID IdentityKit, replacing Internet Identity with a unified `useAuth` hook and updating dashboard actor/query hooks to work with the new agent and user context. The dashboard UI was refactored—unused pages removed, navigation streamlined, and file‑upload/notification placeholders added—while invoice hooks received authentication, enhanced error handling, and toast notifications for clearer feedback. These changes improve consent handling, authentication flow, and overall user experience across the frontend.; Week of 2025-09-08: Added a new invoicing generation feature. Refactored the Dashboard and Invoice Creation components to improve data handling, invoice filtering, validation, and user feedback. Updated Sidebar and App components for more streamlined navigation.; Week of 2025-09-15: This week we introduced a public‑invoice API (`getPublicInvoice`) and integrated the Client Payment Portal into the main app, adding copy‑link functionality, unified ID generation, Bitcoin‑USD conversion fixes, and removing the legacy “My Wallet” sidebar and Reputation Overview. We refactored the codebase by adding the `@icp-sdk/core` dependency, consolidating invoice hooks under a new `useAgent` abstraction, updating Vite’s proxy, and overhauling dependencies—switching to the `k256` library, dropping unused Bitcoin crates, and cleaning up canister `.did` files and Cargo manifests. Together these changes streamline invoicing workflows, improve security and performance, and deliver a cleaner, more maintainable UI.",dfx.json file found - indicates ICP/Dfinity project structure
SudhanshuYadav174/AgriCart,https://github.com/SudhanshuYadav174/AgriCart.git,5,2,1,8,"The README provides a clear and thorough overview of the project, including a concise description of its purpose, architecture diagram, and the role of each component (React frontend, Supabase edge functions, ICP canister). It contains detailed local‑development setup instructions with all necessary npm scripts, environment variable definitions, and steps to start the local ICP replica, deploy the canister, seed data, and run the frontend. A scripts table makes command usage easy to understand. The verification flow explains how the pieces integrate at runtime, serving as an informal integration guide. Contribution guidelines are present (PR welcome, lint command, conventional commits), and security considerations are noted. The document is well‑structured with headings, tables, and code blocks, and the grammar/formatting are clean. Overall, it meets all the criteria for excellent documentation.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the core AgriQCert application was introduced, adding a complete React/TypeScript front‑end with dozens of UI components, multiple dashboard and page modules, authentication hooks, Supabase functions, and a Motoko canister definition. Deployment support for the Internet Computer was also added, including a new front‑end canister entry in dfx.json, local .dfx network configuration files, PowerShell/Bash deployment scripts, and npm scripts for local and IC deployment. Together these changes deliver a functional product baseline and enable immediate testing and deployment on the ICP network.; Week of 2025-09-15: This week the project added full Internet Identity (ICP) authentication support, introducing a new useICAuth hook, environment variables, and the @dfinity/auth-client dependency, and integrated IC auth throughout role‑based guards, the header, dashboard routing, and the login page to enable dual authentication alongside Supabase. UI components such as RoleGuard, RoleRedirect, AuthGuard, Header, and ExporterDashboard were updated to recognize IC‑authenticated users, display appropriate user info, and redirect them to the exporter dashboard. Additionally, several .dfx network state files were renamed/updated, and package manifests were adjusted to include the new ICP libraries.",dfx.json file found - indicates ICP/Dfinity project structure
Frascth/cvku.id,https://github.com/Frascth/cvku.id,2,2,1,5,"The README provides a sequence of installation and startup steps, which gives a basic local‑development setup (installing Node, Motoko, Ollama, pulling a model, starting DFX, deploying the canister). However, it lacks a general project description, any overview of what the project does, or its architecture. There is no integration guide, no instructions for how to use the deployed canister beyond “Launch the Resume Builder,” and no contribution guidelines, issue‑reporting process, or code‑style conventions. Formatting and grammar are also problematic (mis‑numbered list, unclosed code fences, inconsistent capitalization). Because of these significant gaps, the documentation falls into the “Limited documentation with significant gaps” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the certification service was refactored to accept a local‑id (`lid`) in add requests, return a structured `Response` with created data, and provide unified error handling for batch updates and deletions; the frontend store now tracks this `lid`, generates it client‑side for optimistic updates, and adds an `areHandlersReady` check to ensure all handlers are initialized before loading a resume. UI components for certifications, education, skills, and work experience were updated to use the new `isBackendId` utility (disabling delete actions for unsaved items) and to simplify auth loading logic, while the AuthProvider was cleaned up with clearer environment‑variable handling. Overall, the changes introduce optimistic UI for certifications, improve backend‑frontend contract consistency, and tighten initialization and authentication flows.; Week of 2025-09-08: Implemented a new assessment feature, enabling creation and management of assessments within the system. This addition expands the platform’s capabilities for evaluating content or performance. Overall, it introduces a core functionality that supports structured assessment workflows.; Week of 2025-09-15: Implemented an Analytics Dashboard for richer data visualization, added a public link to the community job connector, and introduced a new front‑end “spark” feature, while also delivering minor updates and fixes across the platform. These enhancements expand functionality, improve user interaction, and strengthen community connectivity. Overall, the week’s work boosts analytics capabilities and refines existing features for a smoother user experience.",dfx.json file found - indicates ICP/Dfinity project structure
prometheus-protocol/prometheus-protocol,https://github.com/prometheus-protocol/prometheus-protocol,2,3,1,6,"The README provides a high‑level overview of the project’s goals, key achievements, and a feature table, which gives a decent sense of what the Prometheus Protocol is and why it matters. However, it lacks essential practical documentation:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Added a new usage‑tracker feature (PR 30‑31) with numeric allowance validation fixes and introduced an ICRC token that serves as the underlying asset for pre‑MCPT tokens, expanding token handling capabilities. The bounty system was hardened: claiming a bounty now locks it for subsequent attestations, and audits are enforced to require a claimed bounty before they can be attested. Documentation links were added, unused authentication/audit credentials were removed, the lockfile regenerated, production canister deployment was completed, and test coverage was improved with minor adjustments.; Week of 2025-09-08: This week we added sponsor buttons, unified breadcrumb navigation, a revamped app‑store submission flow for attestations, a full bounty and audit workflow with an Audit Hub, and a new app‑bounties canister backend. We also launched several leaderboard features (static and 9‑8 rankings) for MCP canisters, tool users, and general users, refactored the points system to a usage‑statistics model, switched the token economy to USDC, and refreshed avatars to a pixel‑art style. Minor test clean‑ups, lockfile regeneration, and UI build fixes rounded out the release, delivering improved UI consistency, richer financial handling, and new competitive elements across the platform.; Week of 2025-09-15: This week we added a searchable interface with server‑statistics views, OAuth end‑to‑end URL handling, automatic deployment of apps and canisters after successful build verification, and a feature that assigns the Wasm controller to the owner of a deployed server. We also tightened Wasm payloads to a 1 MiB chunk limit, refreshed UI icons, cleaned up app‑store types and debug comments, and fixed type‑checking errors in Zod forms and test definitions. Together these changes improve data discovery, deployment stability and security while streamlining the release pipeline and raising overall code quality.",dfx.json file found - indicates ICP/Dfinity project structure
BlockChainTechBrazil/PetID-ICP,https://github.com/BlockChainTechBrazil/PetID-ICP,2,2,1,5,"The README provides a brief overview of the project’s components, a roadmap, usage flow, and a team section, which gives some context and a sense of what the application does. However, it lacks essential documentation elements:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week a full health‑records module was added, introducing a new HealthPage, HealthForm components, and integrating them into the profile’s MedicalPanel and navigation menu. The AuthContext was expanded to store health records, manage session expiration, and provide a backend actor creator, while translation files and the Vite environment configuration were updated accordingly. Additionally, the Internet Identity candid interface was extended with generic OpenID configuration support.; Week of 2025-09-08: Added a new Medical History and Vaccines feature, enabling the system to record and manage patients' medical background and vaccination records. This enhances comprehensive patient data tracking and supports better healthcare decision‑making.; Week of 2025-09-15: This week introduced a “Document for Pet” feature and refined core rendering by refactoring the Infinity Canvas library, its canvas component, and the initial genealogy module, while also improving the document UI for a cleaner, more functional interface. Additionally, the icon set and overall iconography were overhauled to boost visual consistency across the application. Together, these changes enhance both the functional capabilities (pet documentation and genealogy tracking) and the visual polish of the UI.",dfx.json file found - indicates ICP/Dfinity project structure
nitinc264/WCHL-National-Round,https://github.com/nitinc264/WCHL-National-Round,3,0,0,3,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
lavu-create/Clario,https://github.com/lavu-create/Clario,2,1,0,3,"The README provides a clear project structure, team roster, a basic Git workflow, and a list of future enhancements, which gives a decent overview of the repository layout and who is working on what. However, it falls short on several critical documentation elements:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we delivered several minor updates and bug fixes that improve the stability and performance of existing features. While no major new functionality was introduced, the refinements enhance the overall user experience and maintainability of the codebase.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
SafeGiantJacket/CarbonX,https://github.com/SafeGiantJacket/CarbonX,2,1,1,4,"The README provides a solid high‑level overview of the CarbonX project, its purpose, and a detailed list of recent features. It describes the various canisters, UI components, and advanced capabilities (AI fraud detection, IoT integration, etc.), which gives readers a good sense of what the system does.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented a suite of professional frontend components—including notifications, activity feed, batch actions, export/reporting, dark‑mode toggle, a fractional marketplace panel, and a new canister‑actor library—and expanded the backend canisters with fractional credit handling, royalty logic, metadata updates, audit/history tracking, and additional endpoints for issuance, marketplace, registry, and retirement. The README was revised to showcase these final add‑ons, role‑based permissions, and AI‑based fraud detection. Together, the changes make CarbonX enterprise‑ready, providing full UI integration for fractional trading and enhanced auditability.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/easydapp,https://github.com/easydapp,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
SpaceCoupe55/LastPing233,https://github.com/SpaceCoupe55/LastPing233,3,0,1,4,"The README provides a solid project overview, feature list, architecture summary, and some visual screenshots, which give readers a good sense of what the dApp does. It also includes a brief “Getting Started” section with prerequisites and the first two installation steps (cloning the repo and installing Node dependencies). However, the setup instructions are incomplete—the “Start local replica” command is cut off and there are no further steps for building the Motoko canister, deploying to the local replica, or running the frontend. There is no integration guide for developers who might want to use the token or the dead‑man's‑switch logic in other projects, and there are no contribution guidelines, code of conduct, testing instructions, or release/versioning information. Grammar and formatting are generally fine, but the missing critical sections prevent the documentation from being fully usable for developers. Hence, it falls into the “Fair” category.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
prp101/develo-dao,https://github.com/prp101/develo-dao,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
https://github.com/suDAO-WCHL,https://github.com/suDAO-WCHL,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
ndrewantonio/encoteki-whcl-2025,https://github.com/ndrewantonio/encoteki-whcl-2025,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
danielabrahamx/Paramify,https://github.com/danielabrahamx/Paramify/tree/icp-secure,4,1,1,6,"The README provides a solid project overview, clear feature list, and thorough setup instructions for both local development and GitHub Codespaces—including prerequisites, step‑by‑step commands for starting the Hardhat node, deploying and funding the contract, and launching the backend and frontend services. The structure is logical with headings, code blocks, and a quick‑deployment summary that aids readability.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: Added a new `README-ICP.md` (423 lines) providing a full guide for ICP deployment, including prerequisite installations, automated and manual deployment steps, testing, troubleshooting, architecture overview, production guidance, and security considerations. This documentation enhances onboarding and simplifies local and production deployments for the ICP migration. No code changes were made beyond the added guide.",dfx.json file found - indicates ICP/Dfinity project structure
divin3circle/optic,https://github.com/divin3circle/optic,2,2,1,5,"The README provides a good overview of the project’s purpose, features, and high‑level architecture (e.g., multi‑canister design, technology stacks, and deployment links). However, it lacks several critical sections required for a comprehensive developer‑focused README:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added a new **JoinGroup** page and route (including an invite‑link copy button in GroupProfile) and introduced a useGetChatRoom hook. Enhanced data freshness across the app by adding refetchInterval and staleTime to useUser, usePersonalChats, useGroupChatMessages, and usePersonalChatRooms hooks, and removed unused imports. Also fixed a minor error‑message typo for consistency.; Week of 2025-09-15: This week the chat system was extended to support image media: a MediaModal component and inline image rendering were added to MessageBubble, and MessageInputBar now uses use‑file‑picker to upload images, clears the media URL after sending, and integrates a new useUploadMedia hook. Backend message definitions and the send_personal_message update were modified to include an optional mediaUrl field, and corresponding TypeScript types were updated. The project also added the use‑file‑picker dependency, introduced a media‑canister hook/interface, and refined several query hooks and UI components for error handling and styling.",dfx.json file found - indicates ICP/Dfinity project structure
zatchone/blocktrace-app,https://github.com/zatchone/blocktrace-app,3,2,1,6,"The README provides a solid overview of the project’s purpose, architecture, tech stack, and core features, which gives readers a clear sense of what the system does and how it’s structured. However, it lacks essential practical information: there are no step‑by‑step setup or installation instructions for running the code locally, no guidance on how to configure the ICP environment, no integration or API usage guide, and no contribution guidelines (e.g., how to submit issues or pull requests). While the formatting and grammar are generally good, the missing “Getting Started,” “Installation,” and “Contributing” sections are significant gaps, preventing developers from easily onboarding or contributing. Consequently, the documentation is fair but incomplete.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the team delivered major ICP capabilities—including HTTP outcalls for supplier verification, advanced ESG timers, t‑ECDSA cross‑chain verification, and an ESG‑integrated PDF passport export with certificate download—while fixing NFT ID handling to start from 0. They also launched a full suite of professional UI pages (About, Features, Pricing, Demo, Roadmap) with a glass‑morphic neon redesign and completed WCHL25 documentation and business‑model materials. Together these enhancements boost backend functionality, polish the user experience, and make the product business‑ready for investors and judges.; Week of 2025-09-15: The project was moved to mainnet, adding live URLs and updating the canister IDs (including a production‑ready `key_1` for t‑ECDSA) in the backend code. Documentation was expanded with deployment details, revenue projections, technical challenges, and new architecture/user‑flow diagrams, plus a `canister_ids.json` file. These changes finalize the supply‑chain tracking canister for production while keeping the NFT passport component pending due to cycle constraints.",dfx.json file found - indicates ICP/Dfinity project structure
iconworldwide/rwa-icp,https://github.com/iconworldwide/rwa-icp,4,0,0,4,"The README provides a clear project overview, lists the main features, and specifies the technology stack. It includes solid setup instructions for local development (Node version, dependency installation, and how to start the dev server). The project structure is outlined, and a brief contribution note is present.",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
kentryanentice/primelendrow-wchl,https://github.com/kentryanentice/primelendrow-wchl,0,1,1,2,No documentation assessment provided.,"1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: A full project scaffold for **Primelendrow** was added, introducing a Rust‑based engine (Cargo.toml, Cargo.lock, DFX config, and multiple source modules for users and vaults) alongside a TypeScript/React front‑end with Vite, SCSS styles, assets, and routing/SEO providers. The repository also received a GPL‑3.0 LICENSE, an updated .gitignore (adding a timestamp pattern), and supporting configuration files (tsconfig, package.json, etc.). Overall, the week delivered the initial codebase for a new full‑stack application rather than incremental tweaks.",dfx.json file found - indicates ICP/Dfinity project structure
3bdoredaa2244/HarvestX_ICP_Hackathon,https://github.com/3bdoredaa2244/HarvestX_ICP_Hackathon,3,1,1,5,"The README provides a solid project overview, clear feature list, and decent setup instructions for local development (prerequisites, cloning, dependency installation, starting a local ICP replica, and deploying canisters). It also includes environment variable examples and begins an API reference table. However, it lacks several key elements: there are no contribution guidelines, no detailed integration guide beyond the basic deployment steps, and the API reference is incomplete (truncated). While the overall structure and formatting are good and the grammar is generally clear, the missing sections prevent it from achieving a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the team seeded the HarvestX project, adding a complete Rust backend canister (Cargo files, types, and library code) and a comprehensive React/TypeScript frontend with Tailwind UI components, pages for farmer and investor dashboards, marketplace, listing creation, profile management, and ICP service integration. All listed files are newly added, establishing the core architecture and user interface for the African stage. These changes provide the foundational backend and frontend scaffolding for all future feature development.",dfx.json file found - indicates ICP/Dfinity project structure
avi1967/ChainMail,https://github.com/avi1967/ChainMail.git,3,0,1,4,"The README provides a clear and engaging project description, outlines user‑ and blockchain‑level features, includes screenshots, and lists the tech stack, which gives readers a solid understanding of what the application does and how it’s built. The structure and formatting are clean, and the language is generally well‑written.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
riyqnn/Medical,https://github.com/riyqnn/Medical,1,1,1,3,"The README contains only a brief author line and a license section. It lacks any project description, setup or installation instructions, integration guidance, contribution guidelines, or any other substantive information. As a result, the documentation is minimal and does not provide the necessary context or instructions for developers or users.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: The week’s work focused on enhancing the project documentation: the README was substantially expanded with a detailed overview, mission, problem/solution sections, demo‑video and pitch‑deck badges, a flowchart image, and clearer architecture description. No code files were added, modified, or removed, so the functional features of the application remain unchanged.",dfx.json file found - indicates ICP/Dfinity project structure
iconworldwide/ckTON,https://github.com/iconworldwide/ckTON,3,1,1,5,"The README provides solid local‑development setup instructions—commands to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server are clearly listed, along with notes on environment variables. It also includes a few operational commands (admin setup, fetching the minter address, deploying the minter wallet), which serve as a rudimentary integration guide.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new `get_ton_transactions` update method in the minter canister to fetch TON transaction data, and updated the TON API types to derive `CandidType` for proper cross‑canister serialization. Minor workspace config tweaks were also made. These changes extend the canister’s functionality by enabling transaction retrieval via a callable endpoint.",dfx.json file found - indicates ICP/Dfinity project structure
WAW1311/dyahai-2.0,https://github.com/WAW1311/dyahai-2.0,2,2,1,5,"The README provides only a handful of media links (demo video, pitch deck, pitch video) and a list of contributors, plus a license notice. It lacks a clear project description that explains what the software does, its purpose, or its key features. There are no setup or installation instructions for running the project locally, no guide on how to integrate or use the code, and no contribution guidelines (e.g., how to submit pull requests, coding standards, or issue reporting). While the formatting is clean and the links work, the essential documentation elements required for developers to understand, install, and contribute to the project are missing, resulting in a very limited README.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the team bolstered frontend stability by fixing navigation and scrolling behavior, correcting the infinite‑generation functionality, and applying a range of general bug fixes. Minor updates and additional tweaks were also incorporated to polish existing features. These improvements enhance user interaction, increase reliability, and deliver a smoother overall experience.; Week of 2025-09-08: The backend was refactored into separate modules (http, storages, transaction, users, stable_memory) with new files and type definitions, and the canister interface (.did) was updated to match these changes, adding HTTP request support and stable‑memory handling. A deployment script (deploy.sh) was added, and the frontend pricing page was corrected (prices adjusted, USD‑to‑ICP conversion simplified) and cleaned up. Overall, the changes improve code organization, add HTTP capabilities to the canister, and fix the pricing UI.; Week of 2025-09-15: Implemented Internet Identity authentication, adding a new login method for users. This feature expands the platform’s authentication options and enhances user onboarding.",dfx.json file found - indicates ICP/Dfinity project structure
Txrmarcos/TaaS,https://github.com/Txrmarcos/TaaS,2,1,1,4,"The README provides a solid high‑level project description and a helpful table of contents, but it falls short on the practical details developers need to get the code running and to contribute.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: Implemented a full post‑tagging system: added a `Tag` enum in the Motoko backend, stored a tag on each `Post`, and extended the `createPost` API to accept it; updated front‑end types, UI components (TagCarousel, publish page, news‑feed parsing) and added tag options so users can select and view tags. Added a click handler on profile cards to open the detailed `BigNewsCard`. These changes introduce content categorization across the app and improve post interaction.",dfx.json file found - indicates ICP/Dfinity project structure
tomasz2001/voyager,https://github.com/tomasz2001/voyager,1,3,1,5,"The provided excerpt offers only a high‑level, conceptual overview of the “Voyager” system (pillars, communication interfaces, and a mission statement). It lacks essential documentation elements such as:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we delivered a series of minor updates and bug fixes across the codebase, refining existing functionality and improving stability. The changes address several edge cases, enhance performance, and reduce error rates. Overall, these incremental improvements increase reliability and provide a smoother user experience.; Week of 2025-09-08: Implemented the Vmessager application, adding UI assets (fonts, icons, sound) and moving them into a “backpack” folder while introducing an identity.pem file for user keys. Enhanced main.py with identity generation, ICP client integration, new chat commands (help, target) and ID‑shortening utilities, and updated resource paths accordingly. Produced build artifacts (V‑messager.zip) and cleaned up/renamed resources, completing the core functionality of the new messenger app.; Week of 2025-09-15: Minor updates and bug fixes were applied across several components, refining existing functionality and addressing known issues. These improvements enhance system stability and performance, resulting in a smoother user experience. No new features were introduced this week.",dfx.json file found - indicates ICP/Dfinity project structure
ZeyaRabani/BIT10,https://github.com/ZeyaRabani/BIT10,3,1,1,5,"The README provides **basic setup instructions** for local development (navigating to `web_app`, installing dependencies, running the dev server, and accessing the app) and an **architecture overview** that lists the main technologies used. However, it lacks a clear **project description** that explains what BIT10 does, its goals, or its core features. There is no **integration guide** for how to use the listed canisters or Solana programs, nor are there any **contribution guidelines**, licensing information, or instructions for running tests or configuring environment variables. The formatting is readable, but the content is incomplete for a new developer or external contributor. Overall, the documentation covers the minimal setup but misses several key elements, placing it at a “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: The home page UI was refreshed, the server now includes new rebalance logic, and a testnet canister was added to enable purchasing BIT10. These updates improve the user experience, enhance backend stability, and introduce a new token‑buying capability.",dfx.json file found - indicates ICP/Dfinity project structure
CoFi-Xyntra/copilot-finance,https://github.com/CoFi-Xyntra/copilot-finance,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
alfa-codes/alfa-apy-icp-canisters,https://github.com/alfa-codes/alfa-apy-icp-canisters,3,2,1,6,"The README provides a solid general description of the project, including a clear overview, key features, technology stack, architecture diagram, and helpful quick‑link resources (live app, documentation, videos). The formatting and visual elements are clean and the grammar is generally good.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we added a new `get_pools_history` endpoint for pool statistics, introduced branding with a project logo, and included a LICENSE file for open‑source compliance. Minor updates and bug fixes were also applied across the codebase. Together, these changes expand API functionality, improve the project's visual identity, and ensure proper licensing while stabilizing existing features.; Week of 2025-09-08: Implemented ICRC‑21 support in the vault canister by importing the necessary ICRC‑21 types, adding ICRC‑21 entries to the list of supported standards, and introducing a new query (`icrc21_canister_call_consent_message`) to handle consent‑message requests. Existing vault code was updated to decode and process these requests, extending the canister’s compliance with the ICRC‑21 authentication spec. No new files were added, but the vault’s functionality and standards reporting were significantly expanded.",dfx.json file found - indicates ICP/Dfinity project structure
rishab36/parking-finder,https://github.com/rishab36/parking-finder,3,1,1,5,"The README provides a strong project overview, clear branding, and detailed feature/technology tables that give readers a good sense of what the app does and the stack it uses. However, it lacks essential practical information. There are no setup instructions for getting the project running locally (e.g., cloning the repo, installing dependencies, running a dev server or building the canister), no step‑by‑step integration guide for developers who want to use the ICP canister, and no contribution guidelines (how to submit PRs, code style, testing, etc.). While the overall clarity, grammar, and formatting are solid, the missing onboarding and contribution sections prevent it from being a complete developer‑focused README. Hence it falls into the “basic documentation present but missing some important elements” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The README was refreshed to detail new blockchain integration and community features. An Internet Computer (ICP) integration was added, including a Motoko parking canister with CRUD operations, TypeScript agent, React demo component, deployment configuration, and documentation, plus a mock service for development. This delivers persistent, real‑time parking data storage and location‑based search on the ICP blockchain, completing a full frontend‑backend Web3 dApp for the WCHL 2025 requirement.",dfx.json file found - indicates ICP/Dfinity project structure
bessho/willwisher,https://github.com/bessho/willwisher,1,0,1,2,The provided README consists almost entirely of a sample Last Will and Testament template and a single link to the repository. It lacks virtually all of the elements expected in comprehensive project documentation:,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
MentalverseICP/MentalVerse,https://github.com/MentalverseICP/MentalVerse,3,3,1,7,"The README provides a solid project overview, clearly outlines the platform’s core features, recent upgrades, and highlights technical strengths such as security compliance and architecture. The formatting and grammar are generally good, and the use of badges and section headings makes the document easy to navigate.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a partial onboarding flow and added the initial doctors page, expanding the app’s user‑facing features. Completed outstanding routing issues, improving navigation reliability across the application. These changes enhance the onboarding experience and ensure core routes function correctly.; Week of 2025-09-08: This week the team fixed smart‑contract syntax errors, introduced the first visual updates to the landing page (including removing the logo’s link), and enhanced the calendar component and overall page responsiveness. They also delivered the therapist UI with finalized design, added functional dashboards for doctors and patients, refreshed onboarding data, and built a Rust‑based secure messaging system with cryptographic protections. Together these changes improve functionality, usability, visual polish, and secure communication across the platform.; Week of 2025-09-15: This week we strengthened security and compliance by encrypting PHI storage with proper key management, restricting MVT token canister access, adding UUID/session‑ID validation, moving security logic into smart contracts, formalizing HIPAA/GDPR policies, fixing secure‑messaging Wasm validation, and verifying inter‑canister communication. We also enhanced authentication and user onboarding by updating token handling, repairing auth routes, increasing signup rate‑limiting, modularizing the backend into four canister‑communication modules, integrating registration with the backend’s initializeUser method, and fixing response handling, phone‑number formatting, and import‑service bugs. Frontend improvements include dynamic canister IDs, direct canister deployments, refreshed landing‑page images, and an updated build process that generates type declarations, delivering a more reliable UI, smoother deployments, and overall system stability.",dfx.json file found - indicates ICP/Dfinity project structure
petrakol/blockxpand-icp,https://github.com/petrakol/blockxpand-icp,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Kevin5621/origin-stamp-icp,https://github.com/Kevin5621/origin-stamp-icp,2,3,1,6,"The README provides a clear and compelling project description, outlining the problem, solution, and high‑level architecture of OriginStamp. It explains the three pillars of trust, the verification experience, and why the Internet Computer is chosen, which gives readers a good sense of what the project does and its value proposition.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we delivered major new capabilities—including a full‑stack NFT system with minting, marketplace, and DFINITY canister integration; a comprehensive subscription platform with tiered plans, coupons, context providers, and UI sections; end‑to‑end session management (creation, S3 photo uploads, profile‑picture handling) and a metrics‑driven dashboard featuring collapsible navigation, responsive shadcn/ui components, and multi‑method authentication (username/password, Internet Identity, Google OAuth) secured by middleware, guards, and cookie synchronization. We also polished the existing experience by overhauling the landing page and dark‑mode theme, standardizing containers and loading spinners, optimizing images with the framework’s Image component, removing hard‑coded AWS credentials, adding SEO metadata, and updating documentation and testing setup. Together, these changes expand core product functionality, boost security and performance, and provide a more cohesive, polished, and developer‑friendly UI across the application.; Week of 2025-09-08: This week we added a full‑featured location‑search system (autocomplete, OSM service, debounced hook) and Google OAuth support, introduced AI‑powered verification with a new VerificationContainer and centralized verification types, and launched new backend services such as PhysicalArtService and AvatarService along with a refined verification‑update flow. UI components across profile, subscription and loading experiences were restyled, modularized and optimized with caching, optimistic updates, skeleton loaders and bug fixes, delivering a cleaner, faster, and more stable user experience. The CI/CD pipeline and deployment scripts were overhauled and the backend was reorganized into modular services, greatly improving build reliability, deployment flexibility, and overall system robustness.; Week of 2025-09-15: The team launched a complete NFT marketplace page featuring backend endpoints and Tailwind‑styled frontend components for featured collections, trending creators (with profile photos via Dicebear), and a detailed NFT modal, plus new NFT ownership querying and listing functions. Authentication was improved by adding an AuthRedirect component to the Home page and updating middleware for root‑path routing, while development scripts were streamlined and a backend connection issue was resolved. These changes broaden marketplace capabilities, enhance data access, and provide a smoother, more engaging user experience.",dfx.json file found - indicates ICP/Dfinity project structure
muslimalfatih/collective-impact,https://github.com/muslimalfatih/collective-impact,1,2,1,4,"The provided README excerpt contains only a brief, partially formatted list of API functions (with a typo in the first entry) and no additional context. It lacks a project description, any setup or installation instructions, integration guidance, contribution guidelines, or any narrative that explains the purpose or usage of the project. There is also no clear structure, headings, or formatting beyond a few bullet points, and the grammar is poor. Because essential documentation elements are missing, the documentation quality is minimal.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The week’s work was dedicated to improving project documentation: the README was extensively rewritten to add badges, a detailed overview, whitepaper link, problem/solution description, and tech‑stack information. No code changes or new features were introduced.; Week of 2025-09-15: Implemented a full backend canister for campaign management, introducing persistent storage, campaign/donation types, and related APIs in `src/backend/main.mo`. Updated the README with live deployment URLs and revised setup instructions, added `canister_ids.json`, and extended `dfx.json` with IC network configuration. These changes enable end‑to‑end functionality and production deployment that were not present in the initial state.",dfx.json file found - indicates ICP/Dfinity project structure
Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,https://github.com/Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,2,0,1,3,"The README provides a solid high‑level overview of the problem, solution, and workflow, and it includes some attractive badges and a clear project description. However, it lacks essential practical information. There are no setup or installation instructions for local development (e.g., how to clone the repo, install dependencies, run the frontend/backend, or configure the ICP canister). No integration guide or API usage details are present, and there are no contribution guidelines, code of conduct, or licensing information. The document also ends abruptly mid‑sentence, indicating it is incomplete. Overall, while the narrative is clear and well‑structured, the missing technical and contribution sections constitute significant gaps, resulting in a low rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Infoundr/infoundr-site,https://github.com/Infoundr/infoundr-site,3,2,1,6,"The README provides a solid project overview and clear setup instructions for local development, including prerequisites, cloning, starting the local replica, and running the development server. It also outlines various development and deployment options, which is helpful. However, it lacks several key elements: there are no contribution guidelines (e.g., how to submit pull requests, code style, testing procedures), no detailed integration guide beyond a brief mention of Slack/Discord, and no information on licensing, code of conduct, or how to run tests. While the structure and formatting are generally good, the missing sections prevent it from being a comprehensive documentation set. Hence it falls into the “Fair” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The pricing model was updated with a styled “Start Free” button and a “Coming Soon” overlay for the Pro tier, improving onboarding and tier visibility. Slack integration documentation was added and refreshed, and a series of minor updates and fixes were applied across the platform. Together, these changes enhance user experience, clarify integration steps, and increase overall system stability.; Week of 2025-09-15: This week we introduced a full Playground feature, adding UI integration with markdown rendering, chat components, a demo‑style interface, backend support for a PlaygroundID user identifier, and an admin‑stats endpoint, while updating “Get Started” buttons to link to it. We also added production environment variables to the GitHub Actions workflow, made the API configuration environment‑aware, and removed unnecessary emojis and API‑key logs for a cleaner UI and stronger security. Minor bug fixes and extra console‑log debugging round out the release, improving navigation safety, onboarding flow, and overall system reliability.",dfx.json file found - indicates ICP/Dfinity project structure
memeett/icp,https://github.com/memeett/icp,3,3,1,7,"The README provides a solid project overview, lists features, and includes fairly detailed setup instructions for both the Motoko backend, the React frontend, and the Python AI components (including virtual‑env/conda steps). The structure is clear and the formatting is generally good.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes.; Week of 2025-09-08: This week we introduced AI‑powered chat and invoice capabilities, a new financial‑summary view, and a FreelancerAnswer component, along with a loading overlay for authentication screens. We overhauled the real‑time chat system with optimistic UI updates, bidirectional‑messaging fixes, performance and error‑handling improvements, and resolved the CoinChat implementation bug. Minor UI tweaks, housekeeping (including .gitignore cleanup) and various bug fixes were also applied, delivering a more streamlined, responsive, and feature‑rich user experience.; Week of 2025-09-15: This week we added a runtime file and a new “notCurrentUser” filter to the GetAllUser function for displaying freelancers, removed the aiAdvisor feature, and introduced a README for better documentation. The UI across multiple pages and the chat component were refined for smoother visual flow and usability, and the JobDetailPage was refactored into separate components. Numerous minor updates and bug fixes—including authentication, file‑import issues, and other stability concerns—further improved overall stability and maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
DynastyChesses/game,https://github.com/DynastyChesses/game,3,0,1,4,"The README provides a solid project overview and clear, step‑by‑step instructions for setting up a local development environment and deploying to the ICP mainnet. The structure is well‑organized with headings, emojis, and code blocks, and the grammar and formatting are generally good. However, it lacks several important elements required for a higher rating: there is no integration guide detailing how other developers might incorporate the game’s APIs or canisters into their own projects, and there are no contribution guidelines (e.g., how to submit issues, pull requests, coding standards, or testing procedures). Because of these omissions, the documentation is functional but not comprehensive, placing it at a “Fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
webstriiix/encrypted_notes,https://github.com/webstriiix/encrypted_notes,3,2,1,6,"The README provides solid setup instructions for local development, including prerequisites, cloning, building, deploying, and testing both backend and frontend components. It also outlines the project’s structure, performance metrics, and security features, which give a reasonable overview of what the project does.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the backend was expanded with new AI service capabilities—content analysis, semantic search, abstract summarization, and a searchable index stored in stable structures—with corresponding Candid definitions, API endpoints, and storage types. The frontend gained a full AI‑enhanced search UI (AIEnhancedSearch, SearchIntegration, hooks, and services) integrated into the Notes page, and the project’s dependencies and Vite config were updated accordingly. Documentation, troubleshooting guides, and test scripts were added to describe and verify the new semantic‑search functionality.; Week of 2025-09-15: Implemented a new AI service layer that delivers intelligent content processing, personalized search, and user‑learning capabilities while staying compatible with the existing IC platform. Additional fixes were applied to enhance the AI feature’s performance. These changes broaden the platform’s functionality with AI‑driven personalization and improve overall stability.",dfx.json file found - indicates ICP/Dfinity project structure
khushi07707/smart-glasses,https://github.com/khushi07707/smart-glasses,2,0,0,2,"The README provides a thorough project description and outlines the core functionalities and vision of the Smart Glasses system, which is helpful for understanding the overall purpose. However, it lacks essential documentation elements required for developers and contributors:",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
amrshaker000/origin_trace,https://github.com/amrshaker000/origin_trace,3,0,1,4,"The README provides a solid project overview, feature list, technology stack, and clear local‑development setup steps (cloning, installing dependencies, building Tailwind, and running the dev server). It also lists available npm scripts and shows a helpful project‑structure diagram. However, the documentation is incomplete: the “Key Features Implemented” section is cut off, there are no integration or usage guides for consuming the platform’s APIs or smart contracts, and no contribution guidelines (e.g., how to submit pull requests, coding standards, testing procedures). Additionally, there is no information on environment configuration, deployment, or testing. Overall, the README covers the basics but lacks several important elements, placing it at a fair level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
khailesh-kumar-sa/skill-it-prototype,https://github.com/khailesh-kumar-sa/skill-it-prototype,2,0,0,2,"The README provides a high‑level problem statement, a description of the three core modules (Skill Swap, Career Test, Interview Trainer), and a detailed credibility system for skill‑swap participants. However, it lacks essential documentation components:",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
baolongt/dtrack-hackathon,https://github.com/baolongt/dtrack-hackathon,3,2,1,6,"The README provides a solid project overview, lists key features, outlines the architecture, and includes a brief “Local deploy” section with commands to build and run the frontend locally. This covers the basic setup instructions and gives readers a sense of what the project does and the technology stack used.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered a product‑tagging system, adding backend support, frontend UI adjustments, and a new search capability on the account dashboard. We also standardized terminology by renaming the “wallet” entity to “account” throughout the codebase and UI, while applying minor UI tweaks and bug‑fixes. Additionally, we streamlined the local development environment with configuration improvements, making setup smoother and more consistent.; Week of 2025-09-15: The transaction history hook was updated to display currency values with up to five fractional digits instead of two, enhancing the precision of financial data shown in the frontend.",dfx.json file found - indicates ICP/Dfinity project structure
NMsby/rotatechain,https://github.com/NMsby/rotatechain.git,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
AlexandriaDAO/daopad,https://github.com/AlexandriaDAO/daopad,1,3,1,5,"The provided excerpt is only a single fragment of text and does not constitute a README. It lacks any of the essential elements required for a proper evaluation—there is no project description, no setup instructions for local development, no integration guide, and no contribution guidelines. Because the documentation content is essentially nonexistent, it cannot be assessed for clarity, structure, grammar, or formatting. Consequently, it receives the lowest rating.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented revshare distribution for ALEX stakers and a per‑user LP‑locking model, completed a basic security audit, and refreshed the frontend to improve stability and UI experience. Separated the Daopad and Konglocker components for better modularity and added new Claude‑powered GitHub Actions workflows—including automated code‑review and PR‑assistant pipelines—enhancing CI/CD and AI‑driven development assistance. Together, these updates strengthen token economics, security, and user experience while streamlining the architecture and boosting productivity and code quality.; Week of 2025-09-08: This week we introduced a new deployment workflow that removes the kong‑locker dependency, added domain‑registration support, and delivered a V1 lock canister complete with a functional UI and basic API documentation. We also refined the user interface with general upgrades, specific kong‑locker tweaks, and a thorough frontend cleanup and refactor to improve maintainability and UI consistency. Together, these changes streamline deployment, expand core locking functionality, and enhance the overall user experience.; Week of 2025-09-15: Implemented a new frontend interface for DAO settings, user role management, and voting, migrated to the shadcn component library, and refactored the backend to introduce Orbit wallet references while cleaning up redundant documentation. Added support for creating Orbit wallets for locked tokens, enabling direct management and interaction with locked token assets. These changes enhance UI consistency, expand wallet capabilities, and streamline developer resources for more efficient token handling and governance workflows.",dfx.json file found - indicates ICP/Dfinity project structure
AIO-2030/alaya-network,https://github.com/AIO-2030/alaya-network,2,2,1,5,"The README provides a high‑level project description, a table of contents, and a detailed “What’s New” changelog, which are useful for understanding the project’s purpose and recent architectural changes. However, the essential sections that would make the documentation comprehensive are missing from the excerpt:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The device‑info manager was integrated into the backend, adding the `bincode` crate as a new dependency in the Cargo lock file. Submodule references for both the `aio-base-backend` and `alaya-chat-nexus-frontend` were updated to newer commits. These updates improve data serialization support and keep the front‑end and back‑end components synchronized.; Week of 2025-09-08: This week a comprehensive Device Initialization System was introduced, expanding the Bluetooth‑first IoT onboarding flow to six steps with activation‑code handling and Tencent Cloud verification, and updating the deviceInitManager and related services. The README was extensively revised to document the new architecture, flow, and UI components. The frontend subproject was also advanced to a newer commit, bringing in the corresponding implementation changes.; Week of 2025-09-15: Implemented full architectural independence between aio‑base‑frontend and alaya‑chat‑nexus‑frontend, adding dedicated AIO protocol runtime files (`AIOProtocolExecutor.ts`, `AIOProtocolTypes.ts`) and independent build scripts (`build-aio-base-frontend.sh`, `build-alaya-chat-nexus.sh`, `build-all-projects.sh`). Updated documentation (README and a new PROJECT_ARCHITECTURE_INDEPENDENCE.md) to reflect the new modular structure and added ALAYA network protocol integration details. The changes eliminate cross‑project dependencies, enabling each frontend to be compiled, deployed, and maintained separately, improving scalability and maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
dhaniverse/dhaniverse,https://github.com/dhaniverse/dhaniverse,3,3,1,7,"The README provides a solid high‑level overview of the project—its purpose, tech stack, key features, and a clear directory layout. It also includes useful quick‑link references to live demo, documentation, design, and architecture resources, and the licensing terms are clearly stated.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we introduced a comprehensive ban‑management system with UI components, AuthContext integration, and a MongoDB‑backed AdminPage dashboard, added real‑stock API integration with batch price fetching and a transaction‑hydration layer that provides detailed portfolio analytics, and expanded chat and profile features with API‑driven balance loading, persistent skin data, customizable avatars, colored usernames, and mandatory loaders.  

We also refined the UI throughout the app—fixing player depth ordering, label styling, Escape‑key handling, disabling intro animations on selected routes, adding a RevealOnScroll component, and upgrading the video player with a glowing effect—while addressing bugs in Azure workflow secrets, animation frames, and profile‑page logic.  

These updates strengthen moderation, enrich financial and social interactions, and deliver a more polished, reliable, and visually consistent user experience.; Week of 2025-09-08: This week we delivered a full deployment toolkit for frontend assets on the Internet Computer—including a safe script with cost estimation, cycle checks and detailed instructions—while adding a new minimap with advanced smoothing and precise player positioning, real‑time stock data streaming with subscriptions, and a complete Server‑Sent Events system for room/connection management and HTTP subscriptions.  

We also enhanced the Game HUD (online‑player tooltips, smoother chat animations and auto‑scroll), optimized the LocationTracker for faster visibility updates, refined interaction‑text handling in MayaNPCManager, improved onboarding flow, and relocated the DesktopWarning component to the GamePage.  

Performance and monitoring were boosted via Vercel Speed Insights integration, dependency updates, HTTP‑outcall refactoring and removal of extraneous logging, resulting in a more stable, responsive, and user‑friendly experience.; Week of 2025-09-15: This week we added a production‑ready MongoDB integration, generated TypeScript/DID interfaces, and a foundational HTTP client while refactoring the backend canister and price‑feed services to include robust error handling and full historical price‑history tracking with CBOR support. Authentication was overhauled with cookie‑based sessions, cross‑domain JWT support, and new sign‑in methods (Google, Magic Link, Internet Identity), alongside expanded CORS, .well‑known asset handling, and a suite of navigation/redirect utilities for the Next.js front‑end. Together these changes boost type safety, data reliability, security, performance, and analytics across the stack.",dfx.json file found - indicates ICP/Dfinity project structure
Oansa/Celestial,https://github.com/Oansa/Celestial,4,0,1,5,"The README provides a solid project overview, clear feature list, and a well‑structured layout. It includes comprehensive setup instructions for local development (prerequisites, DFX installation, dependency installation, starting the replica, deploying canisters, and running the frontend). Build and deployment steps for production are also covered, along with useful scripts and a brief canister configuration summary.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
sirrauf/KuSehat-Web3,https://github.com/sirrauf/KuSehat-Web3,2,2,0,4,"The README provides a general project description, a feature list, team information, and a list of required tools, which gives a basic overview of the project. It also includes a rudimentary “how to run the server locally” section, but the instructions are incomplete, inconsistently formatted, and lack essential details (e.g., exact commands for installing dependencies, configuring API keys, starting the web server, or setting up the Web3 components).","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: A new Luno API endpoint was added to the Flask backend (available at http://127.0.0.1:8000/api/luno) and the documentation was updated to reflect the new URL. The same archive file (API‑Flask‑KuSehat.rar) was added and then removed twice, indicating a cleanup of temporary artifacts. Overall, the week introduced the Luno API feature and kept the repo tidy.; Week of 2025-09-08: Implemented full KuSehat API back‑ends for both Flask and Motoko, added comprehensive usage documentation, and introduced a file‑upload feature for direct user file submissions. Throughout the week we also performed extensive cleanup—removing obsolete archive files, outdated documentation, and an unused directory—while applying numerous minor updates and fixes. These changes deliver new, functional API endpoints, improve developer experience, and streamline the codebase for easier maintenance.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
crtzn/know_fi,https://github.com/crtzn/know_fi,3,2,1,6,"The README provides a solid general project description, outlining the vision, key features, and an architecture overview with backend canisters and frontend stack. However, it lacks essential practical information: there are no setup instructions for getting the project running locally (e.g., cloning the repo, installing dependencies, building Motoko canisters, or starting the Next.js dev server), no integration guide for using the platform’s APIs or SDKs, and no contribution guidelines (how to submit issues, pull requests, coding standards, etc.). The formatting is uneven, with broken sentences and some grammatical issues, which further reduces clarity. Overall, the documentation covers the “what” but omits the “how,” placing it at a fair (3) level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a responsive redesign of the login page by adding Tailwind CSS breakpoints, adjusting padding, margins, container widths, and image sizes for various screen sizes. Updated the markup to use flexible layout classes, refined the thought‑bubble graphics, and improved overall visual hierarchy. This enhances the user experience on mobile, tablet, and desktop without introducing new files.; Week of 2025-09-15: Added a new “KnowCreates” interface to the frontend, introducing a dedicated dashboard page ( creates/page.tsx ) and a full set of step‑by‑step components (createStep1‑4, creatorsPage, knowCreates, knowCreatesContribute) for handling contribution workflows. Supporting assets, such as a background image, were also added. This expands the existing dashboard with a complete UI for creating and contributing content.",dfx.json file found - indicates ICP/Dfinity project structure
rodweleo/neuroverse-studio,https://github.com/rodweleo/neuroverse-studio,3,3,1,7,"The README provides a solid high‑level description of the project—overview, background, and feature list are clear and well‑written, and the Table of Contents gives a sense of the intended structure. However, the critical sections for developers are missing: there are no concrete setup or installation instructions for local development, no usage or integration guide, and the “Contributing”, “License”, and “Contact” sections are only listed in the TOC without any content. Consequently, while the documentation is readable and grammatically sound, it lacks the essential practical details needed to get the project up and running or to contribute to it. This places it at a “fair” level—basic information is present, but important elements are absent.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a token‑transfer modal (with new `TokenTransferStatus` type and ledger canister configs for ICP and ckETH) and integrated it into the Dashboard UI. Added backend delete endpoints for agents and tools, introduced corresponding frontend hooks, UI components, and a loading‑fallback component to improve agent management. Refactored imports, renamed the conversation service file, updated query keys and UI styling across multiple components, enhancing consistency and user experience.; Week of 2025-09-08: This week we added a complete document‑management feature, introducing Motoko types for files and vet‑keys and corresponding frontend services for uploading, downloading, and access control. The UI was refreshed with a new layout/footer, improved index page design, separate login/signup buttons, and an enhanced token‑transfer flow that uses a new IcrcLedgerCanister utility and mutation hook. Additional updates include adding the ic‑vetkeys dependency, enabling canister optimization, and various related UI and configuration tweaks.; Week of 2025-09-15: This week the team added a form‑reset to the AgentCreationForm, introduced an account‑to‑account token‑transfer hook, refined the payment modal’s error handling and tool selection, optimized token‑formatting utilities, refactored the agent module, and updated HTML meta tags for better SEO. A new Aurora component was created to deliver customizable dynamic background effects, which was integrated into the CallToAction section and the index page along with new gradient utility classes. Together these changes streamline agent creation and payment flows, improve token handling reliability, and enhance the site’s visual styling and discoverability.",dfx.json file found - indicates ICP/Dfinity project structure
syahiidkamil/living-internet-protocol,https://github.com/syahiidkamil/living-internet-protocol,4,1,1,6,"The README provides a solid overview of the project, clearly describing its purpose, key features, and technology stack. It includes comprehensive local development setup instructions (prerequisites, cloning, dependency installation, local replica start, canister deployment, and frontend server launch) and details on testing and deployment for both local and mainnet environments. A “How It Works” section explains the verification flow, NFT minting, and forum usage, giving readers a functional understanding of the system. Contribution guidelines are referenced via a link to a CONTRIBUTING.md file.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented three new front‑end pages—SocialMediaDemo, MerchantDashboard, and a standalone CaptchaWidget—by adding their source files and extending the app’s view routing to include “demo” and “dashboard” options. App.tsx was updated to import these components, default to the demo view, and detect a `widget=true` query parameter to render only the CaptchaWidget, with new navigation buttons styled for the added pages. These changes expand the demo capabilities and provide a dedicated merchant dashboard while preserving existing playground, forum, and marketplace functionality.",dfx.json file found - indicates ICP/Dfinity project structure
dariuszdawidowski/jrpg-stellar-engine,https://github.com/dariuszdawidowski/jrpg-stellar-engine,3,1,0,4,"The README provides a clear project title, a concise “About” section, and basic usage pointers such as a quick‑start (open the demo HTML), the supported map format, and a CDN link for integration. However, it lacks detailed setup instructions for local development (e.g., how to install dependencies, run the build, or start a development server). There are no contribution guidelines, issue‑reporting instructions, or a code‑of‑conduct, and the “Release” section only mentions version bumping without explaining the full release workflow. Overall the documentation is functional but missing several key elements that would make it comprehensive, placing it at a “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The canvas sizing logic in src/view.js was updated to use document.body.clientWidth and document.body.clientHeight instead of the full window dimensions, ensuring the game canvas fits within the page layout. This adjustment preserves centering and pixel‑perfect scaling while no other files were added, removed, or renamed.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Ma7moud12975/ATOS-fit,https://github.com/Ma7moud12975/ATOS-fit/tree/main,2,2,1,5,"The README provides a good high‑level overview of the project (purpose, features, privacy stance, and a partial technical stack) and includes a nice table of contents with sections such as “Getting Started” and “Contributing.” However, the actual content for those sections is missing from the excerpt – there are no concrete setup instructions (prerequisites, installation steps, local development commands), no integration guide, and the “Contributing” section is not fleshed out. The technical‑stack list is cut off mid‑sentence, indicating incomplete documentation. While the description and feature list are clear and well‑formatted, the lack of essential practical information makes the documentation insufficient for a new developer to get the project running or to contribute. Consequently, it falls into the “Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a file‑upload feature, adding UI support in index.jsx and updating the README with usage instructions. Minor updates and bug fixes were also applied, polishing existing functionality. These changes enhance user interaction, documentation clarity, and overall stability.; Week of 2025-09-15: This week we delivered several minor updates and bug fixes, refining existing functionality and enhancing overall stability and performance.",dfx.json file found - indicates ICP/Dfinity project structure
nikhlu07/H.E.L.I.X.,https://github.com/nikhlu07/H.E.L.I.X.,2,2,1,5,"The README provides a vivid project description, mission statement, and some contextual background, which helps readers understand the purpose of H.E.L.I.X. However, it lacks essential practical documentation. There are no setup instructions for local development (e.g., cloning the repo, installing dependencies, configuring environment variables, or running the React/FastAPI services). No integration guide is present to explain how the front‑end, back‑end, and Internet Computer components connect, nor are there API specifications or usage examples. Contribution guidelines (code style, branching model, pull‑request process, issue filing, etc.) are missing entirely. While the formatting is visually appealing and the headings are clear, the missing core sections constitute significant gaps, resulting in a “Poor” rating. If the missing sections were added, the score could rise substantially.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes; Week of 2025-09-15: This week the repository was cleaned up by deleting duplicate and unnecessary documentation, installation scripts, deployment scripts, and redundant environment/requirements files, streamlining the project structure. No new features were added; the focus was on reducing clutter and improving maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
Web3-Iligan/LikAI,https://github.com/Web3-Iligan/LikAI,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
AfriTokeni/afritokeni-mvp,https://github.com/AfriTokeni/afritokeni-mvp,3,3,0,6,"The README provides a solid high‑level overview of the project, its purpose, key features, and a glimpse of the technical architecture. It is well‑structured, uses clear headings, emojis, and includes links to a demo video and live application, which aids readability. However, it lacks critical sections needed for developers and contributors: there are no setup or installation instructions for running the project locally, no guide on how to integrate the platform with other services, and no contribution guidelines (e.g., how to submit issues or pull requests, code style conventions, testing procedures). Without these, newcomers cannot easily get the project up and running or understand how to contribute. Grammar and formatting are generally good, but the documentation is incomplete, so it falls into the “basic documentation present but missing some important elements” category.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Added email‑subscription handling stored in the Juno datastore with Juno authentication integrated into user profiles, refreshed UI elements (CTA styling, clickable logo) and removed unused verification code. Enhanced the getNearbyAgents API and agent‑list UI with location‑based filtering, consolidated type definitions and utilities, introduced a currency selector and BalanceService‑driven balance display, and built a full deposit workflow with agent selection. Delivered extensive Bitcoin support—including deposit/exchange pages, user‑ and agent‑facing wallet UI, SMS commands, dynamic location‑based fee calculations, and a neutral monochrome redesign—significantly expanding financial capabilities, improving maintainability, and unifying the user experience.; Week of 2025-09-08: This week we delivered a full agent liquidity management suite—multi‑channel funding (bank transfer, mobile money, cash), settlement, smart liquidity indicators, a revamped dashboard showing cash, digital and Bitcoin balances, and automated transaction processing with reference tracking—while expanding profile management with a new settings UI, dark‑theme styling, email support and comprehensive editing pages (currency and location preferences). We also added a newsletter subscription system with Resend integration, introduced Bitcoin deposit integration and corrected default currency references from NGN to UGX across Bitcoin deposit and exchange pages, and updated configuration/localization (default/preferred currency, satellite IDs) plus a missing role‑based authentication check. Together, these changes close a critical funding gap, enable end‑to‑end commission flows, improve regional accuracy and security, and boost overall user engagement and experience.; Week of 2025-09-15: This week the team launched a comprehensive agent‑discovery UI—including an interactive map with list/map toggle, custom animated markers, searchable and filterable results, and detailed popups—and overhauled the deposit workflow with modular step components (AmountStep, AgentSelectionStep, ProgressIndicator, ConfirmationStep), a new DataService layer, full DepositRequest API, and agent‑liquidity‑management features. Authentication was strengthened with status tracking, localStorage sync, and realistic user profiles, while custom map popups, an AgentDepositProcessor, and a robust notification service (email/SMS endpoints and welcome‑email triggers) were added. Additionally, numerous configuration, type‑safety, and deployment fixes (Dockerfile, Railway.toml, Juno settings, faker integration, and environment‑variable corrections) were applied, making the fintech platform more reliable, maintainable, and production‑ready.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Buildathonzx/whisperrnote,https://github.com/Buildathonzx/whisperrnote,3,2,0,5,"The README provides a solid high‑level project description, outlines AI and blockchain features, and even includes integration links to the ICP canisters and repository. However, it lacks essential practical information: there are no setup or installation instructions for getting the project running locally, no step‑by‑step guide for developers, and no contribution guidelines or code‑of‑conduct. While the overall structure and formatting are clear and the language is mostly polished, the missing setup and contribution sections are significant gaps, keeping the documentation at a “fair” level rather than “good” or “excellent.”","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Implemented a user‑scoped public‑notes API, a robust passkey registration flow with Appwrite integration, a global ContextMenu system, and an enhanced client‑side global search powered by Fuse.js and a shared NotesContext, while also stabilizing note‑sharing functionality. Existing components such as AI handlers, AttachmentViewer, TagManager, fetchAndSyncNotes, and TopBarSearch were memoized and refactored, TypeScript strictness was increased across tags, settings, authentication and NoteCard, the middleware redirect loop was fixed, and the build process was streamlined by upgrading to Next.js 15.4.7, relaxing ESLint checks during builds, and adding CI helper scripts. Together these updates boost data privacy, performance, type safety, and overall stability while simplifying the codebase for future scaling.; Week of 2025-09-15: This week we added a suite of new modular backend components—including collaborators, hashed API‑key handling, subscription plans with limit enforcement, a full revision system for notes, and an enhanced, versioned AI generation flow with provider‑aware logging and health‑aware context—while overhauling the tag infrastructure and expanding audit‑note‑tag pivots. On the front end we refined the sharing UI, introduced paginated note loading with optimistic updates, built a complete account‑deletion workflow, improved passkey authentication, and rolled out a global keyboard‑shortcut system, together with idempotency guards, index optimizations and type‑safety fixes. Collectively, these updates boost modularity, security, data integrity, performance, and overall user usability across the platform.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
nidioganteng/MedicalChainID,https://github.com/nidioganteng/MedicalChainID,3,0,1,4,"The README provides a solid general description of the project, its value proposition, and high‑level technical architecture (frontend stack, backend language, key components). However, it lacks essential practical information: there are no step‑by‑step setup instructions for local development (e.g., installing dfx, building the canisters, running the React app), no integration guide for connecting to existing EHR/EMR systems, and no contribution guidelines (how to submit issues, pull requests, code style, testing, etc.). The document is reasonably clear and well‑structured, but the missing actionable sections prevent it from being a fully usable guide for developers or contributors. Consequently, it falls into the “basic documentation present but missing important elements” category.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
poggufanz/dao-tools,https://github.com/poggufanz/dao-tools,4,0,1,5,"The README provides a solid project overview, clear feature list, and comprehensive local development instructions—including prerequisites, setup scripts, manual build commands, project structure, and troubleshooting. The formatting and grammar are generally good, making it easy to follow. However, it lacks explicit contribution guidelines (e.g., how to submit pull requests, code style, testing procedures) and does not include an integration guide for using the DAO tools in other projects or environments. Adding these sections would elevate the documentation to an “Excellent” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
HACKTHEMM/SaleSpeak,https://github.com/HACKTHEMM/SaleSpeak,4,0,0,4,"The README provides a solid project overview, clear prerequisites, and thorough setup instructions for both the backend and frontend, including virtual‑environment creation, environment‑variable configuration, and build steps. It also documents how to run the application in various modes, describes the API endpoints with example requests/responses, and explains the batch inference utility. The structure is logical, headings are well‑used, and formatting is clean, making it easy to follow.",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
stanlys96/Engramind-ICP,https://github.com/stanlys96/Engramind-ICP,2,0,1,3,"The README provides a clear high‑level description of what Engramind is, its purpose, and some conceptual background (data aggregation, AI modeling, persona generation, interaction interface). It also includes useful media links (demo site, screenshots, video, pitch deck) which help a reader understand the project’s vision.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
