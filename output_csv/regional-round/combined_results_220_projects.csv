project_name,github_link,readme_documentation_score,commit_activity_score,dfx_json_score,total_score,readme_documentation_comments,commit_activity_comments,dfx_json_comments
Buildathonzx/whisperrnote,https://github.com/Buildathonzx/whisperrnote,2,2,0,4,"The README provides a visually appealing overview and a solid high‑level description of the project’s purpose, AI features, and blockchain integration. However, it lacks essential practical information. There are no step‑by‑step setup instructions for local development (e.g., cloning the repo, installing dependencies, building, running the canisters, or configuring Internet Identity). Integration guidance is limited to a few external links and a brief mention of canister URLs, without clear instructions on how a developer would incorporate the service into their own app. There is no contribution guide, code of conduct, or information on how to submit issues or pull requests. While the formatting and grammar are generally good, the missing core documentation elements (setup, contribution, detailed usage) keep the overall quality at a poor level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we added a user‑scoped listPublicNotesByUser API, a robust passkey registration flow with Appwrite integration, a global NotesContext and ContextMenuProvider for unified fuzzy search and note‑card menus, and upgraded the app to Next.js 15.4.7. We also tightened shared‑note handling, fixed middleware rewrites, memoized AI, prompt and Fuse.js handlers, corrected type‑safety and permission utilities, and applied security hardening and build‑pipeline adjustments. Together these changes improve security, performance, and reliability while delivering a smoother, more consistent UI experience.; Week of 2025-09-15: This week we added modular components (collaborators, hashed API‑keys, core client with usage‑metrics and plan‑limit enforcement), full revision tracking for notes, a comprehensive tag‑system overhaul, and a versioned AI generation endpoint with provider health monitoring and hashed‑key security. We also refreshed the sharing UI with debounced searches, optimistic updates, and permission management, introduced incremental note loading with cursor‑based pagination, built a global keyboard‑shortcuts system, and created an account‑deletion “danger zone” plus passkey flow refinements. Collectively, these changes boost modularity, data integrity, security, observability, and overall user experience across notes, tags, AI, and collaboration features.; Week of 2025-09-22: Added documentation of the newly created encrypted_notes and internet‑identity canisters (including their IDs) to the README, and extended the sample environment file with corresponding URL variables for these canisters, enabling proper configuration and integration. This improves setup clarity and readiness for blockchain‑backed features. Minor updates and fixes.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
YieldexAI/yieldex-ic-wallet-manager,https://github.com/YieldexAI/yieldex-ic-wallet-manager,2,2,1,5,"The excerpt provides detailed, well‑formatted command examples for interacting with the canister’s API (wallet generation, balance queries, AAVE/Compound integration, and token rebalancing). The usage sections are clear, include emojis, code blocks, and even sample output, which is helpful for end‑users.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week the frontend was overhauled: React Router routing and new Overview, Strategy, and Dashboard pages with shared layout and navigation were added, and wallet integration was enhanced with connection prompts, external modal control, and improved state handling. The custom strategy builder and strategy cards were simplified by removing allocation logic and UI, and the mock strategy data was updated to reflect single‑protocol strategies. Additional work introduced a Playwright testing pipeline, UI refinements (modal portal, grid stretch) and .gitignore updates for Claude and Playwright files.; Week of 2025-09-22: Added Compound V3 as a new lending protocol and updated the OG Duo strategy to combine AAVE V3 and Compound V3, extending mock protocol/strategy data and persisting strategies in the store. Overhauled activity tracking with a new ActivityTimeline component, AI‑driven rebalance transaction types, expanded transaction type definitions, and added store methods for aggregating activity, generating default activity, and handling AI decisions. Refined the UI with risk‑based icons/color in ActivePositions, new QuickActionButtons and Badge components, a tabbed PositionManagementModal, and improved toast handling, all integrated with the updated stores.",dfx.json file found - indicates ICP/Dfinity project structure
alfa-codes/alfa-apy-icp-canisters,https://github.com/alfa-codes/alfa-apy-icp-canisters,1,2,1,4,"The provided README excerpt contains only a handful of external links (repository URLs, website, and community resources) and lacks any substantive content. There is no general project description, no setup or installation instructions for local development, no integration or usage guide, and no contribution guidelines. The structure is minimal, and there is insufficient information to assess the project or to help a new developer get started. Consequently, the documentation quality is very poor.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we added a new `get_pools_history` endpoint for pool statistics, introduced project branding assets (logo) and a LICENSE file, and merged recent updates into the main branch. We also enhanced deployment configuration by adding controller settings for canisters, updating the production environment URL, and fixing chart snapshot generation bugs. Together, these changes expand API functionality, improve deployment reliability, and polish the project's visual and legal presentation.; Week of 2025-09-08: Implemented ICRC‑21 support in the vault canister by adding the necessary ledger‑type imports, registering ICRC‑21 in the supported standards list, and introducing a new query (`icrc21_canister_call_consent_message`) to handle consent‑message requests. This enhances the vault’s compliance with the ICRC‑21 authentication standard, enabling it to provide consent information for canister calls. No new files were added; only `src/vault/src/lib.rs` was modified.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/Soulboard,https://github.com/Soulboard,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
ReyJrFerrer/SRV-WCHL,https://github.com/ReyJrFerrer/SRV-WCHL,2,3,1,6,"The README provides a high‑level overview of the platform’s features and a detailed architecture diagram, which is helpful for understanding the system’s components. However, it lacks several critical sections required for a comprehensive README:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: We introduced a manual location input mode and refactored the service‑location inputs, enabling users to select province and city with dynamically populated barangay dropdowns. The booking component’s location label was clarified, a page‑reload bug was fixed, and minor configuration and package.json clean‑ups were applied. These changes streamline the location‑selection workflow, improve UI guidance, and enhance overall stability.; Week of 2025-09-08: This week we delivered a new frontend wallet UI with accompanying wallet and commission canister services, integrated them into the booking workflow, added a payment.prompt feature, and removed legacy remittance logic from both backend and frontend. We also set up Firebase configuration, Docker containers for streamlined local development, introduced a new account‑creation and greeting flow (IPR‑65), and fixed a bug in the Add component. A broad refactor cleaned out unused code and comments and the changelog was updated, enhancing overall maintainability and clarity.; Week of 2025-09-15: Implemented OTP verification, a new notification canister, multiple‑package support, payment‑holding/release with dynamic commission, unique package‑name validation, wallet‑canister top‑up, mock GCash and Firestore emulator for testing, and expanded direct‑payment limits to 2.5 units with automatic +63 phone‑code prepending. Existing flows were refined—including notification UI, cancel‑confirmation buttons, provider‑booking cards, wallet UI commission notices, transaction‑log and balance fixes—and cross‑platform (Linux) compatibility and code‑style formatting were applied. Together these updates enhance core user experiences, financial reliability, and overall system stability while providing a more robust development and testing environment.; Week of 2025-09-22: This week we refined the UI by running Prettier across the codebase, improving overall formatting consistency. We also resolved several minor bugs affecting notifications, alerts, and the service‑details page, resulting in smoother interactions and more reliable data display. No new features were added, but the stability and visual polish of existing components were noticeably enhanced.",dfx.json file found - indicates ICP/Dfinity project structure
pixeliy/pixeliy,https://github.com/pixeliy/pixeliy,4,2,1,7,"The README provides a solid project overview, clearly listing key features, architectural components, and a roadmap. It includes thorough local development setup instructions—prerequisites, cloning, dependency installation, canister deployment, and how to run the app—making it easy for a new developer to get started. The structure is well‑organized with headings, bullet points, and code blocks, and the grammar/formatting are clean.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Updated the authentication flow to use the new Internet Identity provider (`https://id.ai`) instead of the previous `https://identity.ic0.app`, modifying the URLs in both `AuthContext.tsx` and `useAuth.ts`. This change improves the app’s login integration without adding or removing any files. Overall, it’s a targeted enhancement to the existing auth feature.; Week of 2025-09-15: Implemented a new ICRC‑1 token infrastructure by adding ledger and index canisters, registering them in dfx.json, and recording their IDs in canister_ids.json. Added the required candid interfaces, compiled wasm artifacts, and a token icon asset under src/token and the frontend assets. This introduces native token support and the associated front‑end resources to the project.",dfx.json file found - indicates ICP/Dfinity project structure
k0t11k/TESTFINALRVRA,https://github.com/k0t11k/TESTFINALRVRA,2,1,1,4,The README provides a fragmented overview of the project but lacks the depth and completeness expected for good documentation.,"1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week we introduced an ICP Ninja export capability and refreshed the README and BUILD documentation to reflect the new feature. Minor updates and bug fixes were also applied across the codebase. Together, these changes expand functionality, improve developer guidance, and maintain overall project health.",dfx.json file found - indicates ICP/Dfinity project structure
Wow11One/happy-wheels,https://github.com/Wow11One/happy-wheels,2,1,1,4,"The provided excerpt contains a brief overview of the project's value propositions and a single link to the deployed application, which offers a minimal project description. However, it lacks essential documentation components:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Implemented an AI‑based authentication migration by updating the DFINITY auth client version, switching the identity provider URL to `https://id.ai`, and adding a new `TransferApprove.tsx` component (95 lines) for handling transfer approvals. Integrated Google’s generative‑AI SDK (`@google/generative-ai`) into the frontend dependencies. These changes enhance the app’s authentication flow and lay groundwork for AI‑powered features.",dfx.json file found - indicates ICP/Dfinity project structure
DynastyChesses/game,https://github.com/DynastyChesses/game,3,1,1,5,"The README provides a solid project overview and clear local‑development setup instructions, including prerequisites, cloning, dependency installation, and deployment steps for both a local ICP replica and the mainnet. It also outlines the project structure, technology stack, and a roadmap, and the formatting is clean and readable.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week a comprehensive Runtime module for the Unity Render Pipeline was introduced, adding camera management, debugging UI, render‑graph infrastructure, texture handling, utilities, and a full volume system. Numerous new C# source files, asmdef definitions, and prefabs were added, while the existing Behaviour scripts remain unchanged. The addition provides the foundation for advanced rendering features and in‑engine debugging capabilities.",dfx.json file found - indicates ICP/Dfinity project structure
LotusWallet/LOTS,https://github.com/LotusWallet/LOTS,3,1,1,5,"The README provides a solid overview of the project’s purpose, features, API, security model, and a clear project structure. It includes a brief contribution guide (fork, branch, PR) and lists roadmap items, licensing, and support channels. However, it lacks explicit setup instructions for local development (e.g., prerequisites, how to install dependencies, build commands, and how to run the backend/frontend). There is no integration guide for consumers of the library or API usage beyond the method table. While the sections are well‑structured and the formatting is readable, the missing setup and integration details prevent it from reaching a higher rating. Overall, the documentation is functional but incomplete, meriting a “Fair” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Implemented a standalone password generator (PasswordGenerator and PasswordGeneratorModal) integrated into the dashboard and entry dialogs, and added new field types (url, email, date) across the backend actor and frontend forms. Added English language support and i18n infrastructure (SPEC_EN.md, i18n provider, translations) along with UI refinements such as new icons, Tailwind configuration, and a redesigned login button. These changes expand functionality, improve usability, and unify the interface language.",dfx.json file found - indicates ICP/Dfinity project structure
Satsurance/canisters,https://github.com/Satsurance/canisters/tree/feature/staking-layout,3,2,1,6,"The README provides a clear project description and fairly detailed setup instructions for local development, including Rust, DFX, wasm target installation, repository cloning, required Pocket‑IC binary setup, building, and testing. However, it lacks integration guidance (e.g., how to use the canister, API endpoints, or example interactions) and does not include any contribution guidelines such as code style, pull‑request process, or issue reporting. While the structure and formatting are good and the grammar is acceptable, the missing integration and contribution sections keep the documentation at a “fair” level rather than “good” or “excellent.”","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we delivered several minor updates and fixes while also adding comprehensive tests for the reward functionality, boosting its test coverage and reliability. The new tests ensure the reward feature works as intended and help prevent future regressions. Overall, these improvements enhance system stability and confidence in the reward module.; Week of 2025-09-08: This week we merged the Sat‑UI component into the main repository, streamlined deposit and reward transfers into a single transaction, and fixed bugs in the deposit/withdraw flow and reward‑rate‑per‑share calculation. We introduced a TestClient helper, moved shared utilities into a common module, and refactored the test suite (including restoring an episode test and enhancing reward‑distribution tests). The changes consolidate the UI codebase, reduce fees, and markedly improve test reliability, maintainability, and overall code quality.; Week of 2025-09-15: This week we introduced a new ICP plugin and the Sat‑UI component, updated core files (index.js, web3store.js) to integrate the plugin, and renamed the frontend and backend canisters for clearer organization while removing an obsolete deployment file. We also cleaned up the navigation bar (dropping “Learn More” and “Insurance” tabs), reverted the staking and faucet implementation to simplify the feature set, and performed general code clean‑up. Together these changes add fresh UI functionality, streamline the canister structure, and reduce complexity across the application.",dfx.json file found - indicates ICP/Dfinity project structure
sardariuss/dsonance,https://github.com/sardariuss/dsonance,1,2,1,4,"The provided text is not a README at all—it consists of a single informal question about a specific edge case. It contains none of the essential elements of good documentation: there is no project description, no setup or installation instructions for local development, no integration or usage guide, and no contribution guidelines. The text also lacks any clear structure, headings, formatting, or even basic grammatical polish expected in a README. Consequently, it offers virtually no value to a developer or contributor trying to understand or work with the project.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The documentation was updated: a new illustration (image (8).png) was added and the tokenomics markdown was revised to show a reduced total supply (10 million DSN) with corrected allocation percentages for core builder seed, governance bootstrap, community treasury, vesting pool, and user mining rewards. These edits improve the accuracy of the project’s economic model presentation. No code or functional features were changed.; Week of 2025-09-08: Implemented extensive lending module refinements, including corrected fee calculations, new verifications in lending pool tests, and a revised borrow‑interest computation. Cleaned up obsolete components (shares, obs, clock) and shifted TVL updates to the VoteController, while improving UtilizationUpdater and participation‑mining sync logic. These changes enhance fee accuracy, streamline controller responsibilities, and boost overall protocol reliability.; Week of 2025-09-15: The borrow page received a minor UI overhaul and terminology updates (renaming “ballot” to “foresight” and “vote” to “market”). NFID authentication was integrated and a new wallet drawer component was added, alongside hook improvements (useCallback, ordering fixes) and a refresh fix for the vote list. Overall, these changes enhance user navigation, authentication flow, and UI consistency.; Week of 2025-09-22: This week the UI was updated to use the new “foresight” terminology and to display mined DSN balances, adding a withdraw button on the profile that calls the protocol’s withdraw_mined method and refreshes both the participation tracker and the user’s balance. Number formatting was refined by introducing a significant‑digits formatter in the fungible‑ledger hook and switching dashboard tables from compact to full‑format values. Together, these changes improve balance visibility, user feedback, and interaction with the participation tracker.",dfx.json file found - indicates ICP/Dfinity project structure
temokoki/IC_Crypto_Miners_Hunt,https://github.com/temokoki/IC_Crypto_Miners_Hunt,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
dariuszdawidowski/jrpg-stellar-engine,https://github.com/dariuszdawidowski/jrpg-stellar-engine,0,1,0,1,No documentation assessment provided.,"1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The canvas‑sizing logic in src/view.js was updated to use document.body.clientWidth/Height instead of the full window dimensions, so the game canvas now fits the page body rather than the entire window. This modification refines the fitCanvas() method, improving layout responsiveness without adding or removing any files. No other changes were made this week.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Eshajha19/Edu-Navia,https://github.com/Eshajha19/Edu-Navia,2,0,1,3,"The README provides a good high‑level overview of the project (purpose, problem statement, feature list, tech stack) and is reasonably well‑formatted. However, it lacks essential developer‑focused documentation: there are no setup or installation instructions for running the project locally, no guide on how to configure Firebase, Gemini API, or Google Calendar integrations, and no information on how to build/run tests or start the development server. Additionally, there are no contribution guidelines, code of conduct, or instructions for adding new features. Because of these significant gaps, the documentation is limited and would not enable a new contributor or developer to get the project up and running without external guidance. Hence it rates as a 2 (Poor).",0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
muslimalfatih/collective-impact,https://github.com/muslimalfatih/collective-impact,3,2,1,6,"The README provides a solid project overview, including a clear description, problem/solution narrative, tech stack, and links to the live application and whitepaper. It also lists prerequisites for local development, which is helpful. However, the setup instructions are incomplete (the “Local Development” section is truncated after “Install Dependencies”), and there are no detailed step‑by‑step commands for building, deploying, or testing the canisters. Additionally, the document lacks an integration guide (e.g., how other projects could interact with the DAO or token contracts) and does not contain contribution guidelines such as coding standards, pull‑request process, or issue reporting. While the formatting and grammar are good, the missing sections prevent it from being a comprehensive developer guide, resulting in a fair (3) rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The README was extensively rewritten to showcase the project’s first‑place hackathon win, add branding badges, detailed whitepaper, problem/solution overview, and tech‑stack information. No source code files were added, removed, or altered, so the functional features of the application remain unchanged. This update primarily improves documentation and project presentation.; Week of 2025-09-15: Implemented a full backend canister for campaign management, introducing persistent actor logic, data models (campaigns, donations, creators) and related functionality in src/backend/main.mo. Added deployment configuration for the Internet Computer (IC) network in dfx.json, a new canister_ids.json file, and updated the README with live URLs, deployment steps, and frontend install commands. These changes provide a functional backend service and documentation for deploying the application to the IC mainnet.",dfx.json file found - indicates ICP/Dfinity project structure
Infoundr/infoundr-site,https://github.com/Infoundr/infoundr-site,3,2,1,6,"The README provides a solid project overview and clear setup instructions for local development, including prerequisites, cloning, starting the Internet Computer replica, and running the development server. It also outlines several development scripts for mock data, playground, and mainnet deployments, which is helpful for developers.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the pricing UI was overhauled with a styled “Start Free” button and a “Coming Soon” overlay for the Pro tier, plus new documentation for Slack integration to streamline onboarding. Minor updates and bug fixes were also applied across the codebase. Together, these changes improve visual clarity, guide users toward the new pricing options, and enhance overall product stability.; Week of 2025-09-15: This week we introduced a stable user‑ID system and a dedicated Playground environment—including frontend admin integration, markdown support, chat components, and updated “Get Started” buttons—while adding backend handling for PlaygroundID and an admin statistics endpoint. We also refined deployment reliability by configuring production environment variables in the GitHub Actions workflow, stripping API‑key logs, and adding console‑log debugging, alongside numerous minor updates and fixes. Together, these changes enhance user identification, playground usability, monitoring, security, and overall system polish.; Week of 2025-09-22: Added documentation for a new “playground chat” demo, replacing the placeholder Slack section in the README and providing a link to a demo video. No code files were added, modified, or removed; the change solely updates usage instructions. This improves onboarding by showing how to test Infoundr without installing it in a workspace.",dfx.json file found - indicates ICP/Dfinity project structure
FLUX-APP-LAB/flux,https://github.com/FLUX-APP-LAB/flux,3,2,1,6,"The README provides a solid project overview, clear screenshots, and decent setup instructions for local development (prerequisites, `npm install`, starting the replica, deploying canisters, and running the frontend). It also outlines the development workflow, features, and a brief wallet‑integration list. However, several key elements are missing or incomplete:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes.; Week of 2025-09-15: We delivered a full live‑streaming experience, adding a LiveStreamPage with a WebRTC‑based player, a responsive MainLayout, a StreamManagementDashboard, a StreamViewer with chat, and supporting backend UserService and CommentService integrations, profile CRUD, follow‑relationship queries, and optimistic like handling. The authentication flow and routing were refactored with loading screens, protected routes, and environment‑aware wallet configuration, while state management was improved via a selectedUser slice and enhanced TypeScript typings. These updates modernize the UI, introduce real‑time streaming capabilities, and boost reliability, type safety, and overall user experience.",dfx.json file found - indicates ICP/Dfinity project structure
cryptobenkei/icphub,https://github.com/cryptobenkei/icphub,4,1,1,6,"The README provides a solid overview of the project, including a concise tagline, roadmap, competitive advantages, and success metrics. It offers comprehensive local development setup instructions—prerequisites, cloning, installing both frontend and backend, detailed commands for running, deploying, and managing the canisters, as well as an initial admin setup step. The project structure is clearly outlined, and a link to contribution guidelines is included, indicating an openness to external contributions.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week we delivered a complete ICP payment verification system for name registration—including backend canister structures, ledger block queries, replay‑attack protection, CLI balance checks, UI payment status/history, dynamic ID labeling, and a simulated identity flow—while also streamlining the developer experience with generated canister declaration files in version control and a pre‑build script that auto‑generates them. We added a whitelist‑based admin registration, auto‑populated address fields from the connected ICP Identity, a redesigned “My Names” page, numerous UI refinements (direct‑to‑settings button, alternating home‑page backgrounds, disabled‑state tabs, tighter padding, updated season info and ICP price formatting), tighter TypeScript type safety, and removed the payment requirement from the registration form, plus cleaned up obsolete files. Combined with the initial backend/frontend scaffolding and Claude AI integration, these changes secure the registration flow, improve usability, and accelerate development and deployment.",dfx.json file found - indicates ICP/Dfinity project structure
ZeyaRabani/BIT10,https://github.com/ZeyaRabani/BIT10,3,2,1,6,"The README provides a handful of useful elements—namely a list of deployed canisters and Solana program addresses, plus a brief “Getting Started” section that walks a developer through navigating to the `web_app` folder, installing npm dependencies, and launching the app locally. However, it lacks a clear, high‑level project description that explains what BIT10 does, its architecture, or its primary use‑cases. There is no integration guide for developers who might want to consume the canisters or Solana programs, nor are there contribution guidelines, coding standards, or a roadmap. The formatting is also a bit inconsistent (e.g., a truncated URL at the end of the “Access” step). While the basic setup steps are present, the documentation is missing several key elements that would make it fully usable for new contributors or integrators, placing it in the “Fair” range.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The home page UI was refreshed, the server was enhanced with new rebalance logic, and a testnet canister was added to enable purchasing BIT10. These updates improve the user experience, strengthen backend stability, and introduce a new purchasing capability.; Week of 2025-09-22: This week we added purchasing support for BIT10 on mainnet and extended BIT10 compatibility to the Base and Sepolia testnets, while also publishing documentation for cross‑chain lending and borrowing. Minor updates and fixes were applied to existing functionality to improve stability and usability. Together, these changes broaden token accessibility across networks and enhance developer guidance for cross‑chain financial operations.",dfx.json file found - indicates ICP/Dfinity project structure
sirrauf/KuSehat-Web3,https://github.com/sirrauf/KuSehat-Web3,0,2,0,2,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes.; Week of 2025-09-08: This week we delivered full KuSehat API implementations for both Flask and Motoko, accompanied by updated README and usage documentation. We also removed outdated archive files, old documentation, and an unused directory to streamline the repository. Minor updates and bug fixes were applied throughout the codebase.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
petrakol/blockxpand-icp,https://github.com/petrakol/blockxpand-icp,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
FathanAkram-app/BitSub,https://github.com/FathanAkram-app/BitSub,3,1,1,5,"The README provides a solid project overview, clear feature list, and an architecture diagram, which helps readers understand what the project does and how it is organized. It includes some setup instructions—prerequisites and a one‑command script to install, deploy, and build the project—so a developer can get a running instance quickly. However, the documentation is incomplete in several key areas:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Integrated the project with the live Bitcoin network and updated the wallet flow to use Bitcoin mainnet balances, allowing users to view and interact with real Bitcoin balances. This change replaces any testnet or mock balance handling with actual mainnet data, enhancing the accuracy and realism of the wallet functionality.",dfx.json file found - indicates ICP/Dfinity project structure
tomasz2001/voyager,https://github.com/tomasz2001/voyager,2,2,1,5,"The excerpt provides a high‑level, conceptual overview of the Voyager system—its pillars, the idea of “connectors,” and the philosophical goals of decentralization and openness. However, it lacks the concrete documentation elements required for a usable README:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we delivered several minor updates and bug fixes, refining existing functionality and enhancing overall stability and performance across the project.; Week of 2025-09-08: This week the team built a new “vmessager” GUI application, adding its main Python code, assets (fonts, sounds, icons, a “backpack” resource folder, and a packaged zip), and identity handling with ICP client integration, plus new chat commands (help, target parsing) and UI improvements. Existing files were renamed to the backpack structure and the code was refactored to load the identity from the new location, shorten IDs for display, and support asynchronous ICP queries. A small cleanup was also made to the Voyager Panda agent script.; Week of 2025-09-15: This week we delivered several minor updates and bug fixes across the codebase, refining existing functionality and improving stability. The changes addressed small issues and enhanced performance in key areas. Overall, these improvements increase reliability without adding new features.",dfx.json file found - indicates ICP/Dfinity project structure
danielabrahamx/Paramify,https://github.com/danielabrahamx/Paramify/tree/icp-secure,3,1,1,5,"The README excerpt provides clear, step‑by‑step setup instructions for both a Codespaces environment and a local development machine, including how to start the Hardhat node, deploy contracts, fund the contract, run the backend, serve the frontend, and configure MetaMask. The instructions are well‑structured, use code blocks, and mention necessary updates to contract addresses.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: Added a detailed ICP deployment guide (README-ICP.md) that outlines prerequisite installations, automated and manual deployment steps, testing, production guidance, and security considerations, enhancing documentation for the project's migration to the Internet Computer. This new file expands the project’s onboarding resources without altering existing code. Overall, it improves developer experience and readiness for ICP deployment.",dfx.json file found - indicates ICP/Dfinity project structure
kentryanentice/primelendrow-wchl,https://github.com/kentryanentice/primelendrow-wchl,3,1,1,5,"The README provides solid **setup instructions** for local development, including commands to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server. It also notes environment‑variable considerations for production builds. However, it lacks a meaningful **project description**—readers are not told what the `primelendrow` project actually does or its purpose. There is no **integration guide** beyond the generic DFX commands, nor are there any **contribution guidelines** (e.g., how to submit pull requests, coding standards, testing procedures). The structure and formatting are clear and the grammar is fine, but the missing contextual and contribution information keeps the documentation at a basic, functional level rather than a comprehensive one. Hence, it merits a “fair” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: This week a full‑stack PrimelendRow application was introduced, adding a Rust‑based engine (users, vaults, DID interface) and a React/TSX front‑end with routing, SEO, and SCSS styling, plus all required Cargo, dfx, Vite and npm configuration files. A GPL‑3.0 LICENSE was added and the .gitignore was updated to include the new Vite timestamp entry. These changes constitute a major new feature set rather than minor tweaks.",dfx.json file found - indicates ICP/Dfinity project structure
iconworldwide/ckTON,https://github.com/iconworldwide/ckTON,3,1,1,5,"The README provides the essential steps for getting the project running locally (DFX start, deploy, npm scripts) and includes a brief “Quick Start” style overview with useful links. It also outlines deployment to the Internet Computer and gives specific admin‑setup commands for the canister. However, the document lacks a substantive project description—there is no clear statement of what ckTon does, its architecture, or its intended use cases. Integration guidance is minimal (only a few canister‑call examples) and there are no instructions for how external developers might interact with the canister beyond those calls. There is also no contribution guide, code‑of‑conduct, or information on how to submit issues or pull requests. Grammar and formatting are generally acceptable, though occasional spacing issues (e.g., “set`DFX_NETWORK`”) and inconsistent capitalization detract slightly from readability. Overall, the README covers basic local‑development setup but misses several key documentation elements, warranting a fair rating of 3.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new update method `get_ton_transactions` to the minter canister, enabling callers to retrieve TON transaction histories via the backend API. Updated the TON API structs with `CandidType` derives to make them serializable for inter‑canister calls. Adjusted the workspace Cargo.toml (added a comma and commented‑out a member) to tidy the project configuration.",dfx.json file found - indicates ICP/Dfinity project structure
Ano-ly/Vote_Secure,https://github.com/Ano-ly/Vote_Secure/tree/R_MVP,3,0,1,4,"The README provides a clear project overview, motivation, and a concise list of features, which gives readers a good sense of what the voting platform does. It also includes step‑by‑step local development instructions (cloning, installing `dfx`, running `npm install`, starting the replica, deploying canisters, and accessing the app), so a developer can get the project running locally.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Smitbafna/IPX,https://github.com/Smitbafna/IPX,2,2,1,5,"The README provides a solid high‑level overview of the IPX Protocol, its problem space, and detailed technical descriptions of the new verification and insurance features. However, it lacks essential practical information:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added two new API route files—`frontend/app/api/youtube/oauth-init/route.ts` and `frontend/app/api/youtube/exchange-code/route.ts`—to implement YouTube OAuth initialization and code‑exchange endpoints for zk‑proof verification. These additions extend the backend with YouTube integration capabilities, complementing the existing frontend components. No other files were modified or removed.; Week of 2025-09-08: Implemented comprehensive YouTube‑based identity verification for NFT minting, including channel ownership checks, subscriber/view thresholds, and video‑engagement proof validation using Groth16 ZK proofs. Added new data structures (YouTubeIdentity, YouTubeMetrics, ZkProofData, ProofType) and a legacy verifier wrapper, and introduced Arkworks dependencies to enable robust proof verification. These changes significantly extend the nft‑registry canister’s capabilities beyond the original state, allowing campaigns to require verified YouTube metrics before token issuance.; Week of 2025-09-15: This week we introduced core governance and risk‑management capabilities by adding new slashing condition functions, data structures for slashing and insurance pools, and basic logic to file and process insurance claims, accompanied by updated documentation and final code polishing. Minor updates and fixes were also applied to improve existing functionality.",dfx.json file found - indicates ICP/Dfinity project structure
utkarsh1507/ICP_AI_Agent,https://github.com/utkarsh1507/ICP_AI_Agent,1,3,1,5,The provided excerpt is essentially a raw directory listing with brief inline comments for a few files. It does not contain any of the core documentation elements required for a good README:,"3 - Commits every week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes.; Week of 2025-09-08: This week introduced a new authenticated user flow by adding a User page and route, enhancing the auth hook with safety checks, and updating the Landing page to redirect logged‑in users and include a “Start Now” login button. UI refinements were made—including a simplified Footer, removed navigation links from the Header, and styled the Features section—while the workspace was expanded to include the Langchain_Tools package and DFINITY SDK dependencies. Minor backend formatting tweaks and a scheduler adjustment were also applied.; Week of 2025-09-15: This week we refined the AI tools and addressed several backend issues, delivering minor updates and fixes across the platform. Existing features were tweaked for improved stability and performance, while no major new functionality was added. The changes collectively enhance reliability and streamline the user experience.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
iconworldwide/rwa-icp,https://github.com/iconworldwide/rwa-icp,4,0,0,4,"The README provides a clear project overview, lists the core features, and specifies the technology stack. The setup instructions for local development are complete, covering Node.js prerequisites, dependency installation, and how to start the dev server with a link to the running site. The structure of the source code is outlined, which helps newcomers navigate the repo.",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
lavu-create/Clario,https://github.com/lavu-create/Clario,4,1,0,5,"The README provides a solid overview of the project, including a clear problem statement, feature list, tech‑stack table, and basic “Getting Started” instructions for both the frontend and backend. It also explains the authentication flow, data‑visualization features, and shows a high‑level project structure, which together give readers a good sense of what the application does and how it is organized.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we delivered minor updates and bug fixes while applying UI/UX refinements that sharpened the visual layout and streamlined user interactions, resulting in a smoother and more reliable experience.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
P4-Games/ChatterPay-ICP-Backend,https://github.com/P4-Games/ChatterPay-ICP-Backend,2,2,1,5,"The README provides a solid high‑level overview of the project (description, components, technology stack, deployed canister IDs, and growth metrics). However, it lacks essential practical information. There are no setup or installation instructions for getting the backend running locally, no guide on how to integrate the backend with other components, and no contribution or development workflow guidelines. The document is also truncated (e.g., the analytics dashboard section ends abruptly), which further reduces its usefulness. While the existing sections are clear and well‑formatted, the missing core elements constitute significant gaps, resulting in a “Poor” rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: New scroll support and owner‑controlled contract management were added to the EVM Service, expanding its capabilities. Type errors were resolved and documentation was enhanced with detailed EVM service guides and a repository cover page. Minor updates and fixes further refined existing functionality, improving overall reliability and developer experience.; Week of 2025-09-22: Deployed the production canisters, making the core service live and updating documentation with the new canister list and growth metrics. Consolidated a large set of core endpoints—including external APIs, NFT handling, and user/auth services—by migrating them from the frontend repo into the backend, while also fixing analytics compilation errors and cleaning unused imports. These changes expand backend functionality, improve build stability, and enhance overall codebase maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
AfriTokeni/afritokeni-mvp,https://github.com/AfriTokeni/afritokeni-mvp,2,3,0,5,"The README provides a solid high‑level overview of the project, its goals, and detailed feature lists for users, agents, and administrators. It also includes links to a demo video and the live application, and outlines the high‑level technical architecture. However, it lacks essential practical information: there are no instructions for setting up the project locally (e.g., cloning the repo, installing dependencies, configuring ICP, running the frontend/backend), no integration or API usage guide, and no contribution guidelines or code of conduct. Grammar and formatting are generally good, but the documentation is incomplete for developers who want to work with or contribute to the codebase. Hence it falls into the “Poor” category.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: New user‑facing features were added, including an email subscription on the landing page stored via the Juno datastore, clickable logo navigation, a currency selector, a full deposit workflow with agent selection and confirmation, expanded Bitcoin capabilities (deposit/exchange pages, SMS commands, and user/agent wallet UI), and a dynamic, location‑based fee system with a dedicated tariff page. Backend and API improvements introduced Juno authentication tied to profile management, location parameters to the getNearbyAgents API, a refactored BalanceService, consolidated type definitions, normalized transaction structures, and utility functions that simplify SMS command processing and boost code maintainability. The UI received a neutral monochrome refresh, restyled CTA buttons, simplified navigation, updated dashboard text, and revised documentation, delivering a more cohesive, secure, and user‑friendly experience.; Week of 2025-09-08: This week we delivered a comprehensive agent liquidity management system—including multi‑method funding, settlement flows, smart liquidity indicators, an auto‑processing dashboard and enhanced agent profile UI with dark‑theme styling and email support—while also adding a newsletter subscription via Resend and expanding user profile settings (editing, currency and location preferences, and satellite‑ID switching). Bitcoin functionality was integrated and corrected to use the Ugandan shilling (UGX) instead of NGN, and missing role‑based authentication and environment‑specific satellite ID handling were fixed. Together these updates streamline financial operations, improve personalization and engagement, and ensure accurate currency handling and secure access across the platform.; Week of 2025-09-15: Implemented a full‑featured agent discovery page with toggleable list/map view, real‑time distance calculations, searchable filters and fallback mock data, and refactored the deposit workflow into a modular, state‑managed flow with step components, a new deposit‑request API, agent liquidity management, and robust duplicate‑entry checks and progress indicators. Added comprehensive authentication syncing, expanded notification support (SMS alerts, email, welcome messages) and introduced production‑ready infrastructure—including Railway deployment, Docker CI/CD, TypeScript typings, and corrected environment configurations. Together these enhancements improve the user experience, reliability, testability, and readiness of the platform for live financial operations.; Week of 2025-09-22: This week we delivered a complete Bitcoin deposit flow—including agent selection, amount entry, confirmation, QR‑code generation and exchange‑code handling—and launched an interactive agent map with enhanced icons and detailed statistics. We also expanded agent creation with diverse location choices and refined numerous existing components such as the withdrawal page, authentication loading states, fee‑calculation logic, commission‑rate display, and verification‑code handling, improving UI accuracy, performance, and reliability. Overall, these changes provide an end‑to‑end deposit experience, richer agent navigation, and more stable, maintainable code across the platform.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
crtzn/know_fi,https://github.com/crtzn/know_fi,3,2,1,6,"The README provides a decent high‑level overview of the project – it explains what KnowFi is, outlines its future roadmap, lists the backend canisters and frontend stack, and describes key features and technologies. However, it lacks essential practical information. There are no setup or installation instructions for getting the project running locally, no guide on how to integrate the platform into other applications, and no contribution guidelines for developers who want to help. The structure is loosely organized and contains several formatting and grammatical issues (e.g., broken sentences, missing spaces, stray markup). While the documentation gives a general sense of the product, the missing core sections prevent it from being fully useful, resulting in a “fair” rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a responsive redesign of the login page, adding Tailwind break‑point classes and adjusting paddings, font sizes, image dimensions, and container widths for better scaling across devices. The changes refine the layout of the welcome header, mascot graphic, and thought‑bubble elements, improving visual consistency on small to large screens. No new files were added; the update enhances the existing frontend UI without altering backend functionality.; Week of 2025-09-15: Implemented a new “Creates” feature in the dashboard, adding a full page (`creates/page.tsx`), background image, and a suite of UI components (`createStep1‑4.tsx`, `creatorsPage.tsx`, `knowCreates.tsx`, `knowCreatesContribute.tsx`) that together form a modal‑driven contribution workflow (the KnowCreates interface). These additions expand the frontend with a dedicated contribution flow without altering existing code. The change introduces a complete UI for creators, enhancing the platform’s interactive capabilities.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
Edge1Options/DawnPickCFD,https://github.com/Edge1Options/DawnPickCFD,4,0,1,5,"The README provides a solid overview of the project, clear feature list, and a well‑structured tech stack section. It includes comprehensive local development setup instructions (prerequisites, cloning, dependency installation, environment configuration, DFX network start, deployment, and running the dev server) and detailed deployment steps for both local and mainnet environments, along with configuration notes and a partial project structure diagram.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
zatchone/blocktrace-app,https://github.com/zatchone/blocktrace-app,3,2,1,6,"The README provides a solid project overview—including a clear description of the problem, solution, market opportunity, and high‑level architecture—and it is well‑structured with a table of contents and good formatting. However, it lacks essential practical documentation: there are no step‑by‑step setup instructions for running the project locally, no guide on how to integrate the canisters or APIs into other applications, and no contribution or development guidelines (e.g., code style, pull‑request process, testing). Without these pieces, a new developer or external contributor would struggle to get started, so the documentation is only fair despite its strong narrative sections.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we expanded the ICP backend with advanced capabilities—including HTTP outcalls, automated timers, and t‑ECDSA verification—and launched professional UI pages (About, Features, Pricing, Demo, Roadmap) plus ESG‑integrated PDF passport export. We also fixed NFT ID handling to start at 0, improved caching, error handling, design consistency, and updated documentation. Minor updates and fixes were applied throughout, delivering a more polished, market‑ready product.; Week of 2025-09-15: The project was deployed to mainnet, adding live URLs for the frontend and backend, updating the canister IDs in the README and committing a new canister_ids.json file. Documentation was expanded with architecture and user‑flow diagrams and the backend was adjusted to use the production‑ready “key_1” ECDSA key instead of the test key. These changes finalize the supply‑chain tracking and ESG scoring features for public use while noting the NFT passport remains undeployed due to cycle limits.",dfx.json file found - indicates ICP/Dfinity project structure
Infinity-Task-Protocol/Infinity-task-protocol,https://github.com/Infinity-Task-Protocol/Infinity-task-protocol,2,1,1,4,"The README provides a handful of screenshots, a few external video links, and a detailed description of the Chat canister’s functionality and future plans. However, it lacks essential documentation elements: there are no setup or installation instructions for running the project locally, no clear overall project overview beyond the chat module, no integration or usage guide, and no contribution guidelines. The structure is fragmented, with inconsistent headings and several grammatical/formatting issues, making it hard to follow. Overall, the documentation is limited and missing many critical sections, resulting in a poor rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented a new modal that allows users to accept a delivery while it’s in progress. Added functionality to pull and display notifications, ensuring timely updates. These changes enhance user interaction and keep users informed in real time.",dfx.json file found - indicates ICP/Dfinity project structure
HACKTHEMM/SaleSpeak,https://github.com/HACKTHEMM/SaleSpeak,4,0,0,4,"The README provides a solid project overview, detailed setup instructions for both backend and frontend, and clear API usage examples, which makes it easy to get the application running locally. It also outlines the architecture and key features, aiding understanding and integration. However, it lacks contribution guidelines (e.g., how to submit issues, pull requests, coding standards), which are important for community involvement. Adding a CONTRIBUTING section would elevate the documentation to an “Excellent” level. Overall, the documentation is clear, well‑structured, and mostly complete, but the missing contribution guidance prevents a perfect score.",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
orgs/coown-box,https://github.com/orgs/coown-box/,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Web3-Iligan/LikAI,https://github.com/Web3-Iligan/LikAI,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
MentalverseICP/MentalVerse,https://github.com/MentalverseICP/MentalVerse,3,3,1,7,"The README provides a solid project overview, clear articulation of core features, and a detailed list of recent upgrades, which helps readers understand the platform’s purpose and recent work. The structure is logical with headings, badges, and sections that improve readability, and the grammar/formatting is generally clean.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented fixes for routing issues and partially built the onboarding and doctors pages, enhancing navigation and introducing initial user onboarding functionality. These changes improve the app’s core flow and lay groundwork for further doctor‑related features.; Week of 2025-09-08: This week we delivered a new landing page layout with refined UI elements, fixed smart‑contract syntax errors, added initial calendar functionality, and enhanced responsiveness across key pages. We also completed the therapist UI and pages, introduced functional dashboards for doctors and patients, and refreshed onboarding data. Additionally, a Rust‑based secure messaging system with cryptographic protection was integrated, boosting interaction security across the platform.; Week of 2025-09-15: This week we hardened platform security by migrating the security layer to smart contracts, encrypting PHI fields with key management, restricting MVT‑token canister access, adding UUID/session‑ID validation, and fixing Wasm validation errors, while also improving authentication handling, health‑checks, and rate‑limited signup flows. We refactored the backend into modular components, streamlined the frontend build to deploy directly to canisters, generated type declarations, and resolved numerous integration and import bugs, resulting in more reliable inter‑canister communication and faster releases. Finally, the landing page received visual updates and the user registration feature was completed and stabilized with response handling, phone‑number formatting, and proper backend initialization, delivering a polished UI and robust onboarding experience.; Week of 2025-09-22: We delivered a new admin frontend that communicates with canisters via embedded JavaScript and completed the MVT token staking feature, now ready for mainnet deployment. The BackendService API was enhanced so `getUserStake` can return null, claim‑and‑stake logic was fixed on mainnet, and the UI received a refreshed design along with a new build and generation process. Minor updates and bug fixes were applied across the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
OHMS-DeAI/ohms-2.0,https://github.com/OHMS-DeAI/ohms-2.0/,2,1,1,4,"The README fragment provides visually appealing mermaid diagrams that highlight the project's key innovations (Instruction‑to‑Agent workflow, NOVAQ compression, and on‑chain architecture). However, it lacks essential documentation elements:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the team added the OHMS Agent canister with comprehensive type definitions and methods for agent configuration, inference, and task management, introduced a shared‑types package that unifies interfaces across Model Repository, Agent, Coordinator, and Economics services, and initialized the OHMS 2.0 monorepo with build, deployment, and setup scripts while refactoring the communication layer and removing obsolete modules (InferenceService, InstructionAnalyzer, MemoryService). They also merged the core OHMS components—website, UI, model, econ, and coordinator—into the main codebase, consolidating subsystems for upcoming releases. Minor updates and fixes were applied throughout to improve stability and consistency.",dfx.json file found - indicates ICP/Dfinity project structure
gov-mind/ic_govmind,https://github.com/gov-mind/ic_govmind/,2,2,1,5,"The provided excerpt is a detailed roadmap and technology overview, which gives a good sense of the project’s vision and high‑level architecture. However, it lacks most of the core elements expected in comprehensive README documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week introduced a governance committee module, added full token management—including creation, Ethereum‑compatible token handling, and a new transfer API endpoint—and refined nonce handling with a fix to increment_nonce. Existing token and governance components were further integrated and stabilized across the codebase. Together, these updates expand core token operations, enable Ethereum token support, and improve overall system reliability.; Week of 2025-09-15: This week we launched a full debate‑simulation flow and added comprehensive committee support—including creation, assignment, suggestion UI, and related backend structures—while also delivering a new multi‑tab DAO dashboard (Overview, Members, Proposals, Distribution, Treasury, Governance, Canister) with live data, interactive charts, and multi‑chain wallet balances (ICP, BTC, ETH, USDT). Backend improvements introduced exponential‑backoff retry logic, expanded chain handling (EthLocal, EthSepolia, nonce utilities), a local ICP ledger, ICRC token transfers, configurable factory canister defaults, and streamlined deployment scripts for local environments. Together these changes dramatically enhance proposal workflows, governance visibility, and cross‑chain operations for both developers and users.",dfx.json file found - indicates ICP/Dfinity project structure
Blessan-Alex/ICP-CDN,https://github.com/Blessan-Alex/ICP-CDN,2,0,1,3,"The README provides a solid high‑level description of the project (overview, architecture diagram, technology stack) and includes helpful demo video links, which is a strength. However, the sections that would normally contain the detailed setup instructions, integration guide, and contribution guidelines are missing from the excerpt (they are listed in the Table of Contents but not present in the content shown). Consequently, a developer cannot follow the steps needed for local development, learn how to integrate the dCDN into another application, or understand how to contribute to the codebase. The existing content is well‑structured and formatted, but the critical practical documentation is absent, leading to a low overall rating. If the missing sections are present elsewhere in the full README, the score could be higher, but based on the provided material the documentation is incomplete.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
verichain-protocol/verichain,https://github.com/verichain-protocol/verichain,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Added a new registration page (with route /​Register) plus supporting assets, a LocalStorage manager, quota hook, and UI components for user status and testing. Integrated smart‑login logic in the Navbar and Jumbotron that uses Internet Identity and the Logic canister to auto‑redirect users based on registration status, and enhanced the Sidebar to display upload‑quota information with new SVG graphics. Refactored the auth provider and services to persist principals, create canister actors with proper HttpAgent configuration, and added debugging utilities, improving authentication reliability and developer visibility.; Week of 2025-09-22: Implemented a full registration and smart‑login flow by adding a Register page, routing, and new auth logic that checks Internet Identity and user registration before navigating to the dashboard. Integrated a quota display in the sidebar using a new useQuota hook and added supporting assets (Gantungan.svg, Tali.svg) along with debugging utilities for localStorage and principal handling. Updated the auth provider and logic service to persist principals, create canister actors with proper identity, and expose debugging functions, enhancing both the UI experience and backend connectivity.",dfx.json file found - indicates ICP/Dfinity project structure
Zeegaths/Lipainvoice,https://github.com/Zeegaths/Lipainvoice,2,3,1,6,"The README provides a general project description, outlining many features, authentication details, admin capabilities, and a high‑level frontend structure. However, it lacks essential elements needed for developers to get started or contribute effectively. There are no setup instructions for local development (e.g., prerequisites, installation steps, build/run commands), no integration guide for using the app’s APIs or services, and no contribution guidelines (e.g., code style, pull‑request process). The document is also incomplete—sections are cut off (e.g., “Landing Page A”) and there is no clear organization into sections like Installation, Usage, or Contributing. While the overview is fairly detailed, the missing core documentation makes it difficult for newcomers to understand how to set up, run, or extend the project. Consequently, the documentation is limited with significant gaps.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we introduced ICRC‑21 consent message types and a service method for processing consent requests, integrated NFID IdentityKit to replace Internet Identity, and refactored authentication and actor/query hooks to use the new `useAuth` context, while also updating invoice‑related hooks with user authentication, enhanced error handling, and toast‑based feedback. We cleaned up the app architecture by removing unused pages, consolidating type definitions, streamlining navigation, and updating DFINITY dependencies to v2.4.1. Together, these changes boost security, improve the user experience, and enhance code maintainability across the frontend and backend.; Week of 2025-09-08: Added an invoicing generation feature. Refactored the Dashboard and Invoice Creation components to improve data handling, filtering, validation, and user feedback, and updated the Sidebar and App components for smoother navigation. These changes enhance invoice management and overall user experience.; Week of 2025-09-15: This week we added a Client Payment Portal with a new `getPublicInvoice` endpoint that returns a copy‑link (replacing PDF download), integrated Bitcoin‑to‑USD conversion, new billing‑type options, and updated navigation, while refactoring invoice handling, UI components, and hooks to use a unified `useAgent` abstraction and the `@icp-sdk/core` library. We also migrated cryptographic operations to the `k256` ECDSA library, cleaned up canister interfaces and Cargo dependencies, and switched the Vite proxy to port 8080, removing unused Rust crates. Together these changes boost stability, security, and user experience, delivering a more cohesive design and laying groundwork for Bitcoin payment integration.; Week of 2025-09-22: The Dashboard component was refactored and the codebase reformatted for clearer, more consistent readability. Invoice handling was enhanced with updated status and filtering logic, plus UI styling improvements for displaying invoice data. Error handling and loading states were also upgraded to provide a smoother user experience.",dfx.json file found - indicates ICP/Dfinity project structure
Shreyanshy53/ICP_SCHOLAR_DECENTRALIZED_EDUCTAION_PLATFORM,https://github.com/Shreyanshy53/ICP_SCHOLAR_DECENTRALIZED_EDUCTAION_PLATFORM.git,3,0,1,4,"The README provides a solid project description, outlines features, and lists the technology stack clearly. It includes basic local‑development setup steps (prerequisites, cloning, starting the ICP replica, and deploying canisters). However, the installation instructions are incomplete (the “Generate canist…” line is cut off) and there are no detailed steps for building or running the React frontend, configuring environment variables, or running tests. Additionally, the document lacks contribution guidelines, an integration guide, and any information on how external projects might interact with the platform. While the structure and grammar are good, the missing sections and incomplete setup reduce its overall usefulness, placing it at a “fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
nidioganteng/MedicalChainID,https://github.com/nidioganteng/MedicalChainID,3,0,1,4,"The README provides a solid high‑level overview of the project, its value proposition, core features, and a brief technical architecture for both the frontend (React + TailwindCSS) and backend (Motoko smart contract). The project description and feature list are clear and well‑structured, and the formatting is generally good.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
JohnBenJB/Cafe,https://github.com/JohnBenJB/Cafe/tree/mvp,3,0,1,4,"The README provides a clear, well‑structured overview of the project’s purpose, features, and the technologies it uses, which satisfies the “general project description” requirement. It also includes a brief “Join the Table” section with a git clone command, giving a minimal entry point for newcomers.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AIO-2030/alaya-network,https://github.com/AIO-2030/alaya-network,2,2,1,5,"The README provides a high‑level project description, a table of contents, demo canister URLs, and a detailed “What’s New” changelog, which are useful. However, it lacks concrete sections that are essential for comprehensive documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added the `bincode` crate to the Rust backend (updated `Cargo.lock`) and refreshed the submodule references for both `aio-base-backend` and `alaya-chat-nexus-frontend`. These changes support the integration of the device‑info manager with the backend. Overall, the update mainly introduces a new serialization dependency and aligns submodule versions.; Week of 2025-09-08: Added a new Bluetooth‑first device initialization system that extends the onboarding flow to six steps, introducing activation‑code handling via Tencent Cloud and an updated `deviceInitManager` sequence (including an ACTIVATION stage). The README was expanded with detailed architecture diagrams and documentation for this feature, while the frontend subproject reference was updated to the latest commit. These changes enhance IoT device onboarding, improve error handling and blockchain integration, and provide clearer guidance for developers.; Week of 2025-09-15: Implemented full project‑architecture independence by separating aio‑base‑frontend and alaya‑chat‑nexus‑frontend, adding dedicated AIO protocol executor and type files (`AIOProtocolExecutor.ts`, `AIOProtocolTypes.ts`) plus independent build scripts (`build‑aio‑base‑frontend.sh`, `build‑alaya‑chat‑nexus.sh`, `build‑all‑projects.sh`). Updated documentation (README and new PROJECT_ARCHITECTURE_INDEPENDENCE.md) to reflect the new modular structure and added ALAYA network protocol integration details. The changes eliminate cross‑project dependencies, allowing each frontend to be compiled, deployed, and maintained separately while preserving all device communication functionality.",dfx.json file found - indicates ICP/Dfinity project structure
AYU2027/Icp-health-Exchange,https://github.com/AYU2027/Icp-health-Exchange,3,0,1,4,"The README provides solid local‑development setup instructions: it lists helpful resources, shows how to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server, along with a note on environment‑variable handling. However, it lacks a general project description that explains what “Health Vault” or “Icp‑health‑Exchange” does, any integration or usage guide beyond local testing, and there are no contribution guidelines, code of conduct, or instructions for external developers to interact with the project. The structure is clear and the formatting is reasonable, but the missing high‑level context and contribution information keep it at a “fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Chymezy/deCentra,https://github.com/Chymezy/deCentra.git,2,0,1,3,"The README provides a useful tech‑stack table, a clear project‑tree diagram, and a feature list, which give a high‑level view of the codebase. However, it lacks essential documentation elements:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
RafaelCostaSolutions/icp-onboarding-hub-br,https://github.com/RafaelCostaSolutions/icp-onboarding-hub-br,4,2,1,7,"The README provides a solid project overview (problem, objective, impact) and clear local‑development setup steps, including DFX installation, repository cloning, starting the replica, deploying, and accessing the site. It also outlines the project’s file structure, deliverables, roadmap, and licensing, which helps readers understand the scope and future plans.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: A file‑upload capability was added and new regional assets—including updated JavaScript (ScriptEtapaRegionalAtualizado.js), CSS, and renamed documentation, tutorial, playground, resource, and home pages—were introduced to support the upcoming regional rollout. The regional step module and related UI components were refreshed with revised styling and updated tutorial/playground content, and the project was cleaned up by removing unused icons and scripts. Together, these changes enhance functionality, visual consistency, and user guidance while standardizing naming conventions for easier regional customization.; Week of 2025-09-22: This week we refreshed the regional tutorial, resources, and playground pages and updated the regional Home, Documentation, and Community pages, revising their HTML, CSS, and JavaScript to improve layout, styling, and client‑side interactivity. The changes bring a more consistent and polished UI across all regional sections, enhancing overall user experience. Minor updates and bug fixes were also applied.",dfx.json file found - indicates ICP/Dfinity project structure
khailesh-kumar-sa/skill-it-prototype,https://github.com/khailesh-kumar-sa/skill-it-prototype,0,1,0,1,No documentation assessment provided.,1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Minor updates and fixes.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
newcoder789/HealthChain,https://github.com/newcoder789/HealthChain,3,2,1,6,"The README provides clear **setup instructions for local development**, including DFX commands to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server. It also includes helpful notes on environment variables for production deployments. However, the document lacks a substantive **general project description**—it only repeats the project name without explaining its purpose, architecture, or key features. There are no **integration or usage guides** that show how to interact with the canisters beyond the basic local URLs, nor are there any **contribution guidelines** (e.g., how to submit pull requests, code style, testing procedures). Overall, the structure and formatting are clean and the language is grammatical, but the missing contextual and collaborative information keeps the documentation at a **fair** level rather than good or excellent.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the backend was overhauled: new Candid types (MedicalRecord, AccessPermission, PatientProfile, AuditLog) and service methods (create_folder, revoke_access, updated result signatures) were added, and the canister code was migrated to stable‑structures with updated ic‑cdk dependencies. The frontend was expanded from a single greeting page to a full multi‑page React app using React‑Router, Tailwind CSS, and Internet Identity authentication, with new components, dashboards, and UI pages for patients, doctors, and researchers. Together these changes introduce role‑based access control, folder management, and a polished UI, turning the project from a minimal prototype into a functional hospital‑chain application.; Week of 2025-09-22: Doctor features were updated, core functionality was built, and the project folder structure was finalized.",dfx.json file found - indicates ICP/Dfinity project structure
cultureic/ckPayment,https://github.com/cultureic/ckPayment,3,3,1,7,"The README provides solid setup instructions for local development, including prerequisites, cloning, dependency installation, starting the IC replica, and deploying canisters. It also offers a clear integration example with HTML/JS code, which is valuable for developers looking to embed the payment component. However, the document lacks a concise, overarching project description that explains the purpose, architecture, and primary use‑cases of the library beyond the feature bullet points. There are no contribution guidelines, code of conduct, or instructions for running tests or building from source, which are important for open‑source collaboration. Minor formatting and grammatical issues (e.g., an incomplete `</script>` tag) also detract from polish. Overall, the README covers the essential setup and integration steps but misses several key elements expected in comprehensive documentation, placing it at a “Fair” rating.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we standardized the `transferToken` response format, added comprehensive error handling and a direct ICRC transfer path via the wallet provider, and migrated deployment to a factory‑managed canister that supports the full multi‑chain token set. We also enhanced the payment flow to correctly handle both ICRC and SPL tokens, rebuilt the SDK with an optimized bundle and updated configurations, and completed analysis/documentation to differentiate token flows and plan Solana RPC integration. These changes eliminate transfer errors and “Product token not supported” issues, greatly improving the reliability and multi‑chain capabilities of the platform.; Week of 2025-09-08: Implemented multi‑chain token support across the frontend and backend: the TokenSelector component now displays both ICP and Solana tokens with chain‑filter UI, improved logo caching, timeout handling, and new CSS styling, while a new `useSolanaCanister` hook and Solana utilities enable balance queries for SOL and SPL tokens. The user‑payment canister was extended with Solana‑related types, storage, and service functions, and its ID was updated to a working factory‑managed canister; the provider hook now fetches and merges ICP and SPL token lists with extensive debugging logs. These changes collectively add Solana integration, enhance token selection UX, and improve reliability of canister interactions.; Week of 2025-09-15: This week we delivered core cross‑chain functionality by adding full EVM integration—including wallet creation, address lookup, gas‑price queries, balance and transaction validation via a new HTTP JSON‑RPC layer—and extending the Candid interface with comprehensive EVM and Solana type definitions and token‑listing support. We bundled these capabilities into a stable, multi‑chain SDK (cdkPay.js) that now supports Ethereum, BSC, Polygon, and Solana, with updated storage maps, deployment scripts, testing infrastructure, NPM artifacts, and extensive documentation and UI refinements. Performance and reliability were also boosted through caching, bundle optimizations, enhanced error handling, security hardening, and UI improvements, resulting in faster load times, more efficient token operations, and a more robust developer experience.; Week of 2025-09-22: This week we delivered a full Stripe‑inspired payment integration, exported EVM types from the SDK index, and cleaned up EVM environment files for a tidier repository. We finalized the EVM integration, updated the frontend entry point, added a rate‑limited real‑time gas‑price updater, released v2.0.0‑multichain, and introduced a new EVM SDK build configuration with supporting scripts and a comprehensive multi‑chain deployment checklist. Together, these changes make the platform EVM‑ready, enhance payment capabilities, and streamline multi‑chain SDK usage and deployment.",dfx.json file found - indicates ICP/Dfinity project structure
badrinarayan-samantaray/supply_chain,https://github.com/badrinarayan-samantaray/supply_chain,3,1,1,5,"The README provides solid **setup instructions** for local development, including how to start the replica, deploy canisters, generate Candid interfaces, and run the frontend server. It also offers useful links to broader documentation and notes on environment variables for production deployments.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week a new **Products** page was added (replacing the old Products‑by‑Owner view), with updated routing, navigation links, and a revamped UI that includes a grid layout and improved form styling. The Add‑Product form now includes a comprehensive hard‑coded supplier list and enhanced local‑ID handling that syncs new products to the backend, while the Suppliers component was simplified and given a background wrapper. Overall, the changes modernize the frontend navigation, expand supplier data entry, and polish the user interface.",dfx.json file found - indicates ICP/Dfinity project structure
NEXBIT-X/CLAIM,https://github.com/NEXBIT-X/CLAIM,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
prometheus-protocol/prometheus-protocol,https://github.com/prometheus-protocol/prometheus-protocol,2,3,1,6,"The README provides a solid high‑level overview (project summary, problem statement, solution overview, and a detailed table of contents), which satisfies the “general project description” criterion. However, the excerpt cuts off before any of the substantive sections such as **Project Setup**, **Testing**, **Deploying to ICP Mainnet**, or **Contribution Guidelines** are actually shown. Consequently, there are no visible step‑by‑step instructions for local development, integration details, or how to contribute to the codebase. The formatting and grammar of the visible portion are good, but the lack of concrete setup and contribution information represents a significant gap, leading to a low rating. If the missing sections exist in the full README, the score could be higher, but based on the provided content the documentation is incomplete.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added a new ICRC token to serve as the underlying asset for pre‑MCPT workflows and completed the usage‑tracking feature (including the 9‑2 tracker and the 9‑4 “finish tracker”), with additional unit tests boosting coverage. We also tightened security by locking bounty claims until attestation and updating the audit system so audits now require a claimed bounty to be attested, while removing unused authentication credentials and regenerating the lockfile. Documentation links were added to the App Store UI, minor test adjustments were made, and the updated production canister was deployed, improving user guidance and overall reliability.; Week of 2025-09-08: This week we added a full bounty and audit workflow with an Audit Hub, integrated both the dynamic 9‑8 leaderboard and a static leaderboard for MCP canisters, and migrated financial handling from the premcpt token to USDC while updating avatars to pixel‑art graphics. We also enhanced the certification page with sponsor buttons, refactored the app‑store submission flow, cleaned up test files, fixed UI build errors, regenerated lockfiles, and replaced the premcpt‑based incentive model with a usage‑statistics‑driven system, deploying the updated canister to production. Together, these updates boost competitive features, improve financial robustness and visual consistency, and increase overall platform stability.; Week of 2025-09-15: Implemented a searchable interface, server‑statistics reporting, and a WASM controller assignment feature while enforcing a 1 MiB limit on WebAssembly chunks, and added OAuth end‑to‑end tests, automatic app and canister deployments post‑verification, and API‑key management with allowance controls in the app‑store UI. UI consistency and code reliability were improved by standardizing icons, cleaning up type definitions, removing debug comments, fixing Zod form type‑checking, and updating tests and build declarations. These changes collectively boost user experience, stability, security, and deployment efficiency, moving the platform closer to production readiness.; Week of 2025-09-22: This week we added a public‑access view for anonymous users, introduced owner‑management capabilities (including the ability to set a custom registry canister ID), and refined the UI by adding extra margin and updating the strip label to display “public”. Documentation was enriched with a demo link and additional resources, and a series of minor updates and fixes were applied. Together these changes improve visibility, configurability, and overall user experience while ensuring UI consistency.",dfx.json file found - indicates ICP/Dfinity project structure
AncientSclupture/Ownership-Chain,https://github.com/AncientSclupture/Ownership-Chain,2,2,1,5,"The README provides a decent high‑level description of the problem, the proposed solution, and a fairly detailed feature list with references to backend functions and UI routes. However, it lacks essential documentation elements required for a usable project README:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Implemented new modal workflows—including a plagiarism‑report modal, document‑hashing and signing safeguards—and integrated backend services to secure document processing. Delivered an asset‑creation feature with full backend workflow and UI support, added public/private key generation for identity management, and fixed target‑ID validation and modal‑close issues. Updated existing components such as the text uploader and digital verification flow, broadening asset handling capabilities, strengthening validation, and enhancing overall system reliability and security.; Week of 2025-09-08: This week we added core onboarding and security features—including new user registration with a self‑information section, an active index page for guests, protected pages with a logout flow, and a new courting‑asset process that records duration data in notifications and provides backend asset endpoints. We also upgraded the UI/UX by delivering reusable map and chart components, a completed marketplace UI, error‑page handling, updated navigation/redirect logic, and a debug simulation script while refactoring the frontend for more efficient data flow. Backend capabilities were expanded with a report API, asset and proposal services, enhanced validation, and a broader business‑logic layer refactor, collectively improving data handling, debugging, and overall application robustness.; Week of 2025-09-15: Implemented new reporting capabilities—including create‑asset and solve reports—with a create‑reporting flow in the UI and integrated voting/approval proposal functionality, while fixing RWA handling to prevent frontend errors when no backend file is present. Added logic that disables asset‑status changes while an asset is pending or inactive, completed the core “create asset” feature, and introduced multi‑user actor support in the backend service, also reverting the environment to development mode. Together, these updates expand the platform’s reporting suite, improve asset management and proposal interactions, and strengthen backend user handling.",dfx.json file found - indicates ICP/Dfinity project structure
akilesh464/icp-FinSence,https://github.com/akilesh464/icp-FinSence.git,2,1,1,4,"The README provides a high‑level overview of the project’s purpose (core features, tech stack, potential impact) but lacks essential documentation elements. There are **no setup instructions** for local development, no guidance on how to integrate the system into other projects, and no contribution or contribution‑process guidelines. While the feature list and technology summary give a basic project description, the overall clarity and structure are limited, and there are no sections on installation, configuration, testing, or community involvement. Consequently, the documentation is limited and has significant gaps, warranting a score of 2.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we delivered a series of minor updates and fixes across the codebase, addressing bugs and improving stability. While no major new features were introduced, existing functionality was refined for better performance and reliability. Overall, the changes enhance the user experience and maintainability of the project.",dfx.json file found - indicates ICP/Dfinity project structure
f0i/identify,https://github.com/f0i/identify,3,0,1,4,"The README provides a clear high‑level description of the project and outlines two integration paths (managed and self‑deployed), which is helpful for users wanting to adopt Identify. It also lists testing commands and gives a brief contribution note. However, it lacks concrete local‑development setup instructions (e.g., how to clone the repo, install dependencies, run a local canister, configure environment variables, or use a development network). The integration steps are somewhat high‑level and could benefit from more detailed commands or code snippets. Contribution guidelines are minimal, merely asking contributors to contact the author before PRs, without specifying code style, testing expectations, or a pull‑request workflow. Grammar and phrasing have a few errors (“Follow this steps”, “top‑level private domain”), and the formatting could be tightened (consistent heading levels, bullet style). Overall the documentation covers the basics but misses several key elements needed for a smooth developer onboarding experience, placing it at a “Fair” level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
RiverrFinance/clearing_house,https://github.com/RiverrFinance/clearing_house,1,2,1,4,"The README consists of only the line `use.did` and a single heading “### *For Exmaple see Scripts/functions*”. It provides no project description, no setup or installation instructions, no guidance on how to integrate or use the code, and no contribution guidelines. The content is too sparse to assess any of the required documentation elements, and the typo in “Exmaple” further reflects a lack of polish. Consequently, the documentation is minimal and falls into the “Very Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we streamlined the create‑market API (removing the asset‑pricing argument and now returning the market index) and completed core trading operations—including remove liquidity, open/close positions, deposit/withdrawal—and admin role management, while also adding a new “Add Liquidity” feature. All changes received final approval and are production‑ready, boosting platform functionality, liquidity provision, and operational control.; Week of 2025-09-22: Implemented a ckBTC minter canister interface (src/asset_management/ckbtc_minter_interface.rs) that enables native Bitcoin withdrawals via a retrieve_btc_with_approval flow after icrc2_approve. Reorganized the asset‑management module by moving asset_management.rs into a new folder, adding a mod.rs, and updating all import paths. Added local network configuration to dfx.json.",dfx.json file found - indicates ICP/Dfinity project structure
fradiumofficial/fradium,https://github.com/fradiumofficial/fradium,2,3,1,6,"The README provides a high‑level overview of the Fradium product (wallet, extension, analytics engine, community reporting, and token system) and includes a table of demo screenshots, which is helpful for visual context. However, it lacks essential documentation elements required for a solid README:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: New core financial functionality was added, including a balance‑fetching feature, a receive modal, an animated wallet page with transition effects, and a consolidated canister that now supports Ethereum, Solana, Bitcoin and the Fradium token index. The UI received extensive upgrades – a purple button component, first‑row card layouts, new landing‑page sections, and migration of the footer, landing page and other components to Tailwind CSS, alongside refactored navigation and button code for cleaner, more maintainable styling. Additionally, the Mythril component was removed to streamline the codebase, delivering a more modern, performant, and cross‑chain capable frontend and backend.; Week of 2025-09-08: This week we added full multi‑chain support—including ICP, Fradium, Solana, and ETH—by introducing dedicated send/receive pages, per‑coin balance fetching, transaction‑ and scan‑history screens, and a comprehensive on‑chain ICP analysis with an AI‑driven address analyzer. The UI received a major refresh with glassmorphism styling, new icons, animated dashboard cards, improved modals, updated routing, and an overhauled authentication flow that adds logout and wallet‑creation with balance display. Extensive bug fixes, Vercel/React‑Router configuration updates, and code modularization round out the work, delivering richer token management, deeper analytics, a smoother user experience, and greater overall stability.; Week of 2025-09-15: This week the team added extensive cross‑chain capabilities, including full ckBTC integration, ckETH support, and multi‑coin sending for ICP, Fradium and FUM, alongside more reliable transaction‑history and balance‑fetching workflows with retry logic. Reporting was expanded with creation, list and submit features, and the UI received numerous enhancements such as home animations, a dynamic network dropdown, QR‑code support, zero‑balance hiding, and a refined Fradium agent interface. Backend stability and developer experience were boosted through comprehensive unit tests, Pocket‑IC local canister simulation, module refactoring, automated zip packaging, CI/CD workflow reorganization, and updated documentation and deployment configuration.; Week of 2025-09-22: This week we delivered a responsive redesign of the product wallet and overhauled the mobile‑card layout, extending responsive updates to the report view, assistant interface, and assistant page. We also fixed a bug that prevented image reports from being generated and refreshed the placeholder video asset. These changes improve UI responsiveness, enhance usability across devices, and resolve a critical reporting issue.",dfx.json file found - indicates ICP/Dfinity project structure
Kevin5621/origin-stamp-icp,https://github.com/Kevin5621/origin-stamp-icp,3,2,1,6,"The README provides a solid high‑level project description, outlining the problem, the solution, and the core workflow of OriginStamp. It explains the three pillars of trust, the verification experience, and why the Internet Computer is chosen, which gives readers a clear conceptual understanding of the project.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we introduced extensive new functionality—including full NFT collection handling with minting, a comprehensive subscription system, robust session and profile management, and a feature‑rich dashboard (metric cards, collapsible sidebar, marketplace with minting and DFINITY integration) that supports multiple authentication methods. We also refined existing UI across landing, sessions, and profile pages with a dark‑mode default, shadcn/ui components, drag‑and‑drop image upload, loading spinners, toast positioning, responsive layout improvements, tighter security (removing hard‑coded credentials), and added theming, metadata, and code‑quality tooling. Together, these changes dramatically improve user experience, visual consistency, and backend capabilities, positioning the app for scalable, secure, and modern front‑end development.; Week of 2025-09-08: This week we delivered several new user‑facing features, including a full location‑search UI with OpenStreetMap geocoding, complete Google OAuth integration, AI‑powered verification components for NFT and session pages, and new services for handling physical‑art sessions and avatar generation. We also refined existing functionality—enhancing profile editing endpoints and UI, adding skeleton loaders and caching for sessions and subscriptions, redesigning headers and empty‑state layouts, and overhauling the CI/CD pipeline and deployment scripts for both frontend and Rust backend. Collectively, these updates improve code modularity, type safety, performance, and developer workflow while providing a smoother, more responsive experience and stronger authenticity checks for users.; Week of 2025-09-15: We launched a full‑featured NFT marketplace page, adding backend endpoints and responsive UI components—including featured collections, a trending‑creators section with profile photos, a banner, and an NFT detail modal—plus a service layer for marketplace data and Dicebear API integration. We also introduced an AuthRedirect component with middleware updates to streamline user redirection and loading states on the Home page, and cleaned up backend connection handling and development scripts. Together, these enhancements improve authentication flow, navigation, discoverability, and deliver a searchable, styled marketplace with richer user interaction and tighter data integration.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
WeGoWinPrikitiw/pico,https://github.com/WeGoWinPrikitiw/pico,3,0,1,4,"The README provides a decent high‑level overview of the project, listing its AI‑driven features, token standards, smart contracts, and a brief architecture description with a diagram. It also enumerates core functionalities and community aspects, which gives readers a good sense of what the system does.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
3wHub/voted-apps,https://github.com/3wHub/voted-apps,2,0,1,3,"The README provides a good high‑level overview of the project—its purpose, the problems it addresses, and a list of core features. However, it lacks essential practical documentation. There are no setup or installation instructions for running the application locally, no guide on how to integrate the smart contracts or frontend into another project, and no contribution guidelines (the “Contribute” link is present but no actual instructions are shown). The document also ends abruptly (“Advanced Search &”), indicating incomplete content. While the description and formatting are clear and well‑styled, the missing setup, integration, and contribution sections are significant gaps, resulting in a poor overall documentation rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
hunters-code/plantify,https://github.com/hunters-code/plantify,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
ndrewantonio/encoteki-whcl-2025,https://github.com/ndrewantonio/encoteki-whcl-2025,0,0,1,1,No documentation assessment provided.,0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Frascth/cvku.id,https://github.com/Frascth/cvku.id,2,2,1,5,"The README provides a decent high‑level description of the project (intro, overview screenshots, and a feature list) which satisfies the “general project description” criterion. However, it lacks essential practical information: there are no setup or installation instructions for running the application locally, no guidance on how to integrate the platform with other services, and no contribution guidelines for developers who might want to help. The document is also incomplete (the feature list is cut off) and offers no sections on usage, configuration, or testing. Overall, while the README gives a visual sense of the product, the missing core documentation elements constitute significant gaps, resulting in a rating of 2 (Poor).","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the backend certification service was refactored to accept a local “lid” for optimistic updates, return structured `Response` objects with error handling, and simplify batch updates, while the frontend store added an `areHandlersReady` check and a `lid` field to `Certification` for smoother UI initialization. Forms for certifications, education, skills, and work experience were updated to use the new utility functions, disable actions for non‑backend IDs, and respect loading states, and the authentication provider was cleaned up for clearer environment handling. Together these changes improve API robustness, enable optimistic UI updates, and make the app’s initialization and error handling more reliable.; Week of 2025-09-08: Implemented a new assessment feature, enabling users to create and manage assessments. This addition expands the platform’s evaluation capabilities.; Week of 2025-09-15: This week we delivered an Analytics Dashboard for deeper user insights, added a public link to the community job‑connector, and introduced a new front‑end “spark” feature to enhance UI interactivity. Minor updates and fixes were also applied across the codebase. Together, these changes improve data visibility, community connectivity, and the overall user experience.",dfx.json file found - indicates ICP/Dfinity project structure
WAW1311/dyahai-2.0,https://github.com/WAW1311/dyahai-2.0,2,2,1,5,"The README provides only a handful of links (video demo, pitch deck/video), a list of contributors, and a license notice. It lacks a project description that explains what the software does, any setup or installation instructions for local development, integration or usage guides, and contribution guidelines (e.g., how to submit issues or pull requests). While the inclusion of a license and contributor avatars shows some attention to detail, the overall documentation is very limited and missing the core elements needed for users or developers to understand, run, or contribute to the project. Consequently, it falls into the “Poor” category with significant gaps.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The frontend navigation and scrolling behavior was fixed, resolving page navigation issues, and the infinite content generation logic was repaired to eliminate errors, while additional frontend bugs were addressed for a smoother user experience. Minor updates and miscellaneous fixes were also applied, further polishing the application.; Week of 2025-09-08: This week the backend was refactored – new `http` (mod.rs, types.rs) and `stable_memory.rs` modules were added, storages, transaction, and user logic were reorganized into sub‑modules with type files, and the canister’s Candid interface was updated to a new `HttpResponse` shape and service definition. The frontend pricing page was simplified, replacing numerous conversion constants with a direct USD‑to‑ICP calculation and adjusting plan prices. A deployment helper script (`deploy.sh`) was also introduced.; Week of 2025-09-15: Added internet identity authentication support, introducing a new authentication method for users. This feature was integrated and merged into the main codebase. The change enhances security and provides an alternative login option.; Week of 2025-09-22: This week we completed the WCHL25 Regional Round feature, delivering its full frontend implementation and bringing the functionality to production. We also refreshed the site’s footer and related UI components, restructured metadata‑image handling, and updated the project’s README documentation. Minor bug fixes and polish further improve stability and the overall user experience.",dfx.json file found - indicates ICP/Dfinity project structure
Unchainers/Overworked,https://github.com/Unchainers/Overworked,3,1,1,5,"The README provides a decent amount of information about the project’s purpose and its core features, and it includes fairly detailed local‑development setup steps (prerequisites, cloning, DFX commands, npm scripts). However, it lacks several key elements that would push it into a higher rating:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: Added new OpenID configuration fields and feature‑flag options to the Internet Identity candid interface, and updated the canister init hashes accordingly. Integrated the latest Uppy file‑upload libraries into the frontend (package.json and lockfile) and adjusted related imports, while also revising the navbar to use the project logo image and preparing a mouse‑follower component. These changes expand authentication flexibility, improve file‑upload capabilities, and polish the UI.",dfx.json file found - indicates ICP/Dfinity project structure
codinersmillenium/kolabriq,https://github.com/codinersmillenium/kolabriq,2,2,1,5,"The README provides a decent overview of the project’s purpose, features, architecture, tech stack, and credits, which gives readers a high‑level understanding of what the application does and how it is built. However, it is missing several critical pieces of documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week we added a retry mechanism to the canister caller and introduced blockchain list functionality for users, projects, and tasks, improving data visibility and resilience. We also refactored and streamlined the creation, payout, and interface handling for tasks and projects, and overhauled the blockchain component to fix conceptual issues and boost reliability. Together, these changes enhance code organization, consistency, and overall platform stability.; Week of 2025-09-22: Minor updates and fixes were applied across the codebase, refining existing functionality and addressing small bugs. These improvements enhance overall stability and performance, ensuring a smoother user experience. No new features were introduced this week.",dfx.json file found - indicates ICP/Dfinity project structure
demigohu/Fintrack_new,https://github.com/demigohu/Fintrack_new.git,2,2,1,5,"The README provides a solid project overview, value proposition, and detailed feature list, which gives a clear picture of what FinTrack Protocol does. However, it lacks essential practical documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week introduced a new bridge page, refined the deposit page, removed the withdraw page, and updated transaction handling. Additionally, budgeting and goal‑setting functionality was added. Overall, the changes expand UI capabilities, streamline financial flows, and give users tools to set and track budgets and goals.; Week of 2025-09-15: Added a Kongswap implementation with ICRC‑1 support and introduced ERC‑20 balance handling, new API endpoints (CG) and front‑end updates, preparing the system for migration. Completed the core Uniswap integration, though further redesign and refinement are still required. Overall, the week focused on expanding cross‑chain swap capabilities and laying groundwork for migration while advancing Uniswap support.; Week of 2025-09-22: The week focused on documentation: the README was enriched with a detailed architecture diagram, a user‑flow diagram, updated badges, and two Mermaid files (usrflow.mmd and architecture.mmd) were added. At the same time, the bulky Bitcoin regtest data directory was pruned, deleting many test‑net files. No functional code changes were introduced, but the project now has clearer documentation and a cleaner repository.",dfx.json file found - indicates ICP/Dfinity project structure
peridotvault/peridot-onchain,https://github.com/peridotvault/peridot-onchain,3,2,1,6,"The README provides clear and functional local‑development setup instructions, including commands to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also offers useful links to external documentation and notes on environment‑variable handling for production builds. However, it lacks a concise project overview describing what *peridot_onchain* does, its purpose, or its architecture. There is no integration guide for consuming the canisters from other projects, nor any contribution guidelines (e.g., how to submit issues or pull requests, coding standards, testing procedures). While the formatting and grammar are generally good, the omission of a project description and contribution information prevents it from being a comprehensive README. Hence it falls into the “fair” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we shipped a functional AI chatbot with a revamped overlay UI, floating‑action‑button launch, form‑submission handling, and backend HTTP outcall support for external communication. We also added the initial AI smart‑contract scaffolding, updated the DFX development environment, and improved navigation and the index page of the project documentation. Together these changes boost user interaction, enable server‑side integration, and lay the groundwork for AI‑driven contract features.; Week of 2025-09-15: This week the team integrated a new AI canister (peridot_ai) by adding its ID and building full chat functionality into the frontend, including a new AiChat component, state handling, and calls to peridot_ai.chat. They also refined the UI—making the AI section and landing page responsive, updating version labeling, adding a coin image asset, and extending Tailwind with a custom large font size—while removing the old floating chat button component. These changes collectively deliver a functional on‑chain AI chat experience and improve the overall visual polish.",dfx.json file found - indicates ICP/Dfinity project structure
Xdxsoul/design-guardian,https://github.com/Xdxsoul/design-guardian,2,2,1,5,"The README provides a solid high‑level overview of the project—its purpose, problem statement, proposed solution, and goals—along with many external links (pitch decks, demos, roadmap, videos). However, it lacks the core technical documentation elements required for a developer or contributor to get started. There are **no setup or installation instructions** for running the project locally, no description of required dependencies, build steps, or how to launch the application. An **integration guide** (e.g., how to use the ICRC‑7 NFT API, connect to the 3D simulator, or integrate with other platforms) is absent. There is also **no contribution guideline** (code of conduct, pull‑request process, testing instructions, etc.). While the structure and formatting are generally clear and the grammar is acceptable, the missing practical documentation makes the README insufficient for developers or open‑source contributors. Hence it falls into the “Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: A publish modal was added to the DesignCard view, enabling users to easily publish designs directly from the card interface. Additionally, draw‑io integration was incorporated into the Design Pattern feature, allowing diagram creation and editing within the application. Together, these updates enhance the design workflow and streamline publishing and visual modeling capabilities.; Week of 2025-09-22: This week we added a new gallery component that displays images in a structured layout, expanding the app’s media capabilities and enhancing the user experience. We also applied a series of minor updates and bug fixes to polish existing features and improve overall stability. Together, these changes boost visual content browsing while refining the app’s reliability.",dfx.json file found - indicates ICP/Dfinity project structure
zephyrzth/whcl-2025-momus,https://github.com/zephyrzth/whcl-2025-momus,0,1,1,2,No documentation assessment provided.,"1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-08: Implemented a new “Usage” page that displays a chart of the current month’s metered ICP usage and daily transaction totals, adding a route, view component, navigation button, and supporting services (including chart.js and react‑chartjs‑2) to the frontend. Extended the backend with helper functions and canister definitions (icp_ledger_canister and icp_index_canister) to fetch debit transfer data from the ICP Index canister, and updated the deployment script and dfx configuration accordingly. Minor refactors and fixes were applied across services, type definitions, and client‑agent constants.",dfx.json file found - indicates ICP/Dfinity project structure
stanlys96/Engramind-ICP,https://github.com/stanlys96/Engramind-ICP,2,0,1,3,"The README provides a general description of the Engramind concept, demo links, screenshots, and a high‑level overview of how the AI persona technology works. However, it lacks essential technical documentation:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
ArksRWA/ArksRWA,https://github.com/ArksRWA/ArksRWA,3,0,1,4,"The README provides solid local‑development setup instructions – it shows how to start the replica, deploy canisters, generate the candid interface, and run the frontend server, plus a helpful note on environment variables. However, it lacks a substantive project description (beyond a generic welcome message) and does not include any integration guide, API usage examples, or contribution guidelines. The overall structure and formatting are clear, but the documentation is missing several key elements that would move it from “fair” to “good.” Consequently, it meets the basic criteria for a functional README but falls short of a comprehensive guide.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
poggufanz/dao-tools,https://github.com/poggufanz/dao-tools,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Implemented version 1 of role‑based access control (RBAC), enhancing permission management across the platform. Added a new voting system with a feature‑lock mechanism to control access to voting functionality. These changes improve security and introduce structured user interaction capabilities.; Week of 2025-09-22: Added a new feature (unspecified) to the project.",dfx.json file found - indicates ICP/Dfinity project structure
IC-DAPPS/BitcoinUSTbills,https://github.com/IC-DAPPS/BitcoinUSTbills,2,3,1,6,"The README provides a clear high‑level description of the project’s purpose, its unique value proposition, and a comparison with other platforms. The formatting (headings, tables, emojis) is clean and the language is mostly grammatical. However, it is missing several critical sections required for a well‑rounded technical README:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we added the file‑store‑bucket package to the monorepo, introduced CI/CD GitHub Actions workflows that automate builds, tests, deployments, and generate/commit API documentation (bumping the project to 0.1.1). We also hardened the documentation pipelines—adding path/file existence checks, URL fallbacks, validation steps and debug logging for the mo‑doc build and making the Pages setup/upload steps tolerant to errors—resulting in more reliable releases and smoother developer onboarding.; Week of 2025-09-08: This week we introduced Playwright as the new end‑to‑end testing framework, configuring it for parallel execution on a Chromium‑only browser and integrating it into the GitHub Actions workflow alongside CI steps that build, deploy, and verify the frontend canister. The CI/CD pipeline was further hardened with streamlined Mops installation, Rust target setup, version checks, directory logging, and automatic Clippy fixes, while backend code in `guard.rs` and `utils.rs` was refactored for simpler error handling and better readability. Minor dependency updates and assorted fixes round out the improvements, boosting test reliability, build stability, and overall code maintainability.; Week of 2025-09-15: This week we added a complete ckBTC deposit flow that validates and stores deposits, mints corresponding OUSG tokens, and introduces new Deposit types, storage structures, and a backend `notify_deposit` method, along with an EVM RPC deployment command and updated dfx configuration for custom ledger and index settings. We also implemented ERC‑20 token transfer support with a `transfer_erc20_tokens` function (including EIP‑1559 signing), added Ethereum address retrieval via `get_eth_address`, and expanded tests and dependencies. Together these changes provide reliable cross‑chain asset handling, streamlined deployment, and core token‑transfer capabilities for the platform.; Week of 2025-09-22: This week added EVM RPC support and delivered the complete Bitcoin‑UST Bills core, introducing full deposit processing, balance validation, transfer confirmation with block‑index tracking, ckBTC‑to‑OUSG conversion, comprehensive error handling, structured logging, testing infrastructure, and related bug fixes. The local deployment script for the OUSG ledger was also upgraded with clearer echo feedback, updated fee structures, and proper retrieval of principals and canister IDs. Together, these changes expand cross‑chain functionality, improve observability, and make local ledger deployment more reliable.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/suDAO-WCHL,https://github.com/suDAO-WCHL,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
Anant-Kumar-Jain/Nebula-Wallet,https://github.com/Anant-Kumar-Jain/Nebula-Wallet.git,0,1,0,1,No documentation assessment provided.,1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Minor updates and fixes.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Sipaling-SKS/resumid,https://github.com/Sipaling-SKS/resumid,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
SpaceCoupe55/LastPing233,https://github.com/SpaceCoupe55/LastPing233,3,0,1,4,"The README provides a solid project overview, feature list, and architecture description, and it includes some setup instructions (prerequisites, cloning, installing dependencies, and starting a local replica). However, the setup section is incomplete—the `dfx start --` command is truncated and there are no further steps for building, deploying the canisters, or running the frontend locally. There is no integration guide for developers who might want to use the token or the inheritance API in other projects, and there are no contribution guidelines, testing instructions, or deployment notes. The overall structure and formatting are clear and the grammar is good, but the missing detailed development and contribution information keeps the documentation at a “fair” level rather than “good” or “excellent.”",0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
bessho/willwisher,https://github.com/bessho/willwisher,2,0,1,3,"The README provides a high‑level product pitch (problem, solution, market, features, business model, roadmap, and some technical notes) but it does not serve as technical documentation for developers. It lacks essential elements such as:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
webstriiix/encrypted_notes,https://github.com/webstriiix/encrypted_notes,3,2,1,6,"The README provides a solid project overview, clear feature tables, and a nice visual architecture diagram, which gives readers a good sense of what VaultNotes does and its core philosophy. It includes a “Quick Start” section with prerequisites and the first few commands needed to clone the repo, start a local Internet Computer replica, and begin deployment, so basic local‑development setup is partially covered.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week the backend was expanded with a full AI‑enhanced semantic‑search layer, introducing new Candid types (ContentAnalysis, SemanticSearch, AbstractSummary) and corresponding Rust structs and service functions, plus storage for encrypted user search indexes. The frontend received a suite of new AI search components, hooks, and integration wrappers (AIEnhancedSearch, SearchIntegration, useSemanticSearch, etc.) that expose multi‑mode, language‑aware search and result handling in the notes UI. Documentation, dependency lists, and build configs were updated to reflect the new AI features and the added `@dfinity/vetkeys` library.; Week of 2025-09-15: This week introduced NFT minting for notes and began integrating Bitcoin payment support, while also adding a comprehensive AI service layer that provides intelligent content processing, personalized search, and user‑learning features compatible with the IC platform. Existing AI functionality was refined and bugs were fixed. Together, these changes expand the platform with blockchain capabilities and AI‑driven enhancements.; Week of 2025-09-22: Added a new `canister_ids.json` file and cleaned up `dfx.json` by removing unused ledger canister definitions. Updated the Navbar to import the logo as a module instead of a hard‑coded path and introduced loading state handling (including a spinner) for note deletion and NFT minting in the Notes and UpdateNote components. These changes streamline the project configuration and improve the UI feedback during note‑related actions.",dfx.json file found - indicates ICP/Dfinity project structure
KaizenOrg/kaisen,https://github.com/KaizenOrg/kaisen,4,1,1,6,"The README provides a strong general project description, clear solution overview, and detailed core feature explanations, all well‑structured with headings, images, and a helpful table of contents. However, the excerpt does not include explicit **setup instructions for local development**, **integration guides**, or **contribution guidelines**—sections that are essential for a 5‑star rating. The presence of those sections in the table of contents suggests they may exist later in the document, but without seeing them we cannot confirm their completeness or clarity. Grammar and formatting are good, and the overall structure is logical, but the missing visible implementation details prevent a perfect score. If the omitted sections are comprehensive, the score could rise to a 5. As presented, the documentation is solid but not fully complete.",1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Minor updates and fixes.,dfx.json file found - indicates ICP/Dfinity project structure
rodweleo/neuroverse-studio,https://github.com/rodweleo/neuroverse-studio,2,3,1,6,"The README provides a decent high‑level project description (overview, background, features) and useful links to the live canisters and presentations. However, it lacks the essential practical documentation needed for developers:","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week added full token‑transfer support to the dashboard, including a new TokenTransferModal component, UI buttons for sending/receiving/history, and corresponding ledger canister entries (ICP and ckETH) in dfx.json. Backend canisters now expose deleteAgent and deleteTool functions, while the frontend received agent‑deletion UI, updated hooks (including a useUserDeleteAgent mutation), a loading fallback component, and numerous UI refinements (renamed routes, improved cards, badge styling, and service file renames). Together these changes expand financial interactions, give users the ability to remove agents/tools, and improve overall responsiveness and consistency of the Neuroverse Studio app.; Week of 2025-09-08: This week introduced a full document‑management backend (new Motoko types for files, vetkeys, and NFTs plus file upload/download services) and corresponding frontend services, UI components, and type definitions to handle uploading, downloading, and whitelist management. The UI was refreshed across the layout, index page, and auth button (added footer, responsive headings, redesigned hero section, and improved token‑transfer modals) and integrated ICP ledger transfers via a new `IcpLedgerCanister` utility with mutation hooks. Dependency updates added the `@dfinity/vetkeys` package and optimized the backend canister for cycles.; Week of 2025-09-15: This week we added token‑transfer functionality—including an account‑to‑account transfer hook and refined token‑formatting utilities—while enhancing agent creation with a reset function, tool selection, and tighter payment‑modal integration featuring better error handling, UI tweaks, and SEO‑focused meta‑tag updates. We also introduced the Aurora component, a customizable dynamic gradient background with adjustable color stops, amplitude, and blend properties, which was applied to the CallToAction section and the Index page along with new CSS utilities for gradient text and backgrounds. Together, these changes improve core payment workflows, streamline agent tooling, and significantly boost the site’s visual design and interactivity.; Week of 2025-09-22: This week a new HeroSection (with an Orb UI component) was added to the front‑end and the main page was refactored to use it, while the token‑transfer modal and query keys were updated for consistency. Authentication and token handling were overhauled: the code now uses `IcrcLedgerCanister` with dynamic identity/host creation, adds dev‑mode safeguards for Plug and NFID, and updates host URLs and the identity provider URL. Overall, these changes refresh the UI, tighten security, and streamline ledger interactions across the app.",dfx.json file found - indicates ICP/Dfinity project structure
abya-university/abya-passport,https://github.com/abya-university/abya-passport,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
rahulrr-coder/karbyn,https://github.com/rahulrr-coder/karbyn,4,2,1,7,"The README provides a solid project description, clear motivation, and a concise overview of the platform’s purpose and key features. Setup instructions for local development are well‑covered: prerequisites, cloning, installing dependencies, starting the ICP replica, deploying canisters, and running the dev server are all listed with exact commands. The architecture section gives a quick tech stack snapshot, and the use‑case section helps readers understand potential integrations.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The week focused on replacing the Web3Auth and biometric verification stack with a streamlined NFID‑based authentication system: a new NFID_AUTH_GUIDE.md was added, AuthButton and related UI components were refactored to use SimpleAuthContext, and all Web3Auth, biometric services, and related pages were removed. Additional UI improvements include new lazy‑loaded AI and chart components, migration from Next.js links to react‑router‑dom, and Vite chunk‑splitting optimizations. These changes simplify the login flow, reduce dependencies, and prepare the app for lighter, more maintainable front‑end performance.; Week of 2025-09-15: Implemented functional authentication and added Metamask-based login, enhancing the app’s user authentication capabilities.; Week of 2025-09-22: This week added backend support for NGOs and carbon‑offset claims (new NGOProfile and Claim structs) and introduced a suite of new frontend pages—Submit Project, Projects Listing, Project Details, an enhanced Marketplace, and an Admin‑panel placeholder—along with routing updates and UI components such as ClaimSubmissionForm, ProfileDropdown, and PostLoginRegistrationModal. The Header and LoginButton were refactored to display a profile dropdown for authenticated users, and the project‑submission flow was expanded with tree‑specific fields and per‑user local‑storage persistence. Together these changes extend the app from basic authentication to full NGO registration, project creation, claim handling, and marketplace interaction.",dfx.json file found - indicates ICP/Dfinity project structure
Kazeth/DigiPurse,https://github.com/Kazeth/DigiPurse,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The landing page UI received an initial redesign, updating its layout and visual elements. Font changes were added to improve overall typography and readability across the application.; Week of 2025-09-15: This week the UI was refreshed: the About Us page got cleaner data formatting and a GitHub icon, while the Landing page received a new feature carousel with gradient cards, a marquee component and the Coins icon, powered by the newly added **react‑fast‑marquee** library. The Support page was enhanced with initial bot messages, saved‑chat state and extra icons for richer interaction. Overall, these changes improve visual appeal and user experience across the main frontend pages.; Week of 2025-09-22: Implemented a UI/UX redesign for the DigiTicket interface, including updated homepage elements and document count displays. Added a backend and front‑end history feature that tracks when users add or remove documents. These changes enhance the user experience and provide an audit trail for document actions.",dfx.json file found - indicates ICP/Dfinity project structure
Jayesh45-master/jarvis,https://github.com/Jayesh45-master/jarvis,3,0,1,4,"The README provides a fairly comprehensive project description, feature list, technology stack, folder layout, and fairly detailed local‑development setup steps (cloning, installing frontend and backend dependencies, creating a .env file, and how to run each part). It also includes a usage guide and a future roadmap, which are helpful for users.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Ma7moud12975/ATOS-fit,https://github.com/Ma7moud12975/ATOS-fit/tree/main,2,2,1,5,"The README provides a nice overview of the project’s purpose, key features (decentralized deployment, privacy‑first processing), technical stack, and a visual list of supported exercises. The formatting is clean and the markdown tables display correctly, which aids readability.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a file‑upload feature, adding an upload interface, integrating the component into the main UI (index.jsx), and documenting the capability in the README. Minor updates and fixes were also applied, refining existing functionality and improving overall project stability.; Week of 2025-09-15: This week we renamed the Exercise Library to “Exercises,” refreshed its icons, and updated the README documentation to reflect the changes. We also delivered a series of minor updates and bug fixes across the codebase. Together, these improvements enhance visual consistency, usability, and overall stability.; Week of 2025-09-22: Minor updates and fixes",dfx.json file found - indicates ICP/Dfinity project structure
Oansa/Celestial,https://github.com/Oansa/Celestial,2,1,1,4,"The README provides a fairly detailed general description of the project’s purpose, visual design, and authentication flow, which satisfies the “project description” criterion. However, it lacks essential documentation elements required for a higher rating:",1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Minor updates and fixes.,dfx.json file found - indicates ICP/Dfinity project structure
Sid31/vram-synth,https://github.com/Sid31/vram-synth,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
AlBasyaar/Web3-Skillsnap-dapp,https://github.com/AlBasyaar/Web3-Skillsnap-dapp,2,2,1,5,"The README provides a decent high‑level project description, visual screenshots, and links to external resources (documentation, pitch deck, demo video). However, it lacks essential developer‑oriented information: there are no clear setup or installation instructions for running the project locally (the “Requirements” section is cut off), no integration or usage guide, and no contribution guidelines or code of conduct. The overall structure is fragmented, with some formatting issues (e.g., broken emoji, missing list numbering). Grammar is generally understandable but the incomplete sections and missing key elements make the documentation insufficient for developers to get started or contribute.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added Dockerfile and docker‑compose.yaml to enable containerized development and deployment. Enhanced the authentication form to create a DFINITY HttpAgent and backend actor using the logged‑in Internet Identity, exposing it via `window.skillsnap_backend`. These changes introduce backend connectivity for authenticated users and provide a reproducible Docker environment.; Week of 2025-09-08: This week added protected routing (ProtectedRoute) and introduced two new pages—Profile and Recommendation—along with updated navigation links in the Navbar and Sidebar to expose them. The authentication flow was refined (AuthForm now redirects after registration) and the PersonalityAssessmentForm was enhanced with html2canvas/file‑saver for exporting results and a corrected backend call. Together, these changes improve user access control, expand functionality, and streamline data handling.; Week of 2025-09-15: This week we delivered core functionality for AI chat, course management, and a new authentication system, complete with the necessary backend support. The UI was refined—updating the menu profile and adding dedicated sections for AI, dashboard, job, and profile—while minor clean‑ups, bug fixes, and README documentation were also completed. These enhancements introduce key features, improve user navigation, and increase overall system stability.; Week of 2025-09-22: This week the README was extensively revised: new screenshots were added, the project overview and feature list were expanded, and links (including the demo video) were corrected and reformatted. No source code files were added, removed, or changed, so the updates are documentation‑only.",dfx.json file found - indicates ICP/Dfinity project structure
syahiidkamil/living-internet-protocol,https://github.com/syahiidkamil/living-internet-protocol,4,1,1,6,"The README provides a solid overview of the Living Internet Protocol project, clearly outlining its purpose, key features, and technology stack. It includes comprehensive local development setup instructions (prerequisites, cloning, dependency installation, local replica start, canister deployment, and frontend server launch) and details on testing and deployment for both local and mainnet environments. The “How It Works” section explains the verification flow, NFT minting, and forum demo, giving readers a functional understanding of the system. A contribution link is provided, satisfying the contribution‑guidelines criterion.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week added three new front‑end pages—**SocialMediaDemo**, **MerchantDashboard**, and a standalone **CaptchaWidget**—and updated the main App component to route to them, including a query‑parameter “widget” mode that renders only the widget. New navigation buttons for the demo and dashboard were introduced, and the default view was switched to the demo page. These changes broaden the UI with a social‑media showcase, a merchant admin interface, and an embeddable widget, enhancing the app’s functionality beyond its original playground, forum, and marketplace pages.",dfx.json file found - indicates ICP/Dfinity project structure
arincantikam26/i-GuardX,https://github.com/arincantikam26/i-GuardX,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
HEFIN01/HEFIN-01,https://github.com/HEFIN01/HEFIN-01,3,1,1,5,"The README provides a solid project overview, clear architecture description, and fairly detailed local development/setup instructions (prerequisites, starting the replica, installing frontend dependencies, building and deploying, and how to access the app). It also outlines basic usage and future improvement ideas. However, it lacks explicit contribution guidelines (e.g., how to submit issues or pull requests) and does not give a thorough integration guide for any external services (the brief mention of MongoDB and Docker is incomplete). The formatting is a bit inconsistent (mixed heading styles, stray symbols) and could be cleaned up for better readability. Overall, the documentation covers the essential basics but misses several key elements, placing it at a “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we established a full containerized project scaffold with a Dockerfile, docker‑compose.yml, and updated README, and migrated the backend from Node.js to an Internet Computer setup by adding dfx.json, a Motoko canister (cannister.mo/main.mo) and its interface definition (hefin.did). Legacy Node.js files were removed and a new server.js was introduced, laying the foundation for the new Motoko‑based canister. Minor updates and bug fixes were applied throughout.",dfx.json file found - indicates ICP/Dfinity project structure
Ujjwal-sinha/InsureBTC,https://github.com/Ujjwal-sinha/InsureBTC,1,0,1,2,"The README contains only a brief canister URL and a list of frontend API endpoints with their parameters and return values. It lacks a general project description, any setup or installation instructions for local development, contribution guidelines, or broader integration guidance. The structure is minimal, and there are several typographical errors (e.g., “Tkes”). Overall, the documentation provides only the most basic information and does not meet any of the key criteria for a usable README.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
avi1967/ChainMail,https://github.com/avi1967/ChainMail.git,3,0,1,4,"The README provides a clear and attractive project overview, feature list, screenshots, and a tech‑stack table, which gives readers a good sense of what ChainMail does and how it’s built. The formatting and grammar are generally solid, and the visual assets enhance readability.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Afarisphi/white-binder,https://github.com/Afarisphi/white-binder,0,0,1,1,No documentation assessment provided.,0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
DiegoFloresWenHao/ICP_Coder,https://github.com/DiegoFloresWenHao/ICP_Coder,3,2,1,6,"The README provides a solid project overview, clear prerequisites, and step‑by‑step setup instructions for creating a virtual environment, installing dependencies, configuring environment variables, and ingesting documentation and code samples. It also outlines how to start the authentication service and register a user, which covers the core local‑development workflow.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented Motoko documentation ingestion and indexing by adding clone_motoko_docs.py, a new motoko_docs_ingester, updating the README, and refactoring the RAG pipeline (MCP_Server and rag modules) to use a project‑root ChromaDB instance and shared base utilities. Added a persistent chat‑history feature to the API, introducing Conversation models, a SQLite conversation repository, context‑injection chain handling, and updated imports and schema initialization in api_server.py. These changes broaden the knowledge base beyond code samples and enable stateful, context‑aware conversations.; Week of 2025-09-15: This week we added a validated API‑key creation endpoint to the MCP server and introduced an automated cronjob for ingesting Motoko repositories. The MCP server was refactored and integrated with the Cursor tool, enhancing its functionality and maintainability. Additionally, the API server was refactored to prepare for future integration with the IC‑Vibe‑Coding‑Template‑Motoko, laying groundwork for new template support.; Week of 2025-09-22: The legacy MCP server files (`MCP_Server/README.md`, `mcp_server.py`, `test_mcp.py`) were removed and the project README was expanded to introduce a new MCP Server overview, updated feature list, and clearer setup instructions. The example MCP server configuration was also enhanced to include an `API_KEY` header for authentication. Overall, the week focused on cleaning up old code and improving documentation and config guidance for the MCP server.",dfx.json file found - indicates ICP/Dfinity project structure
BeGods/ICP-HACKATHON,https://github.com/BeGods/ICP-HACKATHON.git,2,2,1,5,"The README provides a decent high‑level overview of the project and a clear directory tree, which helps readers understand the overall architecture. However, it lacks essential practical information. There are no explicit setup or installation steps for getting the frontend, backend, or on‑chain components running locally, nor any guidance on required tools, environment variables, or how to use the provided scripts. Integration instructions (e.g., how to connect the game launcher to a wallet or how to deploy the canisters) are missing. There is no section on how contributors should get involved, submit pull requests, or follow coding standards. While the document is fairly well‑formatted and free of major grammatical errors, the absence of these critical sections makes it incomplete for developers and contributors. Consequently, it falls into the “Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added a LICENSE.txt and NOTICE.txt to introduce the FrogDogGames Public License (FDGPL) for the project, and updated the README.md to include a new “License” section linking to the license file. No code or functional changes were made beyond documentation. This primarily formalizes the project's legal terms without altering existing features.; Week of 2025-09-15: This week added a new booster‑NFT claim flow and expanded cross‑collection NFT handling by introducing token‑index mapping, a BoosterInfo type, stable storage for collection canisters, and backend APIs such as debug_getTokenIndexMapping and userNFTsAllCollections. Front‑end components (NftCard, BuyNft, collection details) were refactored to use the new APIs, log token IDs, and support the booster claim, while scripts were updated to create a burner identity for testing. Together these changes improve NFT management, debugging, and introduce the booster‑NFT feature.; Week of 2025-09-22: Added a Rust‑based game‑agent canister to enable on‑chain game logic and updated the marketplace UI with a new NFT‑burn interface, enhancing token lifecycle management. Minor updates and bug fixes were also applied across the codebase. Together, these changes broaden the platform’s gaming capabilities and improve the overall user experience.",dfx.json file found - indicates ICP/Dfinity project structure
research-ag/hosty-live-fe,https://github.com/research-ag/hosty-live-fe,2,0,1,3,"The README provides a brief project description (“template provides a minimal setup to get React working in Vite”) and a useful section on extending the ESLint configuration, including concrete code snippets. However, it lacks essential documentation elements:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
riyqnn/Medical,https://github.com/riyqnn/Medical,3,2,1,6,"The README provides a solid project description, outlining the problem, the solution, key features, and the tech stack. It also includes links to a demo video and pitch deck, and uses clear headings and emojis for visual structure. However, it lacks essential elements such as setup instructions for running the project locally, any integration or usage guide, and contribution guidelines. Without these, developers cannot easily get the project up and running or know how to contribute, which are critical for comprehensive documentation. Grammar and formatting are generally good, but the missing practical guidance keeps the overall quality at a “fair” level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The week’s work focused on substantially expanding and polishing the project documentation: the README was rewritten to include a richer overview, mission, problem/solution sections, demo‑video and pitch‑deck badges, a flowchart image, and detailed architecture explanations. No code files were added, removed, or altered, so the functional features of the application remain unchanged. Overall, the changes improve project presentation and clarity for users and stakeholders.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
Yohanpau/DueMinder,https://github.com/Yohanpau/DueMinder.git,2,2,1,5,"The README fragment provides some ad‑hoc setup steps (installing dependencies, creating a .env file, running the server) but lacks a clear project description, overview, or purpose. It focuses heavily on a specific PDF‑parse error and even instructs editing files inside node_modules, which is not a standard or recommended practice. There are no integration guides, contribution guidelines, or organized sections (e.g., Prerequisites, Installation, Usage). Grammar and formatting are inconsistent, with stray symbols and unclear instructions. Overall, the documentation is incomplete and poorly structured, resulting in a low rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented a new payment system by adding a `Payment` model to the Prisma schema, extending the `Bill` model with `status` and a `payments` relation, and creating a full Payment module (controller, service, DTO, tests) that’s now imported in `AppModule`. Updated the Bills service to set default bill status, include payment histories in queries, and handle related data. These changes introduce payment tracking functionality and enhance bill management throughout the backend.; Week of 2025-09-15: This week we added a History page with smooth page‑transition effects and introduced a new payment‑method workflow complete with confirmation modals, enhancing navigation and checkout functionality. We also refined existing UI components by fixing edit and delete modals, simplifying routing logic in protectedroutes.jsx, and applying spacing tweaks, animations, and various bug fixes for a more polished look and feel. These updates collectively improve user experience, streamline interactions, and increase confidence during transactions.; Week of 2025-09-22: This week we applied a series of minor updates and bug fixes throughout the codebase. Additionally, we introduced a new feature that evaluates whether a bill is paid on time, merging the Development and yohan branches to integrate this functionality and related enhancements. The changes collectively improve the billing module by adding timeliness checking while polishing existing functionality.",dfx.json file found - indicates ICP/Dfinity project structure
divin3circle/optic,https://github.com/divin3circle/optic,3,2,1,6,"The README provides a solid high‑level overview of the project – a clear description, key features, a table of contents, and sections on architecture and the “Web3 Way” concept. The structure is well‑organized and the formatting/grammar are good. However, the essential practical details are missing from the excerpt: the “Quick Start” section lists subsections (Prerequisites, Installation, Development, Troubleshooting) but no actual commands or step‑by‑step instructions are shown, and there is no contribution guide, code of conduct, or instructions for integrating the library into other projects. Because the documentation covers the project description and overall architecture but lacks the detailed setup and contribution information needed for developers to get started or contribute, it falls into the “fair” range.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week a new **JoinGroup** page and route were added, and the GroupProfile component now includes a copy‑invite‑link button that generates a shareable URL. Several hooks (user, chats, group chat messages, personal chat rooms) were enhanced with `refetchInterval` and `staleTime` settings for fresher data, and a new `useGetChatRoom` hook was introduced. A minor consistency fix was also made to an error message in `usePersonalChatRooms`.; Week of 2025-09-15: This week the chat system was extended to support media attachments: a new `mediaUrl` field was added to the message types on both the backend and frontend, the backend `send_personal_message` method now accepts an optional media URL, and a `MediaModal` component with portal rendering was introduced to display images in `MessageBubble`. The frontend now uses the `use‑file‑picker` library (added to dependencies) to select, convert, and upload images via a new `useMediaCanister` hook, clearing the media URL after sending and showing thumbnails in the chat UI. Additional tweaks include removing aggressive refetch intervals, minor UI styling updates, and console‑logging for debugging.",dfx.json file found - indicates ICP/Dfinity project structure
YANSHdiv/Automated-Ac-For-Smart-Home,https://github.com/YANSHdiv/Automated-Ac-For-Smart-Home,3,1,1,5,"The README provides solid local‑development setup instructions: it explains required dependencies (Tkinter), shows how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also includes useful notes on environment‑variable handling for production builds.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: The week introduced a complete Motoko backend for the Automated AC project, adding a new `smart_ac_backend_project` directory with a canister source (`src/smart_ac_backend/main.mo`), configuration (`dfx.json`), and data files (`memory.json` and `automated_AC`). The original placeholder README was replaced with a detailed, feature‑rich description, and the old backend README was deleted and recreated to reflect the new architecture. Overall, the changes transform the repository from a minimal stub into a functional full‑stack application with persistent storage and comprehensive documentation.",dfx.json file found - indicates ICP/Dfinity project structure
Mercatura-Developers-Team/Mercx,https://github.com/Mercatura-Developers-Team/Mercx.git,3,2,1,6,"The README provides a solid general description of the MercX platform, its problem domain, key features, and business impact, and it is well‑structured with clear headings and good grammar. However, it lacks essential practical information: there are no setup or local development instructions, no integration guide for developers wishing to use the canisters or APIs, and no contribution guidelines for potential collaborators. Because the documentation covers the high‑level overview but is missing these critical elements, it falls into the “basic documentation present but missing some important elements” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week we delivered several minor updates and bug fixes across the codebase, refining existing functionality and improving stability. The changes enhance performance and address user‑reported issues, resulting in a smoother overall experience.; Week of 2025-09-22: This week the backend was updated to use the correct canister IDs for MercX and KYC and the pool‑analytics storage logic was refactored for cleaner snapshot handling. The frontend received a visual overhaul: a new particle‑background component (HomeBg.jsx) using the added ogl library, a redesigned “features” grid on the Home page, a ProtocolStats component integrated into the Pools view, and snapshot recording in PoolAnalyticsCharts was switched to a per‑pool approach; minor UI tweaks such as a higher‑z‑index Navbar were also applied. Overall, these changes improve integration reliability, add fresh UI elements, and enhance analytics functionality.",dfx.json file found - indicates ICP/Dfinity project structure
CoFi-Xyntra/copilot-finance,https://github.com/CoFi-Xyntra/copilot-finance,3,0,1,4,"The README provides a clear and well‑formatted general description of the project, outlining its purpose, high‑level capabilities, and key features. The language is concise and the use of emojis and sections makes it easy to read. However, it lacks critical technical documentation: there are no setup or installation instructions for developers who want to run the project locally, no guide on how to integrate the assistant into other applications, and no contribution guidelines (e.g., how to submit issues or pull requests, code style, testing procedures). Without these elements, the documentation is only a basic overview rather than a complete developer‑oriented guide, which is why it falls into the “Fair” category.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Bonded2/Bonded-App,https://github.com/Bonded2/Bonded-App,4,1,1,6,"The README provides a solid overview of the Bonded app, including a clear project description, architecture diagram, feature list, and tech‑stack details. It offers comprehensive local‑development setup instructions (prerequisites, cloning, dependency installation, starting a local ICP network, deploying the canister, generating declarations, and running the frontend). Deployment steps and a quick‑deploy guide are also included. Contribution guidelines are present and the repository structure is well‑documented.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: This week a new backend endpoint `get_timeline` was added with a matching `fetchTimeline` method in the frontend API service, and two utility modules (AI CDN loader and Node polyfills) plus a `fix-dev-issues.sh` script were introduced. Numerous UI components were updated to use a unified, larger, responsive back‑button design with improved styling, hover effects, and media‑query breakpoints. The registration flow was refined to correctly reuse the authenticated API instance and the login logo was switched to the gray version.",dfx.json file found - indicates ICP/Dfinity project structure
VishalVermaa01/verdictXR,https://github.com/VishalVermaa01/verdictXR,4,2,1,7,"The README provides a clear project overview, outlines the main modules, and includes a concise project structure. It offers functional local‑development setup instructions for both the ICP backend and the React/WebXR frontend, and a usage flow that guides a new user through authentication, trial creation, evidence upload, and interacting with the AI judge. It also points to the AI prompt template and includes brief hackathon/demonstration notes.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week we added new Privacy and Terms of Use pages and delivered a complete redesign of the virtual courtroom, overhauling its UI and interaction flow while consolidating earlier scene changes. The frontend was refreshed with an upgraded theme and updated logic, improving visual consistency and overall behavior. Together, these updates boost compliance, streamline the courtroom experience, and provide a more polished, user‑friendly interface.; Week of 2025-09-22: This week the VR courtroom was expanded with new Three.js modules (Characters, CourtroomGeometry, CourtroomControls) that are now imported in CourtroomVRFullPage, and the Dashboard component was enhanced to persist trial state via sessionStorage, receive a dark animated UI style, and navigate back to “/dashboard”. A new standalone “newCourtfrontend” folder containing HTML, CSS, JS, and package files was added, and the project’s dependencies were updated to include @types/three, the latest three v0.180.0, and related libraries. These changes improve the immersive experience, add state‑management across sessions, and lay groundwork for a separate frontend implementation.",dfx.json file found - indicates ICP/Dfinity project structure
Unknowners/notonlybitcointips,https://github.com/Unknowners/notonlybitcointips,3,1,1,5,"The README provides a clear project structure, deployment commands, and brief overviews of the backend and frontend functionalities, which gives readers a basic understanding of what the project does. It also includes a simple contribution workflow, licensing information, and support links.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented secure session storage with automatic loading, timeout handling, and logout cleanup. Added a local ICP Ledger canister for development testing, updated deployment configuration to use the mainnet ledger and removed the extra canister, and introduced comprehensive logging and validation for ICP withdrawals. Refactored the withdrawal flow to eliminate redundant balance checks, relying on frontend limits and the ledger’s own validation, simplifying the backend logic.",dfx.json file found - indicates ICP/Dfinity project structure
DeTrustLabs/escrow-protocol,https://github.com/DeTrustLabs/escrow-protocol,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
sorbadek/micha,https://github.com/sorbadek/micha,4,0,1,5,"The README provides a solid overview of the project, including a clear description of Peerverse’s purpose, key features, business model, and vision. The local development setup is thorough, listing prerequisites, step‑by‑step installation commands for both the backend and frontend, instructions for configuring canister IDs, and how to run the application locally. The structure is logical with appropriate headings, and the markdown formatting makes it easy to read.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
WCHL25/transkripin,https://github.com/WCHL25/transkripin,4,2,1,7,"The README provides a solid project overview, clear feature list, and a well‑structured tech‑stack section. It includes practical setup instructions for local development: installing FFmpeg, downloading the Whisper model, cloning the repo, running the Rust transcribe service, starting the ICP replica, and deploying canisters. The formatting is clean and the language is clear.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Added new backend API queries `get_final_result` and `list_user_final_results` (and corresponding declarations) to expose final transcription/summarization results per user. Refactored the upload module by extracting transcription‑related helpers into a dedicated `service` package (renaming and moving `call_ollama.rs`/`call_transcription.rs`, adding `fetch_transcription.rs` and a service index) and simplifying the `get_transcription_status` logic. Minor frontend tweaks (console logging, semicolon fix) and a small change to the canister ID environment handling accompany the core updates.; Week of 2025-09-15: We added a chunk‑based in‑memory upload system with a new artifact that stores bookmark‑status metadata, and introduced UI upgrades such as lazy‑loading, empty‑data messaging, bookmark toggling, searchable and filterable artifact lists, plus new frontend sections (Explore, My Work, saved‑work). Transcription now delivers segmented, seekable output and artifact handling was expanded with file‑search, auto‑generated titles, enhanced detail pages, while backend stability was improved by fixing errors, removing the use‑debounce package, and refactoring save‑final‑result logic. Together these changes boost performance, enrich user workflows, and increase overall reliability.; Week of 2025-09-22: This week we introduced a chunked file‑upload system with frontend chunk retrieval and backend finalization, added new UI features such as a file‑loading capability, a responsive “recent work” layout, toggleable saved‑works/explore views, bookmark and share buttons on work‑detail pages, and an access‑check for private artifacts. Existing components were refined—including the audio interface, title updates, debounce handling, and data‑type handling—while the upload infrastructure was hardened by separating file chunks into stable memory and fixing build‑script paths and error‑signature issues. Together these changes boost usability, responsiveness, and overall stability of the platform.",dfx.json file found - indicates ICP/Dfinity project structure
AmaanSayyad/apt-casino-motoko,https://github.com/AmaanSayyad/apt-casino-motoko,2,1,1,4,"The README provides a clear project overview, feature list, architecture details, and game mechanics, which gives readers a good sense of what the APT‑Casino does and how it’s built. However, it lacks essential practical information. There are no setup or installation instructions for running the project locally (e.g., cloning the repo, installing dependencies, building the Motoko contracts, or launching the Next.js frontend). There is no integration guide for developers who might want to use the casino’s contracts or APIs, nor are there contribution guidelines, code‑style conventions, testing instructions, or a roadmap. While the formatting and grammar are generally solid, the missing core sections make the documentation insufficient for developers to get started or contribute, resulting in a rating of **2 – Poor**.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-01: Added comprehensive governance files (contributing guidelines, code of conduct, MIT license, issue‑report templates) and extensive multi‑blockchain deployment documentation for Aptos and ICP, alongside detailed deployment guides, canister architecture notes, and troubleshooting resources to improve onboarding and deployment clarity. Enhanced both mainnet and local deployment scripts with safety checks, authentication, balance verification, user confirmations, richer error handling, and cleaned up package metadata by removing unused scripts and dependencies. Refactored the project structure—moving frontend assets to a root public folder, consolidating configuration files, and pruning outdated documentation—to modernize the codebase and ready it for a Next.js implementation.",dfx.json file found - indicates ICP/Dfinity project structure
digitull/Socialwave2-2025-08-20-21653077507511,https://github.com/digitull/Socialwave2-2025-08-20-21653077507511/,3,2,1,6,"The README provides a solid high‑level overview of the project – a clear one‑liner, target audience, problem statement, feature list, differentiators, pricing, and some technical details about the ICP proof layer. The structure and formatting are clean, and the language is generally clear and free of major grammatical issues.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week we delivered a series of minor updates and bug fixes that refined existing functionality and improved overall stability. The changes address several small issues, resulting in smoother performance and a more reliable user experience. No new features were added, but the incremental improvements enhance the quality of the current product.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
akup/multicanister,https://github.com/akup/multicanister,3,1,1,5,"The README provides a solid project overview and fairly detailed local‑development setup instructions (installing pnpm, loading submodules, installing PocketIC, ic‑wasm, and didc). It explains the core canisters and the purpose of the Pocket IC Core Service, which gives readers a good sense of what the project does. However, the documentation lacks several key elements: there is no integration guide or usage examples showing how to interact with the REST API or the CLI, no instructions for building/running the services after installation, and no contribution guidelines (e.g., coding standards, testing, PR process). The file also ends abruptly during the `didc` installation section, indicating incomplete content. Minor grammar and typographical errors (“seemless”, “inhouse”, “t”) affect readability. Overall, the README covers the basics but is missing important sections and polish, placing it at a “Fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Implemented new CI/CD workflows, including a two‑stage canister deployment and Docker image building. Added tooling for SNS canister management—IC submodule integration, build scripts, and support for passing init arguments via files/YAML. Cleaned up debug code, updated comments and assets, improving overall maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
tarrpurra/Memantic,https://github.com/tarrpurra/Memantic,3,2,1,6,"The README provides a decent amount of setup information for local development—commands to start the replica, deploy canisters, create the required `.env` file, generate the candid interface, and run the frontend server. It also points to a contribution guide and includes a tech‑stack image.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the frontend configuration was simplified (dev mode always true, environment loading trimmed) and all routing imports were corrected to react‑router‑dom, while CSP headers were added to dfx.json for better security. The backend service received a major overhaul: a new _createAgent helper with detailed dev‑agent setup, direct idlFactory import, and expanded connection tests in BackendTest, improving local debugging and integration. Minor clean‑ups include removing the troubleshooting guide, dropping an unused Tailwind plugin, and updating dependency lockfiles.; Week of 2025-09-08: Documentation was updated and the deployment process was prepared for the upcoming release. The user interface received visual enhancements, and the authentication issue was fixed. Overall, these changes improve usability, reliability, and readiness for production.; Week of 2025-09-15: Voting-related code was optimized by reducing the outcall cycle budget and adding robust vote‑status checks, with the Marketplace and MemeCard components receiving refactored logic for safe ID handling and the Portfolio view now periodically refreshing meme vote counts. Authentication initialization was hardened to correctly restore stored identities, include a local‑development Internet Identity URL, and avoid treating the anonymous principal as a logged‑in user. These updates improve performance, UI responsiveness, and reliability of the voting and auth flows.; Week of 2025-09-22: Implemented a full feedback system—including new `Feedback` types, storage, admin APIs (approve, delete, list), a frontend `FeedbackForm` component, and queries for approved feedback and stats—plus unique‑user tracking with a `get_total_users` query. Updated the meme‑generation out‑call to a better AI model, added vote‑duplication protection, refined UI components across Landing, Portfolio, and Marketplace (new icons, stats displays, CSP tweaks), and streamlined AuthClient setup with a longer login TTL. These changes expand user interaction, improve data integrity, and enhance both backend functionality and frontend experience.",dfx.json file found - indicates ICP/Dfinity project structure
fraktal-app/fraktal,https://github.com/fraktal-app/fraktal,3,1,1,5,"The README provides clear **setup instructions for local development**, including cloning the repo, environment setup, dependency installation, DFX commands, and ngrok tunnels. It also includes a **tech‑stack table** and a **folder‑structure diagram**, which help readers understand the project's organization.",1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the Discord bot’s error logging was cleaned up for clearer output (services/discord-bot/bot.js). The backend API was refactored – the `/create‑user` endpoint was reformatted and additional routes were added to extend server functionality (src/backend/index.ts). The project README was also expanded with a concise description of Fraktal’s purpose (README.md).,dfx.json file found - indicates ICP/Dfinity project structure
zxfae/Qubex-Protocol,https://github.com/zxfae/Qubex-Protocol,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
AlexandriaDAO/daopad,https://github.com/AlexandriaDAO/daopad,3,3,1,7,"The README provides a solid high‑level description of the project, its motivation, and the overall architecture. It includes clear deployment steps for mainnet (prerequisites, cloning, identity setup, deployment script, and basic health‑check commands) and outlines current capabilities and future work.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we launched a revenue‑share system for ALEX token stakers and a per‑user LP‑locking canister, refreshed the frontend for greater stability, and completed a basic security audit, expanding staking incentives, improving liquidity management, and strengthening platform reliability. We also added Claude‑powered GitHub workflows for automated code review and PR assistance and separated the Konglocker component from the Daopad module, enhancing CI/CD automation, modularity, and maintainability. Together, these updates boost user incentives, security, and development productivity while streamlining the codebase.; Week of 2025-09-08: This week we introduced a new deployment workflow that removes the dependency on kong‑locker, added domain‑registration support, and delivered multiple UI enhancements across the frontend and the kong‑locker interface. We also added a V1 lock canister with a functional UI and basic API documentation, providing locking capabilities, and performed a frontend cleanup to improve code quality and UI consistency. Together, these changes streamline deployment, expand platform functionality, and enhance the overall user experience.; Week of 2025-09-15: This week we added DAO settings and user‑role management screens to the frontend and introduced a new voting flow that creates an Orbit wallet, complemented by backend support for Orbit integration and locked‑token wallet creation. UI components were migrated to the shadcn library, the backend was refactored to reference Orbit, and redundant documentation was cleaned up. These updates expand token‑management capabilities, improve the user interface, and streamline the codebase for easier maintenance.; Week of 2025-09-22: Implemented Poper proposal querying and added an address book for managing contacts. Introduced a new approval workflow that consolidates proposal handling with treasury actions. These changes enhance governance tooling and streamline user interactions.",dfx.json file found - indicates ICP/Dfinity project structure
SKant03/ICPad,https://github.com/SKant03/ICPad,3,2,1,6,"The README provides solid setup instructions for local development, including prerequisites, DFX installation, cloning, dependency installation, network startup, canister deployment, and frontend launch. It also details frontend and backend development workflows, network configurations, canister integration code snippets, and deployment steps, which are useful for integration. However, it lacks a clear, high‑level project description at the beginning, and the contribution guidelines are cut off and incomplete. While the structure and formatting are generally good, the missing introductory overview and unfinished contribution section are notable gaps, keeping the overall quality at a fair level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The marketplace was significantly upgraded with automatic creator‑ID fetching, template management, authentication requirements, enhanced UI (including better text wrapping, improved template cards, and search by creator name), and fixes to canister and Internet Identity integration. State management, error handling, and loading states were also refined, and a minor popup feature was added while fixing a rating‑feature bug. Overall, these changes improve usability, reliability, and the developer experience in the marketplace.; Week of 2025-09-08: We added a full Motoko compilation pipeline with real code analysis, parsing, WASM generation, and new UI components (CompilationResults, Terminal), while enhancing deployment logging, error handling, and fixing project creation, routing, and canister actor initialization. The ICPad application received major updates, including revised backend interface definitions, new backend functionality, and upgraded front‑end components such as the IDE page, Navbar, settings UI, IDE/Principal contexts, and refined canister service utilities. Additionally, we cleaned the repository by removing temporary files and merged ongoing work, delivering a smoother user experience and overall boost in system functionality.; Week of 2025-09-15: The week’s work centered on a major README.md overhaul, adding emojis, richer descriptions, clearer feature listings, and an updated architecture overview. No new code, files, or functional features were introduced. The impact is primarily improved documentation and presentation.",dfx.json file found - indicates ICP/Dfinity project structure
memeett/icp,https://github.com/memeett/icp,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Minor updates and fixes.; Week of 2025-09-08: This week introduced a loading‑overlay UI for the authentication flow, an AI‑powered chat feature, basic invoicing capabilities, and a new financial‑summary view for users. Existing components were refined: the real‑time chat system gained optimistic UI updates, bidirectional‑messaging bugs and a coin‑chat issue were fixed, UI tweaks and better error handling boosted performance, and minor housekeeping (e.g., .gitignore) was applied. Together, these changes expand functionality, improve reliability, and deliver a smoother user experience.; Week of 2025-09-15: We added a runtime file and introduced a `notCurrentUser` filter to the GetAllUser function for displaying freelancers, refactored the JobDetailPage component, updated documentation with a new README, and removed the aiAdvisor feature. UI/UX across several pages and the chat interface were refreshed, while authentication, file, import, and other bugs were fixed and unnecessary markdown files cleaned up. These changes enhance functionality, stability, usability, and overall code organization.",dfx.json file found - indicates ICP/Dfinity project structure
codemicah/megfi,https://github.com/codemicah/megfi,3,0,1,4,"The README provides a solid project overview, lists key features, and includes fairly detailed local‑development setup instructions (installing Rust and a C compiler, installing npm dependencies, starting the replica, deploying canisters, generating candid interfaces, and running the frontend). It also points to external documentation for the broader ICP ecosystem and notes environment‑variable considerations for the frontend.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
ReCheck-io/iob-log-service,https://github.com/ReCheck-io/iob-log-service,3,1,1,5,"The README provides a solid high‑level overview of the project—key features, what the service does, architectural components, and a clear directory layout. The description and feature list are well‑structured and the formatting is clean. However, it lacks essential practical information: there are no setup or installation instructions for getting the service running locally (no prerequisites, dependency installation, build steps, or Docker/NGINX configuration details). Integration guidance is limited to a generic description of how the service talks to the main IoB platform, but no concrete API usage examples, authentication setup, or endpoint documentation. There is also no contribution guide (no code style, testing, PR process, or contact information). Because the core project description is present but the critical developer‑oriented sections are missing, the documentation falls into the “Fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: A full Next.js front‑end for the tokenization service was introduced, replacing the placeholder `ui/.gitkeep` with a complete UI scaffold (config files, package manager setup, TypeScript config, CSS, and a dashboard with token pages). Hundreds of reusable UI components (buttons, dialogs, tables, charts, navigation, etc.) and related hooks/utilities were added to support token management and display. This adds a functional, styled user interface on top of the existing API and canister back‑ends.",dfx.json file found - indicates ICP/Dfinity project structure
vanisharma24/Orpheus,https://github.com/vanisharma24/Orpheus.git,4,2,1,7,"The README provides a solid project overview, clear feature list, and a well‑structured technology stack section. It includes thorough local development setup instructions—prerequisites, cloning, installing dependencies, starting the Internet Computer replica, deploying canisters, and running the frontend server. The development setup for both frontend and backend is detailed, and there’s a basic deployment guide for local environments.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week the front‑end was migrated to Vite, the project was renamed to “orpheus”, and routing was added via react‑router‑dom, introducing a full set of new pages (dashboard, workspace, community, wallet connection, project onboarding, settings, search, messages, etc.). New audio handling code (OrpheusAudioEngine and a useAudioEngine hook) and a CollabNavbar component were added, and the main App.tsx was refactored to use the new router and navigation. The README was cleared and the public video file renamed, completing the transition from the original hello‑frontend scaffold to a richer music‑collaboration platform.; Week of 2025-09-22: This week added a full $MUSE token system—including backend Rust structs, Candid IDL, Rust canister methods, and frontend API calls, UI components (TokenBalance, TokenTransfer, CollaborationRewards) and integration into the dashboard—while also introducing a new MusicWorkspace page and an ErrorBoundary wrapper for the app. Supporting changes include adding the ic‑stable‑structures crate, new service files, and extensive README/TODO updates. These enhancements expand Orpheus from a basic collaboration demo to a token‑enabled platform with improved error handling and a dedicated workspace.",dfx.json file found - indicates ICP/Dfinity project structure
kd-s-t/splitsafe,https://github.com/kd-s-t/splitsafe,3,3,1,7,"The README provides solid **setup instructions** for local development (environment setup, dependency installation, dev server start, scripts for setting balances, and testing/seeding procedures). It also lists the project's current features and upcoming roadmap, which gives some context about what the application does.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a hybrid ICP‑Pusher architecture that powers a full‑featured real‑time chat and notification system for escrow events—including messenger‑style bubbles, unread‑count tracking, QR‑code modal, AI‑assistant nickname parsing, fee summaries, an associates module, and a contacts contract—while consolidating authentication into a single context. The UI/UX was overhauled with the SplitSafe rebranding, messenger‑style chat UI, auto‑scroll, inline tooltips, loading skeletons, empty states, refined recipient handling, and extensive TypeScript/ESLint/Sentry/Husky clean‑ups that removed warnings and hard‑coded credentials. Together, these updates deliver faster, more reliable real‑time feedback, stronger security, and a markedly higher‑quality, polished user experience across the platform.; Week of 2025-09-08: This week we introduced major new functionality, adding basic‑ and milestone‑escrow pages, a ConfirmedEscrowDetails component, and a full Associates module with its backend contract, frontend hooks, and common ICP‑principal validation logic. Existing features were refined by fixing type and property errors, updating the contacts model, enhancing email notifications with a “nudge” button, and consolidating shared types, constants, and hooks for better maintainability. Security and code quality were hardened by moving Pusher credentials to server‑side environment variables via GitHub Actions‑driven SSM, eliminating public keys, and resolving numerous ESLint, TypeScript, and Motoko warnings, resulting in a cleaner, more stable, and secure build.; Week of 2025-09-15: We delivered a full milestone‑escrow system with contract‑file upload and signing flows, adding new schema fields, UI components (MilestoneStatusBadge, escrow overview, upload/download buttons) and backend type updates to support transaction variants, validation, and email notifications. We also hardened security and deployment by removing public secrets, tightening Pusher authentication, updating Terraform and CI pipelines, and fixing numerous TypeScript/ESLint issues while reorganizing the codebase and improving documentation. These changes dramatically improve escrow reliability, type safety, build stability, and overall developer and user experience.; Week of 2025-09-22: This week we added a new Regional Marketing demo video, standardized badge names, introduced toast‑notification UI elements with bug fixes, and made the Populate Test Data button available in production. Milestone management was significantly enhanced with inline editing of start dates and durations, automatic end‑date calculation, date‑picker UI and hover effects, and the feature table and documentation were expanded to cover Configuration, Scheduled Payment Release, Lifecycle Tracking, and Release Payment Tracking. We also resolved Motoko warnings, added a mainnet deployment script with updated dfx configuration, and updated the README to reflect these changes.",dfx.json file found - indicates ICP/Dfinity project structure
Jack0thy/Constellation_Protocol,https://github.com/Jack0thy/Constellation_Protocol,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
rishab36/parking-finder,https://github.com/rishab36/parking-finder,2,1,1,4,"The README provides a strong visual introduction, a clear project description, and detailed feature/technology tables, which give readers a good sense of what the application does and its tech stack. However, it lacks essential practical documentation: there are no step‑by‑step setup or local development instructions, no explicit “Getting Started” section, no detailed integration guide beyond a brief mention of a demo URL, and no contribution guidelines or code of conduct. Without these core elements, developers cannot easily clone, build, or contribute to the project, which makes the documentation incomplete despite its good presentation and grammar.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added comprehensive Internet Computer (ICP) integration for the parking app, including a Motoko canister with CRUD operations, a TypeScript ICP agent, a React demo component with real/mock data toggling, and full deployment documentation. Updated the README to detail the new blockchain features and installation steps. These changes enable persistent on‑chain parking data, real‑time availability updates, and satisfy the WCHL requirement for an IC component.",dfx.json file found - indicates ICP/Dfinity project structure
GeheshbabuD/cryptexid-website1,https://github.com/GeheshbabuD/cryptexid-website1,3,1,0,4,"The README provides clear setup instructions for local development (npm start, test, build, eject) and links to the official Create React App documentation, which makes getting the project running straightforward. However, it lacks a substantive project description—beyond the generic “Getting Started with Create React App” heading there’s no overview of what the application does or its purpose. There are no integration or usage guides for consumers of the code, and no contribution guidelines (e.g., how to submit issues or pull requests). The structure and formatting are clean and the language is grammatically sound, but the missing contextual and collaborative information limits its completeness, placing it at a “fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Four new GitHub Actions workflow files were added—`webpack.yml`, `npm-publish.yml`, `npm-publish-github-packages.yml`, and `static.yml`. These introduce automated build, npm publishing, GitHub Packages publishing, and static site deployment pipelines, extending the project’s CI/CD capabilities. No existing source files were modified.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
FundVerse499/FundVerse,https://github.com/FundVerse499/FundVerse,3,0,1,4,"The README provides solid **setup instructions** for local development, including DFX commands, deployment steps, and how to run both the backend and frontend. It also mentions environment‑variable considerations for the frontend. However, the **project description** is minimal—there is no clear explanation of what “FundVerse” does, its purpose, or its core features. There is no **integration guide** for consuming the canisters from other projects, nor are there any **contribution guidelines** (e.g., how to submit issues or pull requests, coding standards, testing procedures). The overall structure is clear and the formatting/grammar are acceptable, but the lack of these key sections limits the documentation’s completeness, placing it at a fair level.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
icdevs/evm-dao-governance,https://github.com/icdevs/evm-dao-governance,2,2,1,5,"The README provides a high‑level overview of the project’s purpose, architecture, and feature set, along with several nice diagrams that illustrate system components and user flow. However, it lacks the core elements that make documentation truly useful:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the project added full Sign‑In‑with‑Ethereum (SIWE) support: a new deploy‑siwe.sh script, a custom ic_siwe_provider canister entry in dfx.json, and fresh Svelte components (SiweLogin, siwe.js, wallet.js) together with upgraded frontend dependencies (ic‑siwe‑js, viem, newer DFINITY libraries). The token‑setup script was refactored to accept multiple MetaMask addresses, validate them, convert them to a JSON array, and improve error handling and forge‑availability checks. Legacy frontend_old files were removed and the .gitignore cleaned, streamlining the codebase.; Week of 2025-09-08: Added a new `dev-init.sh` script to streamline development setup and removed an unnecessary quorum configuration line. Fixed several frontend issues, notably addressing screen flashing caused by a reactive statements loop and other miscellaneous bugs. Overall, the changes improve developer onboarding and front‑end stability.",dfx.json file found - indicates ICP/Dfinity project structure
Reputation-DAO/Reputaion-DAO,https://github.com/Reputation-DAO/Reputaion-DAO,2,2,1,5,"The README provides a clear high‑level overview of the project, its use‑cases, key rules, technical design, and next steps, and it is well‑structured and reasonably free of grammatical errors. However, it lacks essential practical documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week a new “factoria” factory canister was introduced (added to dfx.json, new source file, test scripts, and a size‑optimisation flag) to enable scalable creation and reuse of child Reputation DAO canisters. The Reputation DAO child canister code was refactored—factory now encodes init arguments, hashing was switched to a wrap‑multiply FNV implementation, and unused boilerplate was removed—while a minor UI link in the Hero component was updated. Overall, the changes add a scalable deployment model and improve performance/maintainability of the reputation system.; Week of 2025-09-15: The team integrated a modern Tailwind‑based UI from the newUI branch, replacing the old frontend while preserving backend services, updating canister IDs and dependencies, and adding tsconfig path mappings. They also cleaned up duplicate source files, corrected import paths, and resolved merge conflicts, delivering an error‑free build. Minor updates and fixes further stabilized the codebase, resulting in a refreshed UI and a more maintainable, reliable application.; Week of 2025-09-22: Minor updates and fixes were applied throughout the codebase, refining existing functionality and enhancing overall stability. These improvements address small bugs and polish the current features, boosting reliability without adding new capabilities.",dfx.json file found - indicates ICP/Dfinity project structure
zeyadlotfy11/Asl-project,https://github.com/zeyadlotfy11/Asl-project,2,1,1,4,"The README provides a solid high‑level overview of the project—its purpose, vision, key achievements, and a detailed technology stack. The visual badges, live demo links, and a partial architecture diagram help convey what the system does and how it’s built.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week a full Flutter mobile application ( asl_flutter ) was added, introducing Android/iOS UI, Riverpod state management, GoRouter navigation, Hive caching, and complete ICP backend integration with new screens, services, models, providers, and widgets for authentication, artifacts, proposals, NFTs, profiles, and settings. The project documentation was expanded in README.md to include a mobile‑app section, a download link, and detailed architecture notes. Overall, the changes bring a new cross‑platform client to the existing web/Canister backend, dramatically extending the platform’s reach.",dfx.json file found - indicates ICP/Dfinity project structure
prp101/develo-dao,https://github.com/prp101/develo-dao,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
dickhery/ICP_Ad_Network,https://github.com/dickhery/ICP_Ad_Network,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Txrmarcos/TaaS,https://github.com/Txrmarcos/TaaS,2,2,1,5,"The README provides a decent high‑level description of the project’s vision, purpose, and key features, which satisfies the “general project description” criterion. However, it lacks essential practical information:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week a full tagging system was added: the backend Posts canister now defines a `Tag` variant, stores a `tag` field on each post, and its `createPost` method accepts a tag. The frontend was updated to support these tags – `TagCarousel` now includes a broader set of tag options with colors, the publish page lets users select a tag, and the news‑feed and profile pages parse and display tags (including handling both string and object forms). These changes enrich content categorization and improve the UI for creating and viewing tagged posts.; Week of 2025-09-22: Implemented a new tagging system for posts, covering both backend and frontend functionality. Fixed authentication issues to improve login reliability. These changes enhance content organization and user access stability.",dfx.json file found - indicates ICP/Dfinity project structure
Surya-531/SynapseMind-AgriAI,https://github.com/Surya-531/SynapseMind-AgriAI,3,1,1,5,"The README provides solid setup instructions for local development, including clear prerequisites, backend and frontend installation steps, and how to run both services together. It also contains a reasonable integration guide for the Internet Computer (ICP) canisters, explaining authentication, on‑chain logging, and deployment commands. However, it lacks a concise project overview or description that explains the purpose, goals, and high‑level functionality of the system. There are no contribution guidelines, licensing information, or instructions for testing and code style, which are typical components of comprehensive documentation. While the existing sections are fairly well‑structured and mostly free of grammatical errors, the omission of a project summary and contribution instructions prevents the documentation from reaching a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the project added two new AI advisory back‑ends: a Flask‑based crop‑recommendation service (croprec/*) and a Flask‑based yield‑prediction service (yieldprediction/*), each with their own model, feature‑column, encoder, and API files. Existing production data and model files were reorganized into a new cropproduction directory, and obsolete files (index.html, prodpredictor.ipynb, pubspec.yaml) were removed. The README was updated to reflect these new capabilities and the repository’s new structure.",dfx.json file found - indicates ICP/Dfinity project structure
Nimakra/Climatio,https://github.com/Nimakra/Climatio,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
khushi07707/smart-glasses,https://github.com/khushi07707/smart-glasses,2,1,0,3,"The README provides a thorough project description, vision, and outlines core functionalities, which is helpful for understanding the purpose of the smart glasses. However, it lacks essential practical information: there are no setup or installation instructions for developers, no guide on how to integrate or run the software locally, and no contribution guidelines for external collaborators. The document also ends abruptly, indicating incomplete content. While the language and formatting are generally clear, the missing sections constitute significant gaps, resulting in a poor overall documentation quality.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Added a new `Personal_Assistant.py` script (≈147 lines) to the “smart glass” project, introducing personal‑assistant capabilities to the existing suite of vision‑based notebooks and models. This is the sole change for the week, expanding functionality without modifying existing files.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Miabritacreations/Changa_DAO,https://github.com/Miabritacreations/Changa_DAO,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
ZenMachina16/CipherNest,https://github.com/ZenMachina16/CipherNest,4,0,1,5,"The README provides a solid project overview, clearly outlines core features, technical architecture, and includes detailed local development setup steps (prerequisites, cloning, building, deploying canisters, and running the frontend). It also documents the encryption implementation, message structure, and security processes, which serve as a useful integration reference for developers wanting to understand the internals. The formatting is clean, sections are well‑organized, and the language is generally clear and grammatically sound.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
nandini-2410/startup-,https://github.com/nandini-2410/startup-.git,2,0,0,2,"The README provides a very brief project description (“This project demonstrates a basic Hardhat use case…”) and a short list of example Hardhat commands. However, it lacks essential elements for comprehensive documentation:",No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
RhinoSpider/rhinospider_extension,https://github.com/RhinoSpider/rhinospider_extension,3,1,1,5,"The README provides a solid high‑level overview of the project, including a clear description of RhinoSpider’s purpose, a visual project‑tree, key feature lists, and links to additional documentation (main docs, extension overview, deployment, troubleshooting, admin guide, and services overview). It also lists production canister IDs and live application URLs, which is helpful for users and stakeholders.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the team introduced a full‑stack Enterprise Data Marketplace, adding a new Motoko canister (with assets) and a React frontend (catalog, dashboard, profile, purchase flow) that syncs directly with the existing admin canister for real dataset access. Supporting changes include updated canister configurations (dfx.json, canisters/dfx.json), storage‑canister authorizations, shared type extensions, deployment scripts, and README documentation with live URLs. The addition expands the project from an admin panel and extension to a marketplace platform, enabling users to browse, buy, and manage datasets via Internet Identity authentication.",dfx.json file found - indicates ICP/Dfinity project structure
AAK581/ic-carnage,https://github.com/AAK581/ic-carnage,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Implemented a basic token canister with minting and balance functions, added a local ICP ledger for testing token swaps, and introduced a foundational ICRC‑7 NFT system, updating the documentation accordingly. Added Git LFS support to the build pipeline for efficient large‑asset tracking and merged the latest changes from main to keep the repository current. These enhancements broaden token and NFT capabilities while improving asset management and keeping the codebase synchronized.; Week of 2025-09-22: This week the documentation was expanded to list accurate mainnet URLs for the frontend, backend, ledger, and NFT‑skin (ICRC‑7) canisters, and the `canister_ids.json` file was updated (and added) with the corresponding canister IDs. The backend constant for the CRNG ledger canister was corrected to the proper canister ID, and the README now includes detailed deployment commands for the ICRC‑1 token and ICRC‑7 skin canisters. Together these changes improve deployment guidance, enable correct mainnet interactions, and fix a hard‑coded canister reference.",dfx.json file found - indicates ICP/Dfinity project structure
BlockChainTechBrazil/PetID-ICP,https://github.com/BlockChainTechBrazil/PetID-ICP,2,2,1,5,"The README provides a nice visual overview of the project’s tech stack, roadmap, usage flow, and team members, and it is fairly well‑formatted with headings, tables, and checklists. However, it lacks several critical components required for solid documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Implemented a new Health module that adds a HealthPage, HealthForm/HealthFormCompact components, and UI updates (NavBar, MedicalPanel) for creating, viewing, and managing pet medical records. Extended AuthContext with session‑checking logic, a global healthRecords state, and a createBackendActor helper, and updated the Internet Identity candid interface to support generic OpenID configurations. Adjusted translations, environment variable handling, and related components (e.g., NFTPetsPanel) to integrate the new health functionality.; Week of 2025-09-08: Added a new feature to capture and display patients' medical history along with their vaccination records. This enhancement expands health data management, enabling more comprehensive patient profiles and better tracking of immunizations.; Week of 2025-09-15: This week we refactored the Infinity Canvas library and its core implementation to improve performance and maintainability, and added a new genealogy module together with a “Pet” domain document feature and UI enhancements to the document editor. We also refreshed the application’s icon set, updating iconography for clearer, more consistent visual design. These changes expand functionality, streamline core components, and polish the overall user interface.; Week of 2025-09-22: This week the team added production‑ready documentation (a full README, team images, and a final deployment guide) and removed debug console statements from many frontend components (HealthFormCompact, PetForm, MedicalPanel, NFTPetsPanel, PWA registration) while tightening environment variable handling in vite.config.js. The UI was refreshed with a rewritten PetIDCard component, updated PetIDLogo formatting, and a complete overhaul of the genealogy flow component, plus more robust form‑toggle logic in MedicalPanel. Together these changes clean up the codebase, improve production readiness, and enhance the user interface consistency.",dfx.json file found - indicates ICP/Dfinity project structure
Pratiksalunke19/OpenCritique,https://github.com/Pratiksalunke19/OpenCritique,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Implemented a full‑stack bounty system—including operational and transfer‑tested logic, ICP ledger integration, and a bug‑fix for accurate bounty balances—while also adding a CLI tool for creating and funding art escrow accounts. UI enhancements this week include marketplace updates, automatic hiding of the “Critique art” button for a user’s own pieces, and broader interface refinements, alongside the removal of obsolete zone files. Together, these changes improve financial reliability, streamline user workflows, and clean up the codebase.; Week of 2025-09-22: Implemented and refined core user interactions: added working like/purchase NFT logic and updated the reward‑critic feature, while enhancing profile fetching and the Mystudio UI. Updated the database schema to persist liked and bought NFT data. These changes improve functionality, data handling, and user experience across the platform.",dfx.json file found - indicates ICP/Dfinity project structure
AbdulrahmanFiala/chain_notary,https://github.com/AbdulrahmanFiala/chain_notary,3,2,1,6,"The README provides a clear project overview, outlines target users, describes the core functionality (document notarization and AI analytics), and includes contribution guidelines and a brief “Quick Start” section that lists prerequisites and points to a separate BUILD.md for detailed installation. However, it lacks concrete, step‑by‑step setup instructions within the README itself (e.g., commands to install the ICP SDK, build the project, run locally, or start the UI). There is no integration guide or API usage examples for developers who might want to embed the service in other applications. While the structure and formatting are generally good and the language is understandable, the missing detailed local‑development instructions and integration details prevent it from reaching a higher rating. Overall, the documentation is functional but incomplete, fitting the “Fair” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Implemented deterministic response handling with stable‑memory initialization and new admin capabilities (unlinking users and Internet‑Identity‑based user management) to strengthen reliability and control. Added numeric‑formatting for form inputs, a robust stable‑storage layer with upgrade‑persistence and graceful error handling to prevent data loss, plus WSL command‑execution rules, VSCode spell‑checking support, a token‑to‑document‑ID bug fix, and removal of the obsolete collection model. Renamed several utility functions for clearer naming, enhancing data handling, maintainability, and overall system stability.; Week of 2025-09-08: This week we added a comprehensive memory‑wipe tracking system with persistent IC logs and Discord webhook alerts, introduced a super‑admin feature for linking users to institutions, and built a new Redux‑based authentication layer integrated with Dfinity while also delivering profile, settings, and document‑history UI tabs behind a protected nested routing scheme. We upgraded the document retrieval API to return structured summaries via `get_documents_by_owner` (and a new `getDocumentsByOwner` service), refactored timestamp handling, centralized anonymous authentication logic, and improved canister lifecycle, logging, and deployment scripts. Additionally, we implemented Cypress testing configuration, a backend endpoint for principal IDs, fixed consensus reliability issues, and made configuration (API key) parameter‑driven, resulting in more reliable operations, richer data, stronger security, and better maintainability.; Week of 2025-09-15: Implemented a suite of new capabilities—including automated local deployment with identity setup, a full XBRL parsing and viewer, comprehensive user registration/authentication, an institutions dashboard with API services, a “whoami” query for Principal ID retrieval, and cycle‑balance monitoring with Discord alerts. At the same time, the team hardened CI/CD (GitHub Actions, DFX verification, frontend build steps), added a backend Candid interface, switched storage to bincode, disabled an expensive heartbeat, refined memory‑monitoring and logging, and overhauled linting, testing and documentation. These changes cut operational costs, boost deployment reliability and performance, and provide richer, more maintainable functionality for both administrators and end‑users.; Week of 2025-09-22: Minor updates and fixes.",dfx.json file found - indicates ICP/Dfinity project structure
emf99/zkSMT,https://github.com/emf99/zkSMT.git,3,1,1,5,"The README provides a solid project description, explaining the cryptographic concepts, the vision for zero‑knowledge SQL verification, and offering concrete examples of proof data and SMT usage. The sections are well‑structured and the language is clear, with good use of headings and emojis for readability.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Implemented a production‑grade Groth16 verification pipeline (using ark‑groth16 on the BN254 curve) that replaces the previous mock checks, adding full elliptic‑curve pairings, constraint validation and public‑input verification in the Rust backend. Introduced a suite of new aggregation circuits (count, sum, avg, group‑by, select‑where, etc.) together with corresponding WASM, ZKEY and verification‑key files, and extended both the backend API and the React frontend to generate, submit and verify these aggregation proofs. Added extensive documentation (README updates, multiple markdown guides) and utility scripts, turning the project from an educational demo into a fully functional, cryptographically secure ZK‑SMT system.",dfx.json file found - indicates ICP/Dfinity project structure
PostedApp/wchl,https://github.com/PostedApp/wchl,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
baolongt/dtrack-hackathon,https://github.com/baolongt/dtrack-hackathon,0,2,1,3,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Implemented product tagging on both the frontend and backend, added a searchable account dashboard, and renamed the “wallet” entity to “account” throughout the UI, accompanied by UI tweaks and miscellaneous bug fixes (including the add‑button). Minor updates and additional fixes were also applied across the codebase. These changes improve data categorization, navigation, terminology consistency, and overall stability.; Week of 2025-09-15: The transaction‑history hook was refined to show up to five decimal places for USD values (instead of the previous two), enhancing currency precision in the frontend’s financial displays.",dfx.json file found - indicates ICP/Dfinity project structure
multi-system/multi-ic,https://github.com/multi-system/multi-ic,4,2,1,7,"The README provides a solid project overview, clear setup and installation steps, and detailed instructions for running the project locally and executing both unit and end‑to‑end tests. The command reference is helpful and well‑formatted. However, it lacks explicit contribution guidelines (e.g., how to submit PRs, code style, branching model) and does not include an integration guide for consuming the library or canister from other projects. Adding those sections would elevate the documentation to an “Excellent” level. Grammar and formatting are generally good.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: This week added new reusable UI components (Dropdown, Select, Tooltip, Aurora) and refactored the wallet sidebar to pull live token prices from the history canister via a SystemInfo context, introducing related state, imports, and UI enhancements. Minor styling and code‑quality adjustments were also made to existing components such as BasketDisplay, MultiLogo, and the App wallet button layout. Overall, the updates improve frontend interactivity, price visibility, and maintainability.; Week of 2025-09-22: Implemented a fix for the wallet deposit calculation by refactoring `WalletSidebar.tsx` to use the existing `systemInfo.multiPrice` hook instead of custom price‑fetching logic, removing redundant state and simplifying token handling. This streamlines the component, improves accuracy of deposited amounts, and reduces unnecessary API calls. No new files were added or removed.",dfx.json file found - indicates ICP/Dfinity project structure
Alkamal01/cogni-icp,https://github.com/Alkamal01/cogni-icp,3,1,1,5,"The README provides a solid project overview, a clear list of features, and a fairly detailed “Quick Start” section that covers prerequisites, cloning, installing both frontend and backend dependencies, starting the local Internet Computer replica, deploying canisters, and running the development server. This satisfies the setup‑for‑local‑development requirement.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Added a new `cloudinaryService.ts` (86 lines) to handle Cloudinary uploads using environment‑based configuration, and updated the backend `lib.rs` to eliminate hard‑coded secrets, disable canister AI calls, and adopt the same env‑driven Cloudinary settings. These changes improve security, configurability, and reduce external AI dependencies across the project.",dfx.json file found - indicates ICP/Dfinity project structure
mangekyou-labs/oreka,https://github.com/mangekyou-labs/oreka,3,1,1,5,"The README provides solid **setup instructions for local development**, including prerequisites, step‑by‑step commands for starting the replica, deploying canisters, installing frontend dependencies, and running the dev server. It also documents a specific usage flow (creating a market) and important operational notes (cycle requirements).","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the market‑listing UI was overhauled to show the newest markets first and include a manual refresh trigger, with pagination logic updated in ListMarketsMui, ListAddressOwner, and the markets page. The Internet Identity candid interface was expanded with new types and configuration fields, and environment files were updated to reference new factory and ledger canister IDs, while several ICP image assets and Next.js dependencies were added. Documentation wording was also refined.",dfx.json file found - indicates ICP/Dfinity project structure
TharunBabu-05/smart_ticket_MTC,https://github.com/TharunBabu-05/smart_ticket_MTC.git,3,2,1,6,"The README provides a clear and well‑structured project description, outlining the purpose, key features, and technical architecture of the FareGuard application. The formatting is clean, headings are logical, and the language is generally free of grammatical errors. However, it lacks essential practical information needed for developers to get the project up and running: there are no setup or installation instructions for local development, no guide on how to configure the Firebase backend, Razorpay integration, or sensor communication, and no contribution guidelines (e.g., code style, pull‑request process, issue reporting). Because the documentation covers the high‑level overview but omits these critical operational details, it falls into the “basic documentation present but missing some important elements” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered full voice ticket‑booking support, integrating speech‑to‑text and text‑to‑speech capabilities, and expanded the app to run on iOS devices. We also refined and documented the iOS build workflows, fixing configuration issues to stabilize the CI/CD pipeline. These changes improve user interaction through voice, broaden platform coverage, and increase build reliability.; Week of 2025-09-15: This week we launched a suite of new features—including a comprehensive All Reviews system with analytics widgets, a live bus‑tracking screen with real‑time Google‑Maps markers and bottom‑sheet details, a Safety Features screen offering SOS alerts and live‑location sharing, an expanded weather module with OpenWeatherMap forecasts, recommendation logic, and a compact widget, ICP blockchain wallet integration for ticket purchases, and a Usage Analytics & Personalization dashboard for travel statistics and preferences. Core UI components were refined: HomeScreen received adaptive gradients and a new weather widget, ProfileScreen added avatar selection and Firebase‑backed editing, and unified theming was applied throughout, while extensive accessibility upgrades (font‑size adjustment, gesture navigation, high‑contrast preview) and code‑base refactoring improved usability and maintainability.",dfx.json file found - indicates ICP/Dfinity project structure
MazenMarei/Tal3a,https://github.com/MazenMarei/Tal3a,2,0,1,3,"The README provides a decent high‑level project description, branding, and a list of key features, which gives readers a sense of what Tal3a is and why it exists. However, it lacks essential practical information:",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
NMsby/rotatechain,https://github.com/NMsby/rotatechain.git,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Shardul0x/WCHL,https://github.com/Shardul0x/WCHL/tree/main,1,1,1,3,"The README provides only a brief, vague list of “creators” and a contributors section followed by a license notice. It lacks a clear project description, any overview of purpose or functionality, setup or installation instructions for local development, integration or usage guides, and contribution guidelines. The formatting is minimal and there are grammatical issues (e.g., “r creators”). Overall, the documentation is insufficient for users or contributors to understand, build, or work with the project.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week’s ten commits delivered a series of incremental updates and bug fixes that refined existing functionality and improved overall system stability. The changes addressed minor issues, optimized performance, and tightened edge‑case handling across several components. As a result, the product is more reliable and responsive for users.",dfx.json file found - indicates ICP/Dfinity project structure
InteliThreeGroup/Beneficios,https://github.com/InteliThreeGroup/Beneficios,2,1,1,4,"The README provides a good high‑level overview of the project’s purpose, core features, and value proposition, and it includes useful links to the business plan, pitch deck, and demo video. However, it lacks essential practical information:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the team added a full Python test suite for the backend canisters (benefits_manager, challenge_ai, establishment, wallet) and updated .gitignore to exclude test and virtual‑environment files. Canister configuration was expanded with new IDs for challenge_ai, llmo_home and reporting, the Bitcoin canister code was refactored with clearer utility functions and comments, and the challenge_ai context was made a stable variable. Documentation was also substantially improved, adding a detailed README summary, architecture diagrams, and a table of deployed canisters.",dfx.json file found - indicates ICP/Dfinity project structure
mrarejimmyz/AVAI-CannisterAgent,https://github.com/mrarejimmyz/AVAI-CannisterAgent,2,2,1,5,"The README provides a number of useful sections (configuration snippets, use‑case commands, troubleshooting, roadmap, and a brief contribution checklist), but it falls short of a complete documentation set.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we delivered a comprehensive UI revamp—including a modern, mobile‑friendly chat interface with optimized scrolling, sticky input, typing indicators, PDF viewer, new branding assets, and refined navigation icons—while adding streaming analysis‑report and security‑analysis features. On the backend we introduced Redis‑based queue monitoring with metrics and alerts, a Redis‑Canister bridge with async WebSocket support, and a full suite of AVAI host automation scripts for Docker setup, service installation, and trigger management, alongside extensive refactoring, stronger error handling, and CI/CD stability fixes for Vercel/Vite. Together these changes boost user experience, system observability, and deployment reliability, positioning the platform for production‑grade demos and future development.; Week of 2025-09-08: This week we introduced comprehensive automation agents for browsers, canisters, and GitHub, alongside a full AVAI Audit Engine with session handling, security‑finding extraction, PDF report generation, and new audit system types and utilities for repository analysis. We also added a complete Docker setup (Dockerfile, compose file, .dockerignore), production deployment scripts, a WebSocket server, the compiled frontend bundle, updated dependencies, fixed key Motoko backend interfaces, and cleaned out test files and redundant scripts. Together these changes broaden the platform’s automation and auditing capabilities, make the codebase production‑ready, and streamline deployment and developer onboarding.; Week of 2025-09-15: This week we introduced a hybrid AI engine architecture with dedicated canisters for advanced reasoning, tool‑calling, and a new VisionEngine (Llava support), complemented by a feature‑rich HTTP client, a Cloudflare‑tunnel bridge, and an AI Orchestrator that provides health checks, statistics, error handling, and integrated logging. We also added a WebSocket test interface for AVAI, Cloudflare tunnel support for the BrowserAgent, and new TaskRouter and UnifiedManager components that streamline prompt analysis, task routing, and multi‑agent coordination, alongside code refactors for readability. Together these changes greatly expand AI capabilities, improve observability and reliability, and simplify integration and testing across the platform.",dfx.json file found - indicates ICP/Dfinity project structure
KezzyNgotho/Nisto,https://github.com/KezzyNgotho/Nisto,4,1,0,5,"The README provides a solid project overview, clear highlights, and a well‑structured quick‑start section that covers prerequisites, frontend and backend local development steps, and environment variable setup. It also outlines core features, architecture, security considerations, production deployment status, and basic development scripts. Contribution guidance is present, albeit brief (fork‑branch‑PR and a reminder about secrets). The only notable gaps are a more detailed integration guide (e.g., how to consume the backend Candid interface from other services) and deeper contribution instructions such as coding standards, testing procedures, or a CODE_OF_CONDUCT. Grammar and formatting are generally good, making the document easy to read. Overall, the documentation is comprehensive and useful, but could benefit from a few additional details to reach an “excellent” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week introduced the entire Nisto codebase, adding backend Motoko canisters (MPCService, NistoToken, SwapService, VaultChat) with deployment scripts, HTTP‑outcall support, and related configuration files, alongside a comprehensive React frontend that includes wallet, swap, vault, notification, PWA, and social‑media integration components. Extensive documentation, utility modules, and service layers were also added to support development, testing, and deployment. These additions transform the repository from an empty state into a functional foundation for the Nisto platform.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
hirwaroger/MedSeal,https://github.com/hirwaroger/MedSeal,2,2,1,5,"The README provides a solid high‑level description of the MedSeal project, its goals, and its core features (patient crisis support, NGO funding workflow, community insurance pools, etc.). The writing is clear and the badge section and headings are well‑formatted, which helps readability.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: Added an Admin Module to enable system administrators to manage doctors and oversee the platform. Refactored the backend into a modular architecture to improve maintainability, and packaged Medseal as an installable Progressive Web App. Updated the documentation with a clear upgrade plan for Medseal.; Week of 2025-09-08: New admin, doctor, and NGO dashboards were introduced, featuring analytics, verification tools, and case‑management capabilities. An NGO module (user_type) was added, enabling patient case management and fund‑request workflows. Minor UI issues were also resolved.; Week of 2025-09-15: The verification workflow was upgraded, enhancing its reliability. Patient medication and prescription accessibility were improved, and a bug in the Patient Case Tracker was fixed, resulting in smoother case management. Overall, these updates strengthen core patient‑care functionalities.",dfx.json file found - indicates ICP/Dfinity project structure
ClyprLab/clypr,https://github.com/ClyprLab/clypr,4,0,1,5,"The README provides solid documentation for developers. It includes clear **setup instructions** for local development (prerequisites, deployment script, frontend build steps, and how to regenerate Candid declarations). A **project description** is partially conveyed through the Architecture Snapshot and the overview of components, though a concise high‑level summary at the very top is missing. The **integration guide** is well‑covered with example TypeScript code showing how to call the canister’s methods, resolve aliases, and handle Candid option types. However, the README lacks **contribution guidelines** (no section on how to submit issues, pull requests, coding standards, or testing). Overall the structure is logical, sections are clearly titled, and the formatting is readable with code blocks and bullet points. Minor improvements—adding a brief introductory paragraph and a contribution section—would elevate it to an “Excellent” rating.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
nikhlu07/H.E.L.I.X,https://github.com/nikhlu07/H.E.L.I.X,2,2,1,5,"The README provides an extensive, stylistic narrative about the project's vision, back‑story, and high‑level components, which gives a sense of purpose but offers little concrete technical information. Critical documentation elements are missing:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Minor updates and fixes.; Week of 2025-09-15: The week was dedicated to repository cleanup, deleting duplicate documentation (e.g., DEPLOYMENT_SUMMARY.md, INTEGRATION_GUIDE.md), corrupted install scripts, redundant deployment scripts, and duplicate environment/requirements files. This streamlines the project structure and makes navigation easier, without adding new features.; Week of 2025-09-22: This week the frontend was overhauled to add internationalization and cultural adaptation (i18next, translation hooks, CulturalWrapper, multilingual hero section, multi‑country demo and competition modes, and updated UI cards), while the demo‑mode service was rewritten to use universal, region‑aware role definitions and permissions. At the same time, a large cleanup removed obsolete docs, auth components, and old dashboards, introduced testing tooling (Vitest) and new dependencies (heroicons, etc.), and added a small utility module. The changes expand the platform’s multi‑region demo capability, improve user experience, and streamline the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
dhaniverse/dhaniverse,https://github.com/dhaniverse/dhaniverse,0,3,1,4,No documentation assessment provided.,"3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented a comprehensive ban management system—including UI components, AuthContext checks, MongoDB‑backed sessions, IP‑log storage, and redirects for banned users—alongside an AdminPage dashboard with real‑time player tracking, chat monitoring, and system status, plus enhanced connection handling and AFK detection. Added API‑driven balance loading, a mandatory asset loader with server‑side transaction hydration and analytics, upgraded chat and UI with character‑skin support, avatar customization, and persisted skin selections, and integrated real‑stock data via batch‑fetch services with validation, error fallback, and configurable symbol mappings. Polished the experience with new loading and header animations, intro disabling on specific routes, a RevealOnScroll component, a modern glowing video player, a globe icon addition, and assorted SVG and UI refinements.; Week of 2025-09-08: This week we added robust deployment tooling for frontend assets on the IC network and delivered a full Server‑Sent Events system with typed events, room management, subscription endpoints and integration tests, enabling real‑time stock data streaming and other live updates. We polished the UI with a smoother, real‑time minimap, enhanced GameHUD (online‑player tooltips, chat layout, animations, auto‑scroll) and optimized LocationTracker visibility updates, while refining NPC interaction text, onboarding flow, and repositioning the DesktopWarning component for better non‑desktop experience. Additionally, Vercel Speed Insights integration and dependency upgrades, along with cost‑estimation and cycle‑check safety measures, improve deployment reliability, performance monitoring, and overall user experience.; Week of 2025-09-15: New cross‑domain authentication was introduced, delivering JWT‑based login via Google, Magic Link and Internet Identity with HTTP‑only cookie sessions, expanded CORS origins, updated DID definitions, strict TypeScript typings, token‑refresh handling, production‑ready API URL management, and a version 1.2.0 release that also adds wallet/transaction management and achievement tracking. Front‑end work upgraded the MongoDB integration with official npm support, strict TS config and schemas, refactored imports and lazy‑loaded UI components, added navigation utilities and dedicated redirect pages, moved the landing page into a separate Next.js app, implemented analytics, SEO tweaks, dynamic API base‑URL handling, build‑script optimizations, and introduced a foundational HTTP client module. The price‑feed subsystem was refactored to use CoinGecko with robust error handling, new endpoints for historical price data, asynchronous snapshot fetching, CBOR‑encoded price‑history queries and a monitoring wrapper, greatly improving data acquisition reliability and insight.; Week of 2025-09-22: This week the team introduced a full‑featured API documentation system (docsRouter with HTML, JSON, and OpenAPI endpoints) alongside updated health‑check methods, README, contract description, and architecture diagram, greatly improving developer onboarding and visibility of backend services. They also added real‑time canister metrics and a new canister service for fetching stock and crypto data, refactored the fetching logic to use caching, and bolstered error handling, logging, and type safety across banking, transaction, and onboarding modules. Together, these changes enhance observability, reliability, and performance of the Dhaniverse Game backend.",dfx.json file found - indicates ICP/Dfinity project structure
tonybanks90/OmaxPro.Bitcoin,https://github.com/tonybanks90/OmaxPro.Bitcoin,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Legatia/DeFlow,https://github.com/Legatia/DeFlow,3,2,1,6,"The README provides solid setup instructions for local development, including prerequisites, cloning, deployment steps, and scripts for building and testing. It also outlines the project structure, lists supported DeFi protocols, and gives some business and security context, which helps a new user understand the scope of the project.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: The admin monitor panel was simplified for easier use, the team management module received updates, and communication within the admin‑pool was fixed, with a forthcoming update to the team structure.; Week of 2025-09-08: This week we refreshed the UI, updating the side‑menu bar and redesigning the Deflow canvas for a cleaner layout and smoother interactions. We also enhanced tokenomics by initializing the $Flow model, revising the tokenomic plan, and adding a usage‑limit setting, while hardening wallet connectivity to require seed‑phrase‑only access for better security. These changes improve the overall user experience, strengthen security, and provide more robust token‑management capabilities.; Week of 2025-09-15: This week the Deflow node structure was reorganized and the UI received visual improvements, including the removal of the glass‑reflection effect. An attempt to introduce defi templates was made but not completed, with next steps to verify the defi notes. Overall, the changes enhance usability and set the stage for further feature refinements.",dfx.json file found - indicates ICP/Dfinity project structure
AnnsuChoudhary/StarLab-Adventure,https://github.com/AnnsuChoudhary/StarLab-Adventure,2,1,1,4,"The README provides a decent high‑level overview of the project—its purpose, key features, tech stack, and the team behind it. However, it lacks most of the critical elements needed for useful documentation. There are no setup or installation instructions for getting the project running locally (e.g., required Node version, how to install dependencies, Firebase configuration steps, or how to start a development server). An integration guide is missing; there’s no information on how to connect the app to a Firebase project, configure authentication, or use the Firestore database. The “Folder Structure” section is empty, and there are no contribution guidelines, code style conventions, or instructions for submitting pull requests. While the formatting is clean and the grammar is fine, the omission of these essential sections makes the documentation insufficient for developers or contributors. Hence, it falls into the “Poor” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week introduced a new AR‑dispersion module (ardispersion.html, .css, .js) along with its 3‑D model (triangular_prism.glb) and supporting dfx.json, and added a complete achievement UI (newachiv.html, .css, .js). The Firebase initialization file was updated to restore the project’s configuration after a prior removal, and the newachiv.js file was cleaned of its hard‑coded credentials. Together these changes expand the app with AR functionality and achievement tracking while fixing the Firebase setup.",dfx.json file found - indicates ICP/Dfinity project structure
3bdoredaa2244/HarvestX_ICP_Hackathon,https://github.com/3bdoredaa2244/HarvestX_ICP_Hackathon,3,1,1,5,"The README provides a solid project overview, clear feature list, and detailed local‑development setup steps (prerequisites, installation, deployment, and environment variables). The general description and structure are well‑organized and the formatting is clean. However, it lacks several key elements needed for a higher rating: there are no contribution guidelines, no explicit integration guide for consuming the platform’s APIs or SDKs, and the API reference is incomplete (the table for farmer endpoints is cut off). While the existing sections are clear and grammatically sound, the missing contribution and integration information prevent it from achieving a “Good” rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: The week introduced the complete HarvestX application, adding a Rust backend canister (Cargo files, interface definitions, and core library code) and a full React/TypeScript frontend with Tailwind styling, routing, and a suite of reusable UI components. New pages such as farmer and investor dashboards, marketplace, listing creation, profile, and registration were added, alongside services for ICP integration and mock data. This initial push establishes the core infrastructure and user‑facing features for the African stage rollout.",dfx.json file found - indicates ICP/Dfinity project structure
torpadeka/mitra-chain,https://github.com/torpadeka/mitra-chain,3,3,1,7,"The README provides a clear and well‑structured project overview, including a strong description of the problem, solution, architecture, and user flow, and it uses good formatting and visuals. However, it lacks essential practical sections: there are no setup or installation instructions for running the project locally, no guide on how to integrate the platform or its APIs, and no contribution guidelines for developers who want to help. Because of these significant gaps, the documentation is only fair—it conveys the concept well but does not support developers in getting started or contributing.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: Implemented extensive UI refinements across the Home, Profile, and Register pages—including a new theme toggle, navbar fixes, and a placeholder for missing images—while streamlining the registration flow and correcting profile redirection when the user is null. Minor UI bugs were also resolved, improving visual consistency and overall user experience throughout the app.; Week of 2025-09-08: This week we delivered minor updates and fixes, refining existing functionality and addressing bugs to improve overall stability and performance.; Week of 2025-09-15: Implemented AI functionality while fixing a “user not registered” error, completed the NFT feature, and resolved issues in the authentication context. These changes enhance user onboarding, add new AI capabilities, and improve overall authentication stability.; Week of 2025-09-22: Added Plug wallet integration as a new feature and resolved bugs in Cloudinary handling and the franchise tab display, enhancing app functionality and stability. Minor updates and additional fixes were also applied across the codebase. Overall, these changes improve user experience and reinforce the reliability of existing features.",dfx.json file found - indicates ICP/Dfinity project structure
CharClub/marketplace,https://github.com/CharClub/marketplace,3,2,1,6,"The README provides solid local‑development setup instructions: it lists the necessary `dfx` commands, how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also includes a helpful note about frontend environment variables. However, the document lacks a meaningful project description—aside from a generic welcome message it does not explain what the CharclubMarketplace does, its architecture, or its core features. There is no integration guide (e.g., how to consume the canister APIs from other services) and no contribution guidelines (no code‑style conventions, issue‑reporting process, or pull‑request instructions). The overall structure and formatting are clear, and the grammar is acceptable, but the missing substantive sections keep the documentation at a “fair” level rather than “good” or “excellent.”","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: Added GitHub issue templates for bug reports and feature requests, and introduced a CONTRIBUTING.md file to guide contributors. These documentation additions enhance project onboarding and issue reporting processes without altering existing code.; Week of 2025-09-15: Removed the unused `call.md` file and refined the NFT detail page’s input handling: added empty‑value checks, stricter numeric validation, and ensured the listing price is stored as a string, plus minor cleanup of transfer‑related handlers and spacing. These updates improve data integrity and user experience without adding new features. Overall, the week focused on cleanup and polishing existing UI logic.",dfx.json file found - indicates ICP/Dfinity project structure
SudhanshuYadav174/AgriCart,https://github.com/SudhanshuYadav174/AgriCart.git,1,2,1,4,"The provided README fragment is extremely limited. It contains only a brief greeting, a single command (`npm run lint`), a note about conventional commits, and a short security note. It lacks a clear project description, any setup instructions for local development (beyond linting), integration or usage guides, and contribution guidelines. The overall structure is minimal, and there is insufficient information for a user or contributor to understand, build, or contribute to the project. Consequently, it falls into the “Very Poor” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: The week introduced the full AgriQCert application, adding a React front‑end with dozens of UI components and pages (dashboards, auth, certificate verification, etc.), Supabase backend functions, migrations, and a Motoko canister for the passport registry. It also added comprehensive deployment tooling for the Internet Computer, including .dfx local network configuration, PowerShell/batch/install scripts, and new npm scripts for local and ICP deployment. Together these changes establish the core product and enable building and deploying it to both a local DFX environment and the ICP mainnet.; Week of 2025-09-15: Implemented dual authentication by adding Internet Identity (ICP) support: introduced the `useICAuth` hook, updated environment variables and dependencies, and integrated IC auth checks into guards, header, role handling, and the exporter dashboard. Enhanced the login page with an IC login button and adjusted redirects to accommodate both Supabase and IC users. Minor internal file renames and timestamp updates were also applied.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/easydapp,https://github.com/easydapp,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
NeteamIndustry/Modl-Phownership,https://github.com/NeteamIndustry/Modl-Phownership,2,2,1,5,"The README provides a detailed overview of the Motoko canister API, CLI usage examples, and external watermark/verify endpoints, as well as a brief mainnet deployment snippet. However, it lacks several essential elements for comprehensive documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we rolled out a redesigned UI and added a “GetAll Verified Photos” feature, while completing the Motoko backend setup for verification and workflow management and removing an unused agent component. Minor updates and bug fixes were also applied. Together, these changes enhance the user experience, expand photo‑verification capabilities, and streamline the backend infrastructure.; Week of 2025-09-22: Updated the README.md with a comprehensive project overview, including detailed architecture diagrams, backend/frontend descriptions, deployment IDs, and prerequisite information. This documentation overhaul clarifies how the Motoko registry canister, Vite frontend, and external Python watermark/verify service interact. No code changes were introduced, so the functional impact is limited to improved developer guidance.",dfx.json file found - indicates ICP/Dfinity project structure
Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,https://github.com/Pranav-Marwaha-73/Medi_Verify_Counterfeit-Drug-Detection,3,0,1,4,"The README provides a solid high‑level overview of the project—clearly stating the problem, the proposed solution, and a step‑by‑step explanation of how the system works. The visual badges and introductory sections are well‑formatted and the language is generally clear.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
552020/futura_alpha_icp,https://github.com/552020/futura_alpha_icp,3,3,1,7,"The README provides a clear project description and fairly detailed local‑development setup instructions, including cloning with submodules, environment configuration, DFX startup, canister deployment, and how to run the Next.js front‑end. It also lists the deployed canister IDs and URLs, which is helpful for testing the live service.","3 - Commits every week. Weekly development summary: Week of 2025-09-01: This week we completed the migration of capsule, gallery, and memory storage to a unified capsule‑store API, introduced comprehensive CRUD endpoints (capsules, galleries, memories) with standardized `Result<T, Error>` error handling, and added new capabilities such as idempotent memory creation, `capsules_bind_neon` resource binding, and advanced gallery synchronization. We refactored modules, consolidated test utilities, expanded documentation, and removed obsolete code, resulting in a cleaner, more maintainable codebase with improved performance, reliability, and production readiness. Overall, the changes deliver full feature completeness, consistent APIs across backend and frontend, and a solid foundation for the next deployment phases.; Week of 2025-09-08: Implemented a new llama‑3.1‑8b‑dreams model with an OpenAI‑compatible completions endpoint (including a “completion kind” and thetaCompletions functions), updated demo routing, and cleaned up TypeScript/ESLint errors to deliver a production‑ready build. Added a fully type‑safe ICP inline memory creation flow with real backend calls, auth pre‑check, proper Result handling, SSR‑safe initialization, and IndexedDB build fixes, plus a database‑constraint audit script for Postgres schema‑drift detection integrated into CI. Minor updates and fixes rounded out the work, improving overall feature reliability, build stability, and operational readiness.; Week of 2025-09-15: Implemented a production‑ready Vercel Blob grant flow with ngrok integration, client‑side upload handling, a secure grant endpoint, automatic chunking, Sharp image processing, extensive documentation, and backend fixes (UUID type mismatches, JWT callback syntax, folder‑relation bugs, FormData double‑parsing). Added a unified `POST /api/memories` endpoint with a richer schema (tags, people, likes, comments) that overhauled the memory feature, and resolved a React hydration mismatch in Radix UI components while expanding error‑handling documentation. Together these changes provide a robust, scalable file‑upload solution, broaden social functionality, and markedly improve stability and developer experience.; Week of 2025-09-22: Documentation was reorganized: the root docs folder was removed and its files moved into src/nextjs/docs, and the README was restored to its detailed version after a brief simplification. IDE‑specific settings were cleaned up by deleting .vscode/settings.json and adding .vscode/ to .gitignore. No functional code changes were introduced this week.",dfx.json file found - indicates ICP/Dfinity project structure
nitinc264/WCHL-National-Round,https://github.com/nitinc264/WCHL-National-Round,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
onicai/funnAI,https://github.com/onicai/funnAI,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Ananya-Mittal/Elira_WCHL,https://github.com/Ananya-Mittal/Elira_WCHL.git,3,2,0,5,"The README provides a clear and well‑structured overview of the project’s vision, target audience, platform concept, key features, tech stack, and social impact. The formatting is clean and the language is generally grammatical. However, it lacks essential developer‑focused information: there are no setup or installation instructions for running the project locally, no integration or API usage guide, and no contribution guidelines (e.g., how to submit pull requests, coding standards, or issue reporting). Because the documentation covers the high‑level description but is missing these critical elements for contributors and developers, it falls into the “Fair” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: Added the new ""Elira"" feature, implementing both front‑end and back‑end components, and updated language support throughout the application.; Week of 2025-09-22: This week introduced a major UI overhaul for the seller experience: the dashboard component was refactored with new Recharts visualizations, dark‑mode support, collapsible sidebar, notifications and expanded state handling, while its old CSS was removed and replaced with a fresh style. The seller signup flow was redesigned with additional fields, password‑strength feedback, terms acceptance and a modern card layout, and the login redirect was updated to the new dashboard route. Supporting updates added new dependencies (es‑toolkit, recharts, TypeScript) and expanded the DigitalLearning component with a curated list of women‑entrepreneur videos.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
Mercatura01/TURNX,https://github.com/Mercatura01/TURNX,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
Y0sefTamer/care_link,https://github.com/Y0sefTamer/care_link,3,2,1,6,No documentation assessment provided.,"2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week a new Rust canister, **dashboard_backend**, was added—including its Cargo.toml, source code, candid interface, and canister ID file—and integrated into the workspace and dfx configuration. Supporting dependencies (e.g., ic‑stable‑structures) were added to Cargo.lock, and the project’s member list was updated to include the new backend. The changes introduce a dedicated backend service for the dashboard feature.; Week of 2025-09-15: This week we added full patient management to the dashboard—including create, update, and rename‑consistent delete capabilities—and enabled cross‑canister fetching of patients, nurses, and bookings to improve data synchronization. We also introduced a new booking system by annotating `confirm_booking` with `#[ic_cdk::update]`, fixing its candid interface, updating the `care_link_backend.did` definition, and refreshing the README for deployment readiness. Together, these enhancements expand core functionality, streamline inter‑service data flow, and prepare the platform for production use.; Week of 2025-09-22: This week the frontend was dramatically expanded with many new user pages—including Dashboard, NursesList, Booking, Messaging, Pharmacy, Shopping, Radiology, Medication Management, and related components—and corresponding admin messaging pages, with routes, navigation links, and UI updates to the Navbar, Footer, and DashboardSidebar to support them. New visual assets were added, the landing layout now includes a footer, and the AuthContext logout logic was tightened to clear local storage. The README was also rewritten to present a detailed problem statement, solution overview, and key feature list, reflecting the broader functionality now available.",dfx.json file found - indicates ICP/Dfinity project structure
EmekaAgara/rwa-app,https://github.com/EmekaAgara/rwa-app,3,1,1,5,"The README provides a solid project overview, lists key features, outlines the tech stack, and includes a clear project‑structure diagram. It also offers practical setup instructions for local development (dependency installation, dfx start, deployment, running the frontend server, and testing). However, it lacks several important elements: there are no contribution guidelines (e.g., code style, pull‑request process), no explicit integration guide for consuming the canisters or the AI agent, and limited details on required environment variables or configuration steps. While the overall clarity and formatting are decent, the missing sections prevent it from reaching a “good” rating. Hence it falls into the “fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week the Internet Identity integration was upgraded to use the new “https://id.ai” provider, reflected in the WalletConnect components and the InternetIdentity UI. The backend RWA actor was converted to a persistent actor and its state maps were made flexible, fixing a persistence bug. Additionally, a full copy of the main Motoko file was added to the repository to support these changes.",dfx.json file found - indicates ICP/Dfinity project structure
jaibhedia/stakecommerce,https://github.com/jaibhedia/stakecommerce,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
https://github.com/Appic-Solutions,https://github.com/Appic-Solutions,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
rxshil09/DAO_launcher_kit,https://github.com/rxshil09/DAO_launcher_kit,2,2,1,5,"The README provides a fairly detailed overview of the project's features and its backend/frontend folder structure, which is helpful for understanding what the system does and how it is organized. However, it lacks several critical components required for high‑quality documentation:","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we added an analytics and registry canister with platform‑metrics to the DAO launcher kit, delivering a full DAO analytics system that collects, reports, and documents usage data for better performance insight. We also introduced a DAO discovery and exploration feature on the explore route, enabling users to find and browse DAOs more easily. Minor bug fixes and refinements were applied throughout, improving overall stability and usability.; Week of 2025-09-22: Added support for an ICRC‑1/2 token ledger, introducing new token functionality to the project. Also performed repository cleanup by removing unused files. This enhances the system’s capabilities while streamlining the codebase.",dfx.json file found - indicates ICP/Dfinity project structure
evoker-labs/vex,https://github.com/evoker-labs/vex,2,1,1,4,"The README provides a solid high‑level description of the VEX platform, its problem space, solution, market opportunity, business model, and competitive advantages. The sections are well‑structured, clearly written, and formatted with headings, tables, and bullet points, which aids readability.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week we added several UI enhancements—including an embedded responsive YouTube pitch video, Tailwind CSS and Framer Motion styling, a smooth‑scroll navigation system, a new asset‑handling feature with a conditional‑class helper, and expanded the data schema with review‑platform models. The CI/CD pipeline was overhauled: broken PDF links were fixed, caching and SHA‑256 hashing were introduced to skip unnecessary builds, and a reliable GitHub Pages deployment workflow with proper permissions, artifact handling, and build‑output caching was implemented. Documentation, configuration, and dependency management were also cleaned up, improving build stability and the overall developer experience.",dfx.json file found - indicates ICP/Dfinity project structure
Ghostkeys-App/ghostkeys-app,https://github.com/Ghostkeys-App/ghostkeys-app,3,2,1,6,"The README provides a solid project overview, clear architecture diagrams, and a “Quick Start (Local Dev)” section that hints at setup instructions (Prerequisites, Run). It explains what GhostKeys is, its security model, and the core components, giving readers a good sense of the system. However, the setup instructions are incomplete in the excerpt (no concrete commands or step‑by‑step guidance), there is no dedicated integration guide for using the vault from other applications, and there are no contribution guidelines or instructions for developers who want to submit patches. The overall structure and formatting are clear, but the missing detailed onboarding and contribution information keep the documentation from reaching a higher rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week a Chrome‑extension MVP was added, providing background and content scripts, a popup UI, manifest and icons. The partner‑iframe embed was built out, including a new SDK, environment‑aware Vite configuration, updated bridge messaging, tighter CSP headers and an example demo. The main frontend gained a new IdpPopup component and route, expanded theme styles for the popup, and refined identity handling and build scripts.; Week of 2025-09-15: This week we rolled out extensive UI and profile enhancements—including a new settings overlay, redesigned pop‑ups, multi‑identity profile selection with logout/add‑profile modals and prompts for switching users—while also integrating a partner‑iframe feature and fixing login handling for special characters. We added robust data handling capabilities such as serializers, vault‑name syncing, encrypted serialization for both individual and global synchronization (including spreadsheet columns) and a new spreadsheet structure to support decryption. Finally, the build pipeline was rebuilt with scripted workflows, Junobuild‑DIDC integration, tag‑override support and cleanup scripts, delivering more reliable builds and a smoother development workflow.; Week of 2025-09-22: We promoted the pre‑prod build to production and released a Ghostkeys Chrome‑extension MVP featuring an updated popup UI, while fully integrating the external SDK and cleaning up unused code. The team also fixed the multi‑profile switching bug, refined spreadsheet data update/delete logic, and merged the SDK‑integration branch with a new Language Server Protocol summary. Documentation was refreshed with an updated table of contents, a vault sequence diagram, and LSP guidance, improving developer onboarding and overall system reliability.",dfx.json file found - indicates ICP/Dfinity project structure
mateussda/learn-on-chain,https://github.com/mateussda/learn-on-chain,3,0,1,4,"The README provides a clear project overview in Portuguese, lists the main canisters, and includes basic local‑development setup steps (starting DFX, deploying, installing frontend dependencies, and running the dev server). However, it lacks several key elements required for a higher rating: there is no integration guide or API usage instructions, no contribution guidelines (how to submit issues, pull requests, code style, testing, etc.), and the setup instructions are minimal (no mention of required Node version, DFX version, or environment variables). While the existing sections are reasonably clear and formatted, the omissions prevent the documentation from being considered “good” or “excellent.” Hence, it falls into the “fair” category.",0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
saheramr15/CargoTrace,https://github.com/saheramr15/CargoTrace,2,2,1,5,"The README provides a clear high‑level overview of the project—its purpose, key features, workflow, impact, and technology stack—so the general project description and overall clarity are good. However, it lacks essential practical information. There are no setup or installation instructions for running the code locally (e.g., cloning the repo, installing dependencies, configuring environment variables, building the smart contracts, or starting the frontend/backend). There is no integration guide explaining how external systems or users can interact with the platform (API endpoints, wallet connections, or how to submit customs codes). Contribution guidelines (how to submit issues, pull requests, code style, testing procedures) are also absent. Without these sections, developers cannot easily get the project up and running or contribute to it, which is a significant gap. Therefore, the documentation falls into the “Limited documentation with significant gaps” category.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered several minor updates and bug fixes across the codebase, improving stability and performance of existing features. While no major new features were added, these refinements enhance the user experience and reduce error rates.; Week of 2025-09-15: This week we introduced role‑specific dashboards (user and admin) with login support, added loan visibility to user wallets, enabled admins to fund canisters and approve loans using test tokens, and integrated Tailwind CSS for a modern UI foundation. We also refreshed the site’s content and visual design by adding “Why Choose Us”, updated “How It Works”, new problem/solution sections, hero‑section tweaks, animations, and extensive color and layout refinements while removing outdated navigation, footer elements, and unused CSS files. Collectively, these changes deliver functional enhancements for loan handling and authentication, streamline the interface, and markedly improve the overall user experience and code cleanliness.; Week of 2025-09-22: The week’s work comprised a series of minor updates and bug fixes that refined existing functionality and addressed stability issues. These changes improve overall reliability and performance across the product. No new features were introduced.",dfx.json file found - indicates ICP/Dfinity project structure
parimal-art/DeSocial,https://github.com/parimal-art/DeSocial,3,0,1,4,"The README provides a solid general project description, clear vision, problem/solution framing, feature list, tech‑stack overview, and a nice flow diagram, all well‑structured and grammatically sound. However, it lacks essential practical sections: there are no step‑by‑step setup instructions for local development (e.g., installing `dfx`, building the Rust canisters, running the React frontend, or configuring Internet Identity), no integration guide for consuming the Candid API, and no contribution guidelines (how to submit PRs, code style, testing, etc.). Because these key elements are missing, the documentation is only fair—presenting the high‑level concept but not enough to get developers up and running or to encourage community contributions.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
ColettoG/icp-ant-colony-optimization,https://github.com/ColettoG/icp-ant-colony-optimization,3,1,1,5,"The README provides clear local development setup instructions, including how to start the replica, deploy canisters, generate candid interfaces, and run the frontend server. It also mentions environment‑variable considerations for the frontend. However, it lacks a substantive project description—there is no explanation of what the “ant‑colony‑icp” project actually does or its purpose. There are no integration or usage guides beyond the basic commands, and there are no contribution guidelines, code‑of‑conduct, or instructions for external developers to extend or contribute to the project. The overall structure and formatting are decent, and the grammar is fine, but the missing high‑level context and contribution information keep it at a basic (fair) level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented runtime configurability for the Ant Colony Optimization backend by adding `setParameters` and `setDistances` methods and making algorithm parameters and problem space mutable, while also extending the `antColonyOptimization` service to return both the best tour and its cost. Updated the Motoko actor to expose these new functions and adjust internal state accordingly. These changes enhance flexibility and usability of the ACO service without adding or removing any files.",dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/icp-pulse,https://github.com/icp-pulse,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
SafeGiantJacket/CarbonX,https://github.com/SafeGiantJacket/CarbonX,2,1,1,4,"The README provides a decent high‑level overview of the project (goals, architecture, IoT and AI components) and includes some useful links to demos. However, it lacks essential practical information. There are no setup or installation instructions for getting the code running locally, no step‑by‑step guide for developers to build, test, or deploy the Motoko canisters, and no contribution guidelines (e.g., how to submit PRs, coding standards, issue reporting). Integration instructions are only implicit in the IoT section and are not presented as a clear “how‑to” for external developers. Overall the document is missing several critical sections required for a usable README, resulting in a limited documentation quality.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Implemented a suite of professional‑grade features, adding fractional credit handling, royalty logic, audit/history tracking, and metadata‑update endpoints across all canisters (Issuance, Marketplace, Registry, Retirement). Added extensive frontend UI components—including activity feed, notifications, batch actions, export/reporting, dark‑mode toggle, and a fractional marketplace panel—plus a canister‑actors library to integrate the new backend capabilities. Updated the README with a new pitch‑deck link and a “Final Add‑ons & Professional Features” section to document these enhancements.",dfx.json file found - indicates ICP/Dfinity project structure
RaghavNotFound/OOPS5_WCHL,https://github.com/RaghavNotFound/OOPS5_WCHL,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
TriplePanicLabs/grindurus-frontend-icp,https://github.com/TriplePanicLabs/grindurus-frontend-icp/tree/main,3,0,1,4,"The README provides a solid project overview, a clear directory layout, and fairly detailed local‑development and mainnet deployment instructions (including required tools, `npm install`, `dfx start`, and `dfx deploy`). It also describes the UI pages and their current status, which helps a new developer understand the scope of the frontend.",No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
https://github.com/xfusion-dev,https://github.com/xfusion-dev,0,0,0,0,Error during evaluation: list index out of range,Error during evaluation: list index out of range,Error during evaluation: list index out of range
lucas-surdo/mydrops,https://github.com/lucas-surdo/mydrops,3,1,1,5,"The README provides a clear project overview, a useful directory layout, and solid local development instructions for both mock mode and the real ICP backend, covering prerequisites and step‑by‑step commands. The formatting and grammar are clean. However, it lacks several key components: there are no contribution guidelines (e.g., how to submit issues or pull requests), no detailed integration guide or API reference for developers who want to embed or interact with the platform, and no instructions for deploying to a production environment. Because of these omissions, the documentation is functional but incomplete, placing it at a “Fair” level.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new `index.html` entry point and accompanying `styles.css` stylesheet, establishing the project's front‑end UI. Introduced a `vite.config.js` file to configure Vite for development and bundling. These additions lay the groundwork for a web interface and modern build workflow on top of the existing codebase.",dfx.json file found - indicates ICP/Dfinity project structure
gucorinthians/ICPInsurance,https://github.com/gucorinthians/ICPInsurance,2,1,1,4,"The README provides a very brief project description (“a minimal setup to get React working in Vite”) and includes useful code snippets for extending the ESLint configuration. However, it lacks essential documentation elements:","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: Added a new “loose‑envify” utility by introducing `cli.js` and `loose‑envify.js` and converting the project’s `package.json` into the corresponding npm package (name, version, bin entry, dependencies, scripts). This provides a fast, selective `process.env` replacer with a command‑line interface, expanding the repository beyond its original Motoko/HTML files. Overall, the week’s work focused on adding a new environment‑variable processing tool rather than modifying existing features.",dfx.json file found - indicates ICP/Dfinity project structure
crypdrag/HodlHut,https://github.com/crypdrag/HodlHut,3,2,1,6,"The README provides a solid project overview, highlighting the platform’s purpose, live demo links, deployed canister IDs, and a concise list of working features. It includes clear local‑development setup instructions (prerequisites, cloning, installing, and running the UI) and a brief note on how to run agent tests, which covers the basic “getting started” needs.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: This week we delivered a mobile‑first redesign across the app, adding a hamburger navigation overlay, integrated header, larger touch targets and accessibility labels, plus a new progressive‑disclosure staking experience in My Garden with an amount‑selection modal, expandable asset‑detail cards, real‑time balance/US$ values and a collapsible portfolio overview. We also enhanced the swap flow with an auto‑populated “From” asset dropdown, smart portfolio‑based filtering, persistent state, and refined UI elements (Tailwind v4 styling, updated icons, cursor fixes) while refactoring console statements, IIFEs and inline styles into reusable functions and Tailwind‑based CSS. These updates standardize token naming, eliminate technical debt, and dramatically improve mobile usability, consistency, and user confidence in staking and swapping features.; Week of 2025-09-15: This week we delivered a full professional order‑book UI (LimitOrderInput, OpenOrdersList, error handling, toast notifications, environment‑aware result indicators) with comprehensive Jest tests, polyfills and CI improvements, and introduced a new mobile‑first TransactionPreviewModal and compact DEX selector UI styled with Tailwind v4. We expanded the DEX integration layer by adding three adapters (ICDEX, ICPSwap, KongSwap) plus a weighted‑scoring DEXRoutingAgent, Plug‑wallet hooks, address validation, gas‑optimisation UI, and deployment‑ready canisters (HutFactory, MyHut), enabling real‑time quote fetching and large‑order support. Finally, we removed all Solana‑related code, consolidating the platform to a Bitcoin‑and‑Ethereum‑only six‑agent architecture, fixed critical TypeScript errors in Dashboard.tsx, and achieved a cleaner, more maintainable codebase aligned with DFINITY’s roadmap.; Week of 2025-09-22: This week we completed the mainnet launch of HodlHut, deploying both frontend and Motoko backend canisters (with .did interfaces) and adding the Smart Solutions system integrated with CompactDEX, while also fixing critical USDT swap‑route bugs and polishing the UI with a native‑withdrawal button. We introduced a robust demo‑mode portfolio featuring live balance updates, fee deduction, status‑bar tracking, zero‑balance warnings with correct Tailwind colors, and accurate L1‑withdrawal accounting, and we integrated ICPSwap, KongSwap, and ICDEX order‑book data using a unified slippage‑calculation model and dynamic UI alerts. Together these changes provide production‑ready functionality, greater transaction accuracy and safety, and a markedly improved user experience across the DEX ecosystem.",dfx.json file found - indicates ICP/Dfinity project structure
Darthpool9900/gap_project,https://github.com/Darthpool9900/gap_project,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
AbdoViper23/halaqa-Save,https://github.com/AbdoViper23/halaqa-Save,3,2,1,6,"The README provides a solid overview of the project’s features, technical architecture, technology stack, and a detailed look at the AI integration, which gives readers a clear sense of what the system does and how its components fit together. However, it lacks essential practical information: there are no step‑by‑step setup instructions for running the project locally (e.g., cloning the repo, installing dependencies, building the Rust canister, configuring environment variables, or starting the React dev server). There is also no section on how to contribute (code style guidelines, pull‑request process, testing, etc.). While the documentation is well‑structured and mostly free of grammatical errors, the missing setup and contribution guidance are significant gaps, keeping the overall rating at a “Fair” level.","2 - Commits every other week. Weekly development summary: Week of 2025-09-08: A full React frontend was added (lower‑case frontend/), including a Vite setup, Tailwind config, and a large UI component library, plus new pages for Index, Login, NotFound, and a complete Wallet UI (BalanceCard, PromoCard, TokenList, Sidebar, TopBar). The existing App routing was updated to expose “/login” and “/wallet” routes, the login page now features a DotGrid animated background and a button that navigates to the wallet page, and the DotGrid background was removed from the main App layout. .gitignore and dfx.json were expanded to handle the new frontend assets and declarations, integrating the new UI into the overall project.; Week of 2025-09-15: The DotGrid component’s canvas scaling bug was fixed by forcing a device‑pixel‑ratio of 1, improving visual consistency. The OGL graphics library was added to the frontend dependencies (package.json and lockfile) to enable future WebGL rendering features. Together, these updates refine rendering behavior and expand the project’s graphical capabilities.; Week of 2025-09-22: A full new frontend project was added, bringing dozens of React/TypeScript pages (Login, Wallet, Transfer, etc.), a comprehensive UI component library (accordions, dialogs, charts, menus, token list, hyperspeed effects, etc.), and all related configuration files (vite, tailwind, tsconfig, package.json). The .gitignore was expanded to cover the new frontend folder and a hot‑fix commit added environment variable definitions to the Vite config. Together these changes introduce a functional wallet UI and reusable component suite, dramatically extending the application’s front‑end capabilities.",dfx.json file found - indicates ICP/Dfinity project structure
Panorama-Block/zico_agents,https://github.com/Panorama-Block/zico_agents,3,1,1,5,"The README provides fairly detailed setup instructions for local development (installing dependencies, running the server, health checks, and example API calls) and describes the project's capabilities through business use cases, technical feature lists, and performance metrics. However, it lacks a clear, concise project overview at the top, does not include any contribution guidelines, and the structure feels fragmented (e.g., the opening line “vicorn src.app:app --reload --port 8000” appears out of context, and sections seem abruptly cut off). While the existing content is useful, the missing introductory description and contribution information prevent it from reaching a higher rating.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Implemented a complete hackathon workflow, adding core functionality for event management and updating the README to document the new capabilities. Minor updates and bug fixes were also applied across the codebase. These changes expand the product’s feature set while improving stability and keeping documentation current.",dfx.json file found - indicates ICP/Dfinity project structure
amrshaker000/origin_trace,https://github.com/amrshaker000/origin_trace,3,0,1,4,"The README provides a detailed overview of the project's features, design system, and future roadmap, and it includes basic deployment commands and a brief contribution workflow. However, it lacks essential setup instructions for local development (e.g., cloning the repo, installing dependencies, running the dev server) and does not contain a clear project description or purpose statement. There is also no integration guide for using the Web3 components or connecting to the ICP canisters. While the contribution steps are listed, they are very high‑level. Overall the documentation is organized and well‑formatted, but the missing setup and integration details keep it at a “fair” level.",0 - no commits. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
calimero-network/MeroDocs,https://github.com/calimero-network/MeroDocs,2,1,1,4,"The README provides a solid project overview, describing the purpose of MeroDocs, its privacy‑first architecture, key features (private workspace, shared agreements, signature library, ICP hash verification, AI legal chatbot), and links to the live app and canister interfaces. The structure and formatting are clear and the language is mostly grammatical.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-15: This week we added a new ai_document_analysis canister that performs chunked contract analysis and provides document‑embedding and similarity‑search capabilities. We also delivered a Legal Chatbot with PDF‑embedding, LLM integration, and improved identity resolution and response formatting. Finally, the canister directory structure and deployment workflows were refactored and enhanced with verification steps, better error handling, and streamlined build processes.",dfx.json file found - indicates ICP/Dfinity project structure
ICPWorkOfficial/backend-canisters,https://github.com/ICPWorkOfficial/backend-canisters,0,0,0,0,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,No dfx.json file found - may not be using standard ICP/Dfinity development tools
samar-ux/I-dev,https://github.com/samar-ux/I-dev,2,2,0,4,"The README provides a solid project overview, feature list, and detailed Web3 payment‑gateway configuration examples, which are useful for understanding what the platform does. However, it lacks critical documentation elements required for a developer to get the project up and running locally: there are no installation or setup instructions, no “Usage” guide, and the “Installation & Setup” heading listed in the table of contents is never actually fleshed out. Contribution guidelines are also missing, and the licensing information is only shown as a badge without a link to a LICENSE file or contribution policy. Overall the structure is clear and the Arabic/English mix is consistent, but the missing sections constitute significant gaps, resulting in a poor rating.","2 - Commits every other week. Weekly development summary: Week of 2025-09-15: We launched a multi‑channel shipment‑confirmation system and a full‑feature shipping & delivery platform that leverage Web3 and blockchain technology while adding Arabic, English, and French language support with a new language‑switch component. The registration flow was upgraded with four verification options (World ID, MFA, KYC/AML, ICP), a home‑page redirect on logout/refresh, UI polish, and refined translation controls, and we introduced a comprehensive Web3 payment suite (Ethereum, Polygon, BSC, ICP, DeFi, NFT, cross‑chain bridges, escrow) together with an AdminDashboard for user management, monitoring, and analytics. These additions dramatically improve global accessibility, security, and operational oversight across the platform.; Week of 2025-09-22: Added a new SocialMediaLinks component and integrated it into HomePage.jsx and Layout.jsx to display social media links in the UI and navigation bar. Updated documentation (added CHANGELOG.md, expanded README) and enriched package.json with full project metadata, keywords, author, repository, and licensing details. Refined the build setup in vite.config.js to use esbuild minification with console/debugger removal, reverted the Internet Identity PIN changes, and cleaned up obsolete build assets.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
aliscie2/oDoc,https://github.com/aliscie2/oDoc,3,2,1,6,"The README provides a solid project overview and a decent quick‑start guide (prerequisites, cloning, a one‑command deployment, port configuration, and how to run the app locally). The tech stack and architectural details are also well‑described, and there are helpful video links.","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week we introduced richer email notifications with skeleton loading states and detailed inbox previews, added a badge‑style notification layout, and refreshed the landing‑page logic, metadata, and SEO tags. We also overhauled the UI—simplifying theme configuration, typography, spacing, and responsive layouts while enhancing animations for the meeting scheduler, AIConversationStep, CryptoAgreementStep, and a new jellyfish‑eye effect—and fixed loading and 404 handling on the file‑content page with added null checks. Together, these changes boost visual consistency, performance, stability, and search visibility across the application.; Week of 2025-09-08: We added SEO enhancements (structured‑data job‑posting and FAQ schemas plus an ICP‑jobs‑focused landing‑page title), a dynamic credit‑calculation UI, a CallToActionStep component with job‑seeker/employer cards, an extensible LoginButton, the ask_ai utility for centralized Groq AI requests, and refreshed branding assets with a makefile‑driven generation command.  

We migrated the AI backend from Anthropic to Groq Llama models, introduced retrieval‑augmented generation for the chatbot (semantic search of white‑paper and job‑matching docs), aligned credit handling across frontend and backend, and updated the job‑matching service to use the new utility.  

These changes improve search discoverability, provide accurate usage billing, enrich AI interactions, streamline authentication and UI flows, and leave the codebase cleaner and more maintainable.; Week of 2025-09-15: This week the team rolled out major UI/UX upgrades, adding context‑aware chatbot features (isLatestMessage control, auto‑complete typing animations, richer bubble handling and user‑type‑based welcome messages) and a redesigned job‑search experience with quality indicators, empty states, and improved match‑card interactions. New functionality was introduced, including USDC conversion in the wallet, SEO/FAQ pages, affiliate‑ID support in registration, and a unified Google Calendar component with timezone handling, while theme components were refined for light/dark modes and chip variants. Refactors for type safety, better state handling, and added error handling/validation also boost overall code robustness.",dfx.json file found - indicates ICP/Dfinity project structure
diwanmuhamad/neuronet-dao,https://github.com/diwanmuhamad/neuronet-dao,2,2,1,5,"The README consists almost entirely of ASCII architecture diagrams. While the diagrams give a high‑level view of the system’s components (Next.js server, S3 storage, Internet Computer canisters, and a future Rust/Axum backend), there is no accompanying prose that explains the project's purpose, goals, or overall architecture in narrative form. Crucially, the README lacks:","2 - Commits every other week. Weekly development summary: Week of 2025-09-01: This week the team refactored the star‑rating UI into a shared StarRating component (adding a totalRatings prop) and replaced direct next/image usage with a reusable SecureImage component across the marketplace sections. FeaturedSection and TrendingSection were cleaned up to import these common components, added image‑error handling, and now display rating counts consistently. The changes improve code reuse, UI consistency, and robustness without altering the overall feature set.; Week of 2025-09-08: This week we introduced detailed item and profile pages with updated routing and titles, added category support—including data fetching and a filter UI—and implemented search functionality for easier item discovery. We also began migrating the marketplace page to a new structure (migration step #1) and applied miscellaneous fixes. Together, these changes improve navigation, enhance discoverability, and set the foundation for further marketplace upgrades.; Week of 2025-09-15: This week we introduced several major features—including an AI agents chat, a shopping‑cart system, on‑chain verification, expanded image support across the marketplace and new home section, plus updated font and item UI—while also adding a new home area and improving mobile image visibility. We refactored the profile page for better structure and performance, wrapped the update‑item component in a Suspense boundary, removed the libsql dependency, and applied numerous mobile UI fixes and documentation refreshes. Together, these changes boost conversational and e‑commerce capabilities, enhance security and performance, and improve overall usability on both web and mobile platforms.; Week of 2025-09-22: Implemented a duplicate‑check bypass for item updates and refined the AI output checker to improve validation accuracy and edge‑case handling, boosting the reliability of AI‑generated responses. UI enhancements include fixing chat scrolling glitches, adjusting user text color for better readability, and updating documentation to reflect these changes. Together, these updates deliver a smoother user experience and more dependable AI functionality.",dfx.json file found - indicates ICP/Dfinity project structure
DannyVRSE/CLM,https://github.com/DannyVRSE/CLM,2,1,1,4,"The README provides basic setup instructions (cloning the repo, installing npm packages, and running a deployment script) which is helpful for getting a local instance running. However, it lacks a clear project description that explains the purpose, scope, or high‑level architecture of the system. There are no integration or usage guides beyond the brief “Examples” sections, which describe business flows but do not show how to interact with the code (e.g., API endpoints, command‑line usage, or UI steps). Contribution guidelines are entirely absent—there is no information on how to submit issues, pull requests, coding standards, or testing procedures. Overall, the documentation is sparse, missing several of the core elements expected for a well‑documented project, leading to a rating of 2 (Poor).",1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Minor updates and fixes.,dfx.json file found - indicates ICP/Dfinity project structure
Kyrylog/proof-of-recycling,https://github.com/Kyrylog/proof-of-recycling/,3,1,1,5,"The README provides a solid general description of the project and fairly detailed local‑development setup instructions, including Makefile usage, manual `dfx` commands, and frontend build steps. The structure is clear with headings and bullet points, and the main purpose of the application is well explained.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Added a new Market page to the frontend, introducing MarketFilters, MarketGrid, and MarketPage components along with an index file. These files provide UI for filtering and displaying items in a grid layout, expanding the app’s marketplace functionality. No existing files were modified or removed, so the change solely adds this new feature.",dfx.json file found - indicates ICP/Dfinity project structure
sambhavverma2004/Sentinel-ICP,https://github.com/sambhavverma2004/Sentinel-ICP/tree/main,0,1,1,2,No documentation assessment provided.,"1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: The week introduced a complete full‑stack scaffold: a TypeScript backend with shipment and supplier models, controllers, routes, seed data, and server setup, plus all necessary configuration files. The React frontend was populated with core UI components—including an analytics dashboard, blockchain view, product form, QR‑code generator/scanner, role switcher, and timeline view—along with utilities, types, and build configs. Together these additions establish the foundational API, data layer, and user interface for the new application.",dfx.json file found - indicates ICP/Dfinity project structure
Deepakraj522/HoloHealth---An-AI-Driven-Medical-Assistant-Redefined-Version-,https://github.com/Deepakraj522/HoloHealth---An-AI-Driven-Medical-Assistant-Redefined-Version-,3,1,0,4,"The README provides a solid general project description, outlines key features, describes the architecture, and shows a partial project structure, which gives readers a good high‑level understanding of HoloHealth. However, it lacks essential practical information: there are no setup or installation instructions for running the frontend or backend locally, no guidance on configuring APIs or environment variables, no integration or usage guide, and no contribution guidelines. While the formatting and grammar are clear, the missing sections are critical for developers who want to get the project up and running or contribute, so the documentation falls into the “fair” category.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: The week delivered the complete initial version of the HoloHealth AI Medical Assistant, adding a full React/Tailwind frontend, a Flask backend with ML model assets, Firebase integration, and extensive datasets and Jupyter notebooks for symptom‑disease analysis, doctor matching, and mental‑wellness tools. Over 200 new files were introduced—including configuration, context, UI components, API routes, model pickles, and documentation—establishing the core architecture and core features such as AI symptom analysis, appointment booking, and health dashboards. This foundational commit sets up the entire application stack for further development.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
smirk-dev/BharatChain,https://github.com/smirk-dev/BharatChain,2,1,0,3,"The README provides a strong high‑level description of the project and its features, but it lacks the essential practical information needed for developers. There are no concrete setup instructions for getting the application running locally (e.g., prerequisites, installation steps, environment configuration, Docker usage, etc.). An integration guide is absent; while the “Government Integration Features” section lists services, it does not explain how a developer or a third‑party system should integrate with the platform or consume its APIs. There is also no contribution guideline—no information on code style, pull‑request process, issue reporting, or licensing. Overall, the document is well‑formatted and grammatically sound, but the missing setup, integration, and contribution details constitute significant gaps, resulting in a rating of 2.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: This week the platform added a suite of secure government‑focused APIs—including payments, services, compliance, encrypted data‑exchange, open‑government datasets, and blockchain‑backed citizen and grievance management—plus mobile authentication, offline sync, QR‑code handling, broadcast/chat routes, and real‑time monitoring services. Existing components such as the dashboard, citizen module, and UI were expanded with new tabs, responsive grid refinements, blockchain integration, enhanced observability endpoints, and polished assets, while dependency upgrades and lazy‑loading of heavy ML libraries (e.g., bcrypt, jsonwebtoken, TextBlob) improved stability, performance, and security. Collectively, these enhancements dramatically increase functionality, reliability, and developer onboarding, enabling end‑to‑end government transactions, robust data handling, and a smoother user experience.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
CypherChaser/Decentralized_Online_Voting_System_New,https://github.com/CypherChaser/Decentralized_Online_Voting_System_New,0,0,1,1,No documentation assessment provided.,No commits found during hackathon period.. No weekly development activity to summarize.,dfx.json file found - indicates ICP/Dfinity project structure
Ray-5106/EchoLedger-Regional-Round-,https://github.com/Ray-5106/EchoLedger-Regional-Round-,1,1,0,2,"The provided README consists only of a title line (“# EchoLedger-Regional-Round- Version 3.0”) and contains no substantive information. There are no setup instructions for local development, no general description of what the project does, no integration or usage guide, and no contribution guidelines. The lack of any explanatory text, formatting beyond a single heading, or grammatical content means the documentation does not meet any of the criteria for a higher rating. Consequently, the documentation quality is assessed as **Very Poor**.","1 - 1 or 2 commits. Weekly development summary: Week of 2025-09-22: Added a basic README.md file providing initial documentation, and uploaded an ECL.zip archive (likely containing project resources). No code modifications or feature updates were made beyond these file additions.",No dfx.json file found - may not be using standard ICP/Dfinity development tools
